<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>爱编程爱技术的孩子 on songdehua blog</title>
    <link>http://localhost:1313/categories/%E7%88%B1%E7%BC%96%E7%A8%8B%E7%88%B1%E6%8A%80%E6%9C%AF%E7%9A%84%E5%AD%A9%E5%AD%90/</link>
    <description>Recent content in 爱编程爱技术的孩子 on songdehua blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E7%88%B1%E7%BC%96%E7%A8%8B%E7%88%B1%E6%8A%80%E6%9C%AF%E7%9A%84%E5%AD%A9%E5%AD%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hugo搭建个人博客6-CDN加速</title>
      <link>http://localhost:1313/2023/using-hugo-to-build-personal-blog-6-cdn/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/using-hugo-to-build-personal-blog-6-cdn/</guid>
      <description>&lt;p&gt;个人博客用的是 Github Pages 服务，国内访问实在是太慢了，于是想用 CDN 做加速。&lt;/p&gt;&#xA;&lt;h2 id=&#34;cdn介绍&#34;&gt;CDN介绍&lt;/h2&gt;&#xA;&lt;p&gt;CDN 全称为 Content Delivery Network，中文名为内容分发网络，以下介绍来自&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;加速原理&#34;&gt;加速原理&lt;/h3&gt;&#xA;&lt;p&gt;假设您的业务源站域名为 &lt;code&gt;www.test.com&lt;/code&gt;，域名接入 CDN 开始使用加速服务后，当您的用户发起 HTTP 请求时，实际的处理流程如下图所示：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://qcloudimg.tencent-cloud.cn/image/document/9a8c5981e10ba9f5fa35378ecd00f22b.png&#34; alt=&#34;CDN加速原理&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;详细说明如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;用户向 &lt;code&gt;www.test.com&lt;/code&gt; 下的某图片资源（如：1.jpg）发起请求，会先向 Local DNS 发起域名解析请求。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;当 Local DNS 解析 &lt;code&gt;www.test.com&lt;/code&gt; 时，会发现已经配置了 CNAME &lt;code&gt;www.test.com.cdn.dnsv1.com&lt;/code&gt;，解析请求会发送至 Tencent DNS（GSLB），GSLB 为腾讯云自主研发的调度体系，会为请求分配最佳节点 IP。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Local DNS 获取 Tencent DNS 返回的解析 IP。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;用户获取解析 IP。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;用户向获取的 IP 发起对资源 1.jpg 的访问请求。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;若该 IP 对应的节点缓存有 1.jpg，则会将数据直接返回给用户（10），此时请求结束。若该节点未缓存 1.jpg，则节点会向业务源站发起对 1.jpg 的请求（6、7、8），获取资源后，结合用户自定义配置的缓存策略，将资源缓存至节点（9），并返回给用户（10），此时请求结束。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;加速原理类比说明&#34;&gt;加速原理类比说明&lt;/h3&gt;&#xA;&lt;p&gt;CDN 的原理类似增加了仓储模式的网购过程（商家 = 源站；买家 = 用户；仓库 = CDN 节点）： 早期网购的方式是商家直接给全国各地的买家发送商品，送货时间受商家和买家的物理距离影响，距离长的自然送货时间就长；为解决该问题，网购平台在全国各省建设好仓库，商家将商品提前放到各省的仓库中，之后买家购买的商品就可以选择就近的仓库发货，有效减少了送货时间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>U盘只读状态清除</title>
      <link>http://localhost:1313/2021/clear-usb-falsh-disk-read-only-status/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2021/clear-usb-falsh-disk-read-only-status/</guid>
      <description>&lt;p&gt;U盘变只读是经常出现的情况，以前都是使用写保护开关，一旦没有开关就毫无办法，今天又遇到这种情况，解决问题后这里总结一下解决办法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang学习资料</title>
      <link>http://localhost:1313/2021/golang-learning-materials/</link>
      <pubDate>Mon, 05 Jul 2021 19:13:00 +0800</pubDate>
      <guid>http://localhost:1313/2021/golang-learning-materials/</guid>
      <description>&lt;p&gt;学习 Go 时收藏的一些网址，做一下收录，作为结尾。&lt;/p&gt;</description>
    </item>
    <item>
      <title>图片知识一文知</title>
      <link>http://localhost:1313/2021/picture-knowledge/</link>
      <pubDate>Tue, 23 Mar 2021 15:32:00 +0800</pubDate>
      <guid>http://localhost:1313/2021/picture-knowledge/</guid>
      <description>&lt;p&gt;由于博客的原因，每周都需要进行图片处理，所以这里对相关知识做一个总结，包括图片格式、图片压缩的原理、水印、工具、最合适的大小等等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo开发主题1-内容管理</title>
      <link>http://localhost:1313/2020/hugo-develop-themes-1-content-management/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/hugo-develop-themes-1-content-management/</guid>
      <description>&lt;p&gt;Hugo 用到最后，终究还是免不了走上自己修改甚至开发主题的道路，本篇首先介绍 Hugo 的内容如何管理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo开发主题2-模板</title>
      <link>http://localhost:1313/2020/hugo-develop-themes-2-templates/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/hugo-develop-themes-2-templates/</guid>
      <description>&lt;p&gt;Hugo 用到最后，终究还是免不了走上自己修改甚至开发主题的道路，本篇介绍 Hugo 的核心之一：模板。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机基础-实数在计算机中的存储</title>
      <link>http://localhost:1313/2020/storage-of-reals-in-computers/</link>
      <pubDate>Sun, 18 Oct 2020 10:16:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/storage-of-reals-in-computers/</guid>
      <description>&lt;p&gt;最近在智能合约中实现信誉算法，但是 Solidity 不支持浮点数赋值和运算，好在有人写了一个库实现了 IEEE 754 浮点数标准，只不过输入输出都是二进制，所以回过头来仔细理解一下实数在计算机中的存储。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go实现2048小游戏</title>
      <link>http://localhost:1313/2020/a-cli-implement-of-2048-game-using-go/</link>
      <pubDate>Thu, 08 Oct 2020 19:35:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/a-cli-implement-of-2048-game-using-go/</guid>
      <description>&lt;p&gt;Go 实现一个命令行界面的 2048 游戏，仅涉及 Git 和 Go，用来熟悉基本语言特性。原型项目来自 &lt;a href=&#34;https://github.com/chhabraamit/2048&#34;&gt;https://github.com/chhabraamit/2048&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化7-终端和winget</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-7-windows-terminal-and-winget/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-7-windows-terminal-and-winget/</guid>
      <description>&lt;p&gt;Windows terminal 的安装配置和 winget 的基本使用，主要原因是 Powershell 不好看。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-windows-terminal&#34;&gt;1. Windows terminal&lt;/h2&gt;&#xA;&lt;p&gt;界面友好的终端应用，凡是命令行程序都可以用它启动，可以将 win10 下的 cmd、Powershell 和 git bash 都集中在一起，当然，最重要的是好看。&lt;/p&gt;&#xA;&lt;p&gt;基本上有什么问题都可以从 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/windows/terminal/&#34;&gt;官方教程&lt;/a&gt; 里查到，这里只是介绍我的配置过程。&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-安装&#34;&gt;1.1 安装&lt;/h3&gt;&#xA;&lt;p&gt;我选择从 &lt;a href=&#34;https://aka.ms/terminal&#34;&gt;Microsoft Store&lt;/a&gt; 安装 Windows terminal。初始界面如下&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/zh-cn/windows/terminal/images/first-run.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-快捷键启动&#34;&gt;1.2 快捷键启动&lt;/h3&gt;&#xA;&lt;p&gt;右键菜单已经有 git bash 了，不需要把它添加进去。&lt;/p&gt;&#xA;&lt;p&gt;快捷键启动我没有采用网上流传的教程，而是把 Windows terminal 固定在了任务栏第一个，然后使用  &lt;code&gt;Win+1&lt;/code&gt; 键打开。&lt;/p&gt;&#xA;&lt;h3 id=&#34;13-添加-git-bash&#34;&gt;1.3 添加 git bash&lt;/h3&gt;&#xA;&lt;p&gt;默认添加的应用包括 Powershell、cmd、Azure Cloud Shell 和我之前安装的 WSL（Ubuntu 20.04）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20201007_Snipaste_2020-10-07_18-50-39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里将 git bash 添加进去，并设置为启动时默认使用的应用（之前启动 Windows termianl 默认打开 Powershell），并设置起始目录。最终效果如上图&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击标题栏的下箭头，点击「设置」，可以在上图中看到；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在打开的配置文件中 &lt;code&gt;list&lt;/code&gt; 部分添加如下内容。其中，&lt;code&gt;guid&lt;/code&gt; 是唯一标识符，注意不要和已有的四个应用相同即可；&lt;code&gt;name&lt;/code&gt; 是应用名；&lt;code&gt;commandline&lt;/code&gt; 设置 git bash 路径，根据自己的安装位置设置；&lt;code&gt;icon&lt;/code&gt; 设置上图中显示的缩略图，自己从 &lt;a href=&#34;https://gitforwindows.org/img/gwindows_logo.png&#34;&gt;网上&lt;/a&gt; 下载放到合适的位置并设置；&lt;code&gt;startingDirectory&lt;/code&gt; 设置起始目录，我这里设置了我最常打开的目录。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang查漏补缺</title>
      <link>http://localhost:1313/2020/golang-supplement/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-supplement/</guid>
      <description>&lt;p&gt;查漏补缺的一些问题&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-时间复杂度和空间复杂度</title>
      <link>http://localhost:1313/2020/algorithm-time-and-space-complexity/</link>
      <pubDate>Fri, 18 Sep 2020 20:37:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/algorithm-time-and-space-complexity/</guid>
      <description>&lt;p&gt;时间和空间复杂度的分析是编制程序的一个基本能力，不过平时基本都是脑子里简单的估计，本篇文章打算回忆一下大 O 表示法和具体的时间复杂度的推导过程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows、Linux、Unix和 macOS</title>
      <link>http://localhost:1313/2020/windows-linux-unix-and-macos/</link>
      <pubDate>Wed, 02 Sep 2020 21:15:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/windows-linux-unix-and-macos/</guid>
      <description>&lt;p&gt;目前主流的操作系统就是 Windows、Linux 和 macOS，有时候我们也常听到 Unix。今天查一下资料看一看它们的区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>正则表达式与通配符</title>
      <link>http://localhost:1313/2020/regular-expression-basic-syntax/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/regular-expression-basic-syntax/</guid>
      <description>&lt;p&gt;正则表达式在字符串处理时使用的非常普遍，这次来学习正则的相关知识，分别结束通配符、正则及它们的区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-字符串类问题</title>
      <link>http://localhost:1313/2020/algorithm-stings/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-stings/</guid>
      <description>&lt;p&gt;做 Leetcode 每日一题的时候遇到了子串判断类的问题，想起一直没仔细的去看过 KMP 等字符串常用的算法，所以这里学习一下。&lt;/p&gt;&#xA;&lt;!---more--&gt;&#xA;&lt;h2 id=&#34;1-重复的子字符串&#34;&gt;1. 重复的子字符串&lt;/h2&gt;&#xA;&lt;p&gt;这就是今天遇到的题目，题目描述为&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;示例 1:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输入: &amp;#34;abab&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输出: True&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;解释: 可由子字符串 &amp;#34;ab&amp;#34; 重复两次构成。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;示例 2:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输入: &amp;#34;aba&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输出: False&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;示例 3:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输入: &amp;#34;abcabcabcabc&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输出: True&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;解释: 可由子字符串 &amp;#34;abc&amp;#34; 重复四次构成。 (或者子字符串 &amp;#34;abcabc&amp;#34; 重复两次构成。)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;首先确认边界条件&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;字符串长度满足：0 &amp;lt; len(s) &amp;lt;= 10000，所以不需要考虑空字符串&lt;/li&gt;&#xA;&lt;li&gt;字符串的子串不包括自己，也就是说，「一个字符串由自己重复 1 次构成」这种说法不成立，可由示例2得出&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;然后确认基本思路&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bash脚本语法</title>
      <link>http://localhost:1313/2020/bash-script-grammer/</link>
      <pubDate>Tue, 18 Aug 2020 11:37:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/bash-script-grammer/</guid>
      <description>&lt;p&gt;很多时候都要求能使用 Shell 脚本进行编程，本文是根据阮一峰大神的 &lt;a href=&#34;https://wangdoc.com/bash/intro.html&#34;&gt;系列教程&lt;/a&gt; 总结的基本知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统6-文件管理</title>
      <link>http://localhost:1313/2020/operate-system-6-file-management/</link>
      <pubDate>Tue, 18 Aug 2020 08:18:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-6-file-management/</guid>
      <description>&lt;p&gt;本篇介绍文件管理相关的内容。包括硬盘结构、文件和目录的概念，以及一个文件系统涉及的其它知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统5-设备管理</title>
      <link>http://localhost:1313/2020/operate-system-5-device-management/</link>
      <pubDate>Mon, 17 Aug 2020 19:25:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-5-device-management/</guid>
      <description>&lt;p&gt;本篇介绍设备管理的相关内容。最近发现本科用的教材内容非常陈旧，而且不是那么浅显易懂，于是找了一本国外的教材《操作系统导论》，主要根据这个来学习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习9-调用栈</title>
      <link>http://localhost:1313/2020/golang-deep-learning-9-call-stack/</link>
      <pubDate>Sat, 15 Aug 2020 09:47:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-9-call-stack/</guid>
      <description>&lt;p&gt;本篇介绍如何分析 Go 的调用栈。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习8-堆栈与逃逸分析</title>
      <link>http://localhost:1313/2020/golang-deep-learning-8-stack-heap-and-escape-analysis/</link>
      <pubDate>Sat, 15 Aug 2020 08:47:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-8-stack-heap-and-escape-analysis/</guid>
      <description>&lt;p&gt;本篇介绍 Go 的堆栈和逃逸分析。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统4-存储管理</title>
      <link>http://localhost:1313/2020/operate-system-4-memory-management/</link>
      <pubDate>Thu, 13 Aug 2020 11:04:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-4-memory-management/</guid>
      <description>&lt;p&gt;本文介绍操作系统另一个重要功能：存储管理。包括存储管理的基本功能，以及分区、页式、段式与段页式三种存储管理方法的具体细节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统3-进程管理</title>
      <link>http://localhost:1313/2020/operate-system-3-process-management/</link>
      <pubDate>Mon, 10 Aug 2020 08:06:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-3-process-management/</guid>
      <description>&lt;p&gt;本文介绍操作系统最重要的一部分功能之一：进程管理，从进程的概念到进程的通信，再到死锁问题，最后结束进程的调度。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统2-用户接口</title>
      <link>http://localhost:1313/2020/operate-system-2-user-interface/</link>
      <pubDate>Sun, 09 Aug 2020 17:16:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-2-user-interface/</guid>
      <description>&lt;p&gt;本文介绍操作系统的一个重要功能：提供用户接口。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统1-概述</title>
      <link>http://localhost:1313/2020/operate-system-1-overview/</link>
      <pubDate>Sun, 09 Aug 2020 10:27:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-1-overview/</guid>
      <description>&lt;p&gt;本文介绍操作系统的概念、历史、分类、功能及理解这些功能的必备基础知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化8-自动化</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-7-automation/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-7-automation/</guid>
      <description>&lt;p&gt;win10 一些重复操作的自动化，主要利用 Powershell 和windows任务计划程序，运行环境为 Windows 10 和 PowerShell 7.1，低版本 PowerShell 可能有中文路径无法识别问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-背包问题</title>
      <link>http://localhost:1313/2020/algorithm-knapsack-problem/</link>
      <pubDate>Thu, 06 Aug 2020 10:22:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/algorithm-knapsack-problem/</guid>
      <description>&lt;p&gt;奇安信的笔试遇到了完全背包问题，结果写的时候按 0-1 背包写的贪心，最后没 AC，因此本篇对所有的背包问题做一次整理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习7-调度器与垃圾回收</title>
      <link>http://localhost:1313/2020/golang-deep-learning-7-scheduler-and-garbage-collection/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-7-scheduler-and-garbage-collection/</guid>
      <description>&lt;p&gt;调度器和垃圾回收都属于 runtime 的一部分，本文我们介绍 Go 中 runtime 的含义，然后再来分析 Go 的调度器和垃圾回收策略。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习6-使用pprof进行性能分析</title>
      <link>http://localhost:1313/2020/golang-deep-learning-6-performance-analysis-pprof/</link>
      <pubDate>Mon, 27 Jul 2020 18:46:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-6-performance-analysis-pprof/</guid>
      <description>&lt;p&gt;pprof 用来做 Go 程序的性能监控，让我们知道在什么地方耗费了多少 CPU、memory。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习5-使用dlv调试程序</title>
      <link>http://localhost:1313/2020/golang-deep-learning-5-debug-with-dlv/</link>
      <pubDate>Sun, 26 Jul 2020 09:43:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-5-debug-with-dlv/</guid>
      <description>&lt;p&gt;在C/C++中，使用 GDB 调试程序，但在Go中，看过网上的一些文章后，发现 dlv 是个更好的选择，本文进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习4-map</title>
      <link>http://localhost:1313/2020/golang-deep-learning-4-map/</link>
      <pubDate>Sat, 25 Jul 2020 09:45:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-4-map/</guid>
      <description>&lt;p&gt;本文关心 map 的底层实现、map 的扩容机制和 map 遍历的随机性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习3-切片</title>
      <link>http://localhost:1313/2020/golang-deep-learning-3-slice/</link>
      <pubDate>Fri, 24 Jul 2020 16:13:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-3-slice/</guid>
      <description>&lt;p&gt;本篇理解切片的底层实现和扩容方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习2-string</title>
      <link>http://localhost:1313/2020/golang-deep-learning-2-string/</link>
      <pubDate>Fri, 24 Jul 2020 11:19:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-2-string/</guid>
      <description>&lt;p&gt;Go 中字符串虽然作为基本数据类型，但本质依然是字符数组，本篇文章理解 Go 底层 string 类型是如何实现的，以及探讨它与 []byte 之间的关系。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习1-uintptr 和 Unsafe.Pointer</title>
      <link>http://localhost:1313/2020/golang-deep-learning-1-uintptr-and-unsafe.pointer/</link>
      <pubDate>Thu, 23 Jul 2020 12:15:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-1-uintptr-and-unsafe.pointer/</guid>
      <description>&lt;p&gt;本篇介绍 Go 中的指针、uintptr 和 unsafe.Pointer 三个概念。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-分支限界</title>
      <link>http://localhost:1313/2020/algorithm-branch-and-bound/</link>
      <pubDate>Thu, 23 Jul 2020 10:07:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/algorithm-branch-and-bound/</guid>
      <description>&lt;p&gt;分支限界和回溯都是有效搜索解空间树的方法，不同的是，分支限界使用广度优先或最小耗费/最大效益优先的方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang日志系统</title>
      <link>http://localhost:1313/2020/golang-log-system/</link>
      <pubDate>Sun, 07 Jun 2020 09:48:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-log-system/</guid>
      <description>&lt;p&gt;日志是一个系统必不可少的部分，本篇介绍Golang中的日志系统。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang设置与使用cookie</title>
      <link>http://localhost:1313/2020/golang-set-and-use-cookie/</link>
      <pubDate>Mon, 01 Jun 2020 20:11:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-set-and-use-cookie/</guid>
      <description>&lt;p&gt;关于 Cookie 的使用是 Web 编程中的重要一部分，本篇介绍 Cookie 的基本知识和 Golang 中使用的方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang模板</title>
      <link>http://localhost:1313/2020/golang-template/</link>
      <pubDate>Fri, 29 May 2020 17:08:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-template/</guid>
      <description>&lt;p&gt;模板就是在写动态页面时不变的部分，服务端程序渲染可变部分生成动态网页，Go 语言提供了 html/template 包来支持模板渲染。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang使用gorilla、mux包</title>
      <link>http://localhost:1313/2020/golang-use-gorilla/mux-package/</link>
      <pubDate>Fri, 29 May 2020 13:38:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-use-gorilla/mux-package/</guid>
      <description>&lt;p&gt;本文介绍 &lt;a href=&#34;https://github.com/gorilla/mux&#34;&gt;gorilla/mux&lt;/a&gt; 包的使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang启动HTTP服务器</title>
      <link>http://localhost:1313/2020/golang-start-http-server/</link>
      <pubDate>Fri, 29 May 2020 09:32:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-start-http-server/</guid>
      <description>&lt;p&gt;本文介绍 Golang 如何实现 HTTP 服务端及客户端。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang密码学算法</title>
      <link>http://localhost:1313/2020/golang-cryptographic-algorithm/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-cryptographic-algorithm/</guid>
      <description>&lt;p&gt;在 Go 中，加密是很重要的一部分，本文对此进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang数据库编程</title>
      <link>http://localhost:1313/2020/golang-interact-with-mysql/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-interact-with-mysql/</guid>
      <description>&lt;p&gt;Go 官方提供了database 包，database 包下有 sql/driver。该包用来定义操作数据库的接口，这保证了无论使用哪种数据库，操作方式都是相同的。但 Go 官方并没有提供连接数据库的 driver，如果要操作数据库，还需要第三方的 driver 包。这里介绍 &lt;a href=&#34;https://github.com/go-sql-driver/mysql&#34;&gt;go-mysql-driver&lt;/a&gt; 的使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-安装&#34;&gt;1. 安装&lt;/h2&gt;&#xA;&lt;p&gt;在执行了 &lt;code&gt;go mod&lt;/code&gt; 的项目目录下执行如下安装命令&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go get -u github.com/go-sql-driver/mysql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Win10 下，go-sql-driver 包将被安装到 &lt;code&gt;%GOPATH%\pkg\mod\github.com\go-sql-driver\mysql@v1.5.0&lt;/code&gt; 目录下，其它项目使用时不必重复下载，执行上述命令即可直接引入。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-导入&#34;&gt;2. 导入&lt;/h2&gt;&#xA;&lt;p&gt;示例代码如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;s&#34;&gt;&amp;#34;database/sql&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/go-sql-driver/mysql&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Golang 提供了database/sql 包，用于对 SQL 数据库的访问。它提供了一系列接口方法，用于访问关系数据库但并不会提供数据库特有的方法，那些特有的方法交给数据库驱动去实现。&lt;/p&gt;&#xA;&lt;p&gt;对于数据库操作来说，开发者不应该直接使用导入的驱动包所提供的方法，而应该使用 sql.DB 对象所提供的统一的方法。因此在导入 MySQL 驱动时，使用了匿名导入包的方式，即将 go-sql-driver 包重命名为特殊符号 &lt;code&gt;_&lt;/code&gt;。采用这种方式只会执行其中的 init 函数和初始化其全局变量，无法调用函数。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-连接数据库&#34;&gt;3. 连接数据库&lt;/h2&gt;&#xA;&lt;p&gt;连接数据库使用 sql 包中的 Open() 函数，原型如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;driverName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dataSourceName&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;driverName：使用的驱动名。这个名字其实就是数据库驱动注册到 database/sql 时所使用的名字&lt;/li&gt;&#xA;&lt;li&gt;dataSourceName：数据库连接信息。它包含了数据库的用户名、密码、数据库主机以及需要连接的数据库名等信息。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;使用示例如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-回溯</title>
      <link>http://localhost:1313/2020/algorithm-backtracking/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-backtracking/</guid>
      <description>&lt;p&gt;在真实的世界中，很多问题是不存在快速解法的，只能穷尽搜索，因此一个高效的搜索技术非常重要。回溯（Backtracking）和分支限界（Branch&amp;amp;Bound）就是两种减小搜索空间大小的技术。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-回溯的基本思想&#34;&gt;1. 回溯的基本思想&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-解空间树&#34;&gt;1.1 解空间树&lt;/h3&gt;&#xA;&lt;p&gt;假设可以用一个 n 元组 $X=(x_1,x_2,……,x_n)$ 来表示所求问题的解，其中 $x_i$ 的取值范围为某个有穷集合 S。我们把 $X=(x_1,x_2,……,x_n)$ 所有可能取值的组合称作问题的解空间。&lt;/p&gt;&#xA;&lt;p&gt;举个例子，假设 0-1 背包问题中物品有 3 个，用 $X=(x_1,x_2,x_3)$ 表示，其中 $x_i \in \{0,1\}, 1 \leq i \leq 3$，则问题的解空间为 $\{(0,0,0),(0,1,0),(0,0,1),(1,0,0),(0,1,1),(1,0,1),(1,1,0),(1,1,1)\}$&lt;/p&gt;&#xA;&lt;p&gt;我们用一颗 n+1 层的树来表示解空间，其中，第 i 层和第 i+1 层之间边的标号表示变量 $x_{i+1}$ 的可能取值，从根结点到叶节点路径上的标号就构成问题的一个可能的解。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200501_%E8%A7%A3%E7%A9%BA%E9%97%B4%E6%A0%91.png&#34; alt=&#34;解空间树&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;我们还可以这样理解解空间，将解空间划分为两个维度：一个可行解中元素的个数和每个元素的取值范围。这两者正好对应解空间树的深度（实际是深度-1）和宽度。比如在上面的 0-1 背包问题中，问题的一个解由一个 3 元组 $X=(x_1,x_2,x_3)$  表示，这里每个解中有 3 个元素，因此解空间树的深度是 4，每个元素有 0 和 1 两个取值，因此每个节点有两棵子树。&lt;/p&gt;&#xA;&lt;p&gt;注：这里树的深和宽不是标准化的说法，仅为了便于说明。理解上面这段话非常有利于实际解决问题时解空间树的构造。&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-基本思想&#34;&gt;1.2 基本思想&lt;/h3&gt;&#xA;&lt;p&gt;回溯的基本思想是：在问题的解空间树中，按照深度优先的策略，从根结点出发搜索。搜索至任一结点时，先判断该结点和其儿子结点的边所标记的值是否满足解的要求，是就加入到解中，继续向下深度优先搜索以其儿子结点为根的子树，否则就结束对以该儿子结点为根的子树的搜索，选择对另一个儿子结点作为根的子树进行搜索。全部搜索完毕或都不满足就向父节点回溯。&lt;/p&gt;&#xA;&lt;p&gt;仍以 0-1背包问题为例，设物品重量为 $w=[16,15,15]$，物品价值为 $v=[45,25,25]$，背包容量 $c=30$。定义 $r$ 为当前背包的剩余容量，$v$ 为当前背包的价值。因为物品有 3 个，所以树深为 3+1=4，又因为每个解元素有两种取值，1为放入背包，0为不放入，所以每个结点有两棵子树，最终解空间树绘制如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-贪心</title>
      <link>http://localhost:1313/2020/algorithm-greedu/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-greedu/</guid>
      <description>&lt;p&gt;贪心是一种策略，是一种总是寻求当前最优的策略。因为贪心只关心局部的最优，因此不是总能得到全局的最优解，所以我们选择贪心解决问题时必须保证状态的独立性，即当前最优值只与当前状态有关，不会影响以后的状态。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-动态规划</title>
      <link>http://localhost:1313/2020/algorithm-dynamic-programming/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-dynamic-programming/</guid>
      <description>&lt;p&gt;动态规划策略通常用于求解最优化问题。在这类问题中，可能会有许多可行解，每个解对应一个值，我们希望找到具有最优值的那个解，也就是最优解。当题目中涉及「最大」「最小」等词时，很有可能就是这类问题，要考虑是否可用动态规划求解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-分治</title>
      <link>http://localhost:1313/2020/algorithm-divide-and-conquer/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-divide-and-conquer/</guid>
      <description>&lt;p&gt;分治，字面意思就是分而治之，意思就是把一个复杂的问题分成两个或更多个相同或相似的子问题，解决子问题后再进行合并。典型的如归并排序和快排，都是以分治为基础的。&lt;/p&gt;&#xA;&lt;p&gt;我们以 &lt;strong&gt;归并排序&lt;/strong&gt; 来说明一个典型的分治算法的思路&lt;/p&gt;&#xA;&lt;p&gt;分治算法可以分三步走：分解 -&amp;gt; 解决 -&amp;gt; 合并&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;分解原问题为结构相同的子问题。&lt;/li&gt;&#xA;&lt;li&gt;分解到某个容易求解的边界之后，进行递归求解。&lt;/li&gt;&#xA;&lt;li&gt;将子问题的解合并成原问题的解。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;归并排序，我们就叫这个函数 &lt;code&gt;merge_sort&lt;/code&gt; 吧，按照我们上面说的，要明确该函数的职责，即 &lt;strong&gt;对传入的一个数组排序&lt;/strong&gt; 。OK，那么这个问题能不能分解呢？当然可以！给一个数组排序，不就等于给该数组的两半分别排序，然后合并就完事了。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;merge_sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;一个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;可以很容易处理&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;merge_sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;左半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;merge_sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;右半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;左半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;右半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;好了，这个算法也就这样了，完全没有任何难度。记住之前说的，相信函数的能力，传给它半个数组，那么这半个数组就已经被排好了。而且你会发现这不就是个二叉树遍历模板吗？为什么是后序遍历？因为我们分治算法的套路是 &lt;strong&gt;分解 -&amp;gt; 解决（触底）-&amp;gt; 合并（回溯）&lt;/strong&gt; 啊，先左右分解，再处理合并，回溯就是在退栈，就相当于后序遍历了。至于 &lt;code&gt;merge&lt;/code&gt; 函数，参考两个有序链表的合并，简直一模一样。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-递归</title>
      <link>http://localhost:1313/2020/algorithm-recursive/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-recursive/</guid>
      <description>&lt;p&gt;首先简单阐述一下递归、分治、动态规划和贪心这几个东西的区别和联系。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;递归是一种编程技巧，一种解决问题的思维方式；&lt;/li&gt;&#xA;&lt;li&gt;分治和动态规划是建立在递归基础上的，解决更具体问题的两类算法思想（实现动态规划大都不是递归的，但是过程和思想是）；&lt;/li&gt;&#xA;&lt;li&gt;贪心是动态规划的一个子集，可以更高效解决一部分更特殊的问题。&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>算法-排序</title>
      <link>http://localhost:1313/2020/algorithm-sort/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-sort/</guid>
      <description>&lt;p&gt;排序算法分为&lt;strong&gt;内部排序&lt;/strong&gt;（待排序记录存放在内存中进行的排序过程）和&lt;strong&gt;外部排序&lt;/strong&gt;（由于待排序记录数量大，以致内存一次不能容纳全部记录，在排序过程中需要对外存进行访问）。我们一般提到的基本都属于内部排序，一共可以分为5大类、8小类，如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;插入排序：直接插入排序、希尔排序&lt;/li&gt;&#xA;&lt;li&gt;选择排序：简单选择排序、堆排序&lt;/li&gt;&#xA;&lt;li&gt;交换排序：冒泡排序、快速排序&lt;/li&gt;&#xA;&lt;li&gt;归并排序&lt;/li&gt;&#xA;&lt;li&gt;基数排序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这篇文章对这 8 类排序算法进行详细说明，不过在此之前，先介绍排序稳定性的概念，因为时间复杂度、空间复杂度和排序稳定性是排序算法的三个重要度量。&lt;/p&gt;&#xA;&lt;p&gt;排序稳定性其实就是相同的两个数在排序前后的先后位置是否发生了变化，具体的数学定义如下&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;假设 $r_i = r_j(1 \le i \le n, 1 \le j \le n, i \ne j)$，且在排序前的序列中 $r_i$ 领先于 $r_j$ （即 $i \le j$）。如果排序后 $r_i$ 仍领先于 $r_j$ ，则称所用的排序方法是稳定的；反之，若可能使得排序后的序列中 $r_j$ 领先于 $r_i$，则称所用的排序方法是不稳定的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;注意，下面我们所有的讨论都是基于递增排序的&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-直接插入排序&#34;&gt;1. 直接插入排序&lt;/h2&gt;&#xA;&lt;p&gt;核心思想是：将序列的第一个记录看成是一个有序的子序列，然后从第二个记录开始逐个进行插入，直至整个序列有序为止。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200402_2077144-b2538c0df361e00d.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以使用两层循环实现，第一层循环遍历所有待比较数组元素，第二层循环将本轮选择的元素与已经排好序的元素进行比较。程序如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;InsertSort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// tmp用来临时存储本轮待比较元素&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 临时存储本轮待比较元素&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;  &lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 数组元素后移&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 在正确的位置插入元素&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nums&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;时间复杂度为$O(N^2)$，最好情况，也就是待排序数组有序情况下，时间复杂度为$O(N)$，即单纯的遍历一遍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-搜索</title>
      <link>http://localhost:1313/2020/algorithm-search/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-search/</guid>
      <description>&lt;p&gt;搜索是最常用的算法之一，但线性的搜索进行介绍没有太大的意义，本文介绍搜索中一种广为使用的方法：二分查找。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-数组类问题</title>
      <link>http://localhost:1313/2020/algorithm-array/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-array/</guid>
      <description>&lt;p&gt;数组的访问时间为 $O(1)$，这是它最大的优势，但限于数组固定的大小，平常使用最多的是动态数组。在 Golang 中，其实就是[切片]^(slice)，动态数组的初始化、访问、修改、迭代、添加、删除等都是 Golang 语法的内容，这里不再介绍。事实上，一维数组的大部分问题都很好解决，我们在本文中仅介绍二维数组的一些典型问题，更多维的数组思路是相似，而且由于其复杂性，实际上很少出现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-方向转换&#34;&gt;1. 方向转换&lt;/h2&gt;&#xA;&lt;p&gt;下面是一个叫做「对角线遍历」的例子，在这个例子中，我们可以理解如何在二维数组中转换前进方向，这是一个很有用的技巧。&lt;/p&gt;&#xA;&lt;p&gt;螺旋矩阵是指一个呈螺旋状的矩阵，它的数字由第一行开始到右边不断变大，向下变大，向左变大，向上变大，如此循环。给定m和n，返回一个大小为m*n的螺旋矩阵&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;input:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Output:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1 2 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;8 9 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;7 6 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;每一步走完，判断是否超出矩阵范围，若超出，计算向哪个方向转，无论是否转向，计算下一步所在位置的x,y坐标&lt;/li&gt;&#xA;&lt;li&gt;螺旋矩阵的转向顺序是固定的，为&lt;code&gt;右-&amp;gt;下-&amp;gt;左-&amp;gt;上&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;代码：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;spiralArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[][]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//x,y为当前坐标，d为方向&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//以“右-&amp;gt;下-&amp;gt;左-&amp;gt;上”顺序循环，dx,dy是每一种转向的坐标变化方式&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;dx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;dy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;nx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ny&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//计算下一个坐标&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ny&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ny&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//下一个坐标有问题，采用下一种转向方式&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;nx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;ny&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nx&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ny&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bufio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WriteString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WriteString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WriteString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Flush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;2-对撞指针&#34;&gt;2. 对撞指针&lt;/h2&gt;&#xA;&lt;p&gt;对撞指针是数组类问题另一个常用的技巧，其含义是：将指针 i 和 j 分别指向数组第一个元素和最后一个元素，然后指针 i 不断向前，指针 j 不断递减，直到 i == j（终止条件是可以根据题目变化的）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-并查集</title>
      <link>http://localhost:1313/2020/data-structure-union-find-set/</link>
      <pubDate>Wed, 18 Mar 2020 18:44:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/data-structure-union-find-set/</guid>
      <description>&lt;p&gt;并查集是一种特别而实用的结构，主要作用是进行不相交集合的合并和判断两个元素是否在同一集合，时间复杂度为常数级。常见用途包括 Kruskal 算法和求最近公共祖先，本篇文章介绍该数据结构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-B树与红黑树</title>
      <link>http://localhost:1313/2020/data-structure-b-tree-and-red-black-tree/</link>
      <pubDate>Wed, 18 Mar 2020 09:21:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/data-structure-b-tree-and-red-black-tree/</guid>
      <description>&lt;p&gt;本篇介绍B树（B-树），B+树和红黑树，参考自陈小玉，《趣学数据结构》。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-图</title>
      <link>http://localhost:1313/2020/data-structure-graph/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-graph/</guid>
      <description>&lt;p&gt;链表是一种一对一的关系，树是一种一对多的关系，图则是一种多对多的关系。实际上，我们可以将链表和树都看作图的一部分。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-图的定义&#34;&gt;1. 图的定义&lt;/h2&gt;&#xA;&lt;p&gt;用 V(Vertex) 表示顶点的集合，用 E(Edge) 表示边的集合，则图可以看作由一个非空的有限顶点集合 V 和一个有限边的集合 E 组成，记作G(V, E)。其中&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;边可以表示为顶点对：(v, w) ∈ E，其中 v, w ∈ V&lt;/li&gt;&#xA;&lt;li&gt;无向边使用小括号包含两个顶点来表示，如上一条所示，有向边可以用 &amp;lt;v, w&amp;gt; 表示&lt;/li&gt;&#xA;&lt;li&gt;不考虑重边和自回路（这样的图称为简单图，我们只考虑这种图）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200316_8Y0u9K.png&#34; alt=&#34;一个无向图的例子&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;一些概念解释如下&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;概念&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;解释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弧（Arc）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;边的另一种称呼&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;无向图（Digraph）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;图中所有的边没有特定的指向&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;有向图（Undigraph）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;图中所有的边是有向的&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;完全图&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;任意两个顶点间都有边相连&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;权（Weight）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;与图的边有关的数，可能表示顶点的距离或花费&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;顶点的度（Degree)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对无向图，顶点所连接的边的数量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;顶点的入度（Indegree）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对有向图，指向顶点的边的数量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;顶点的出度（Outdegree）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对有向图，从顶点出发的边的数量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;路径（Path）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;从一个顶点到另一个顶点的顶点序列&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;路径长度&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;路径上边的数目&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;连通图&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;从一个顶点开始，可以到达图中任意一个其它顶点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;非连通图&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;图中存在不可达的顶点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;连通分量&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对非连通图，它的极大连通子图称为连通分量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;网&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;带权的连通图&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;关于图的操作集有很多，但最基本的如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create()：建立并返回空图&lt;/li&gt;&#xA;&lt;li&gt;InsertVertex(Graph G, Vertex V)：将顶点 V 插入图 G&lt;/li&gt;&#xA;&lt;li&gt;InsertEdge(Graph G, Edge E)：将边 E 插入图 G&lt;/li&gt;&#xA;&lt;li&gt;DFS(Graph G, Vertex V)：从顶点 V 出发深度优先遍历图 G&lt;/li&gt;&#xA;&lt;li&gt;BFS(Graph G, Vertex V)：从顶点 V 出发广度优先遍历图 G&lt;/li&gt;&#xA;&lt;li&gt;ShortestPath(Graph G, Vertex V, int Dist[])：计算图 G 中顶点 V 到任意其它顶点的最短路径&lt;/li&gt;&#xA;&lt;li&gt;MST(Graph G)：计算图的最小生成树&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-图的表示&#34;&gt;2. 图的表示&lt;/h2&gt;&#xA;&lt;p&gt;图的表示有&lt;strong&gt;很多种方法&lt;/strong&gt;，包括邻接矩阵、邻接表、十字链表和多重邻接表，最常用的是邻接矩阵和邻接表。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-堆</title>
      <link>http://localhost:1313/2020/data-structure-heap/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-heap/</guid>
      <description>&lt;p&gt;普通的队列是一种先进先出的数据结构，在此基础上，还有一种叫做 &lt;strong&gt;优先队列&lt;/strong&gt; 的结构。顾名思义，优先队列就是具有优先级的队列，其中，元素被赋予优先级，具有最高优先级的元素将最先被访问。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-二叉搜索树</title>
      <link>http://localhost:1313/2020/data-structure-binary-search-tree/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-binary-search-tree/</guid>
      <description>&lt;p&gt;二叉搜索树是二叉树的一种特殊形式，由于它对查找的良好特性，使用较为广泛，本篇文章我们对其进行介绍，同时也包括二叉搜索树的各种进阶，比如二叉平衡树。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-二叉搜索树&#34;&gt;1. 二叉搜索树&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-定义&#34;&gt;1.1 定义&lt;/h3&gt;&#xA;&lt;p&gt;二叉搜索树（BST，Binary Search Tree），也称二叉排序树或二叉查找树。其定义如下&lt;/p&gt;&#xA;&lt;p&gt;二叉搜索树：是一颗二叉树，可以为空，如果不为空，满足下列性质&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;非空左子树的所有结点值小于其根结点的结点值&lt;/li&gt;&#xA;&lt;li&gt;非空右子树的所有结点值小于其根结点的结点值&lt;/li&gt;&#xA;&lt;li&gt;左右子树都是二叉搜索树&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;一种最常见的题型就是判断一棵树是否为二叉搜索树，我们可以利用递归的思路来解决该问题，示例代码如下，每个节点有一次递归调用，因此时间复杂度为O(n)，递归深度为树高，因此空间复杂度为O(h)，h 为树高。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isValidBST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;helper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MinInt64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MaxInt64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;helper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;upper&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lower&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;upper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;helper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;helper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;另外，我们还应该知道，对于二叉搜索树，中序遍历可以得到一个递增的序列，所以利用中序遍历也可以进行判断。代码如下，因为完全遍历一遍，时间复杂度为O(n)，栈的大小为节点数目，因此空间复杂度也为O(n)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isValidBST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;preNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MinInt64&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 用一个变量记录上一个数，和当前值比较&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Left&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;preNum&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;            &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;preNum&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Val&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Right&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;两种写法中都要注意，二叉搜索树必须左子树的所有节点都小于当前节点值，右子树的所有节点都大于当前节点值，等于是不可以的。换句话说，序列是严格递增的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-二叉树</title>
      <link>http://localhost:1313/2020/data-structure-tree-and-binary-tree/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-tree-and-binary-tree/</guid>
      <description>&lt;p&gt;树是反映事物之间层次关系的一种结构，比如家谱树、硬盘目录结构树等。&lt;/p&gt;&#xA;&lt;p&gt;使用树的原因是这种层次结构在管理上有更高的效率，以查找为例，顺序查找的时间复杂度是O(n)，而二分查找的时间复杂度是O(log&lt;sub&gt;2&lt;/sub&gt;n)，可以看到查找效率得到了很大的提高，这是因为二分查找本质上是对一颗树的查找。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-树&#34;&gt;1. 树&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-定义&#34;&gt;1.1 定义&lt;/h3&gt;&#xA;&lt;p&gt;树（Tree）是由 n（n$\geq$0）个结点构成的有限集合，当 n=0 时，称为空树，而对于任一颗非空树（n&amp;gt;0），它具有如下性质：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;树中有一个称为「根（Root)」的特殊结点，用 r 表示&lt;/li&gt;&#xA;&lt;li&gt;其余结点可分为 m(m&amp;gt;0) 个互不相交的有限集 T&lt;sub&gt;1&lt;/sub&gt;, T&lt;sub&gt;2&lt;/sub&gt;, &amp;hellip; , T&lt;sub&gt;m&lt;/sub&gt;，其中每个集合本身又是一棵树，称为原来树的「子树（SubTree）」&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200224_1vLDeO.png&#34; alt=&#34;树的定义&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在判断是否是一颗树的时候，有以下注意点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;子树是不相交的；&lt;/li&gt;&#xA;&lt;li&gt;除根节点外，每个节点有且仅有一个父节点；&lt;/li&gt;&#xA;&lt;li&gt;一颗 N 个结点的树有 N-1 条边&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200224_1vLRSI.png&#34; alt=&#34;一些非树的例子&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-术语&#34;&gt;1.2 术语&lt;/h3&gt;&#xA;&lt;p&gt;与树相关的一些术语如下表所示&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;术语&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;英文&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;结点的度&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Degree&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;结点的子树个数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;树的度&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;树的所有结点中最大的度数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;叶结点&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Leaf&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;度为0的结点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;父结点&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Parent&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;有子树的结点是其子树的根结点的父节点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;子结点&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Child&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;若A结点是B结点的父结点，则称B结点是A结点的子结点；&lt;br&gt;子结点也称孩子结点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;兄弟结点&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Sibling&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;具有同一父结点的各结点彼此是兄弟结点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;路径&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Path&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;从结点n&lt;sub&gt;1&lt;/sub&gt;到n&lt;sub&gt;k&lt;/sub&gt;的路径为一 个结点序列n&lt;sub&gt;1&lt;/sub&gt; , n&lt;sub&gt;2&lt;/sub&gt; , … , n&lt;sub&gt;k&lt;/sub&gt; , n&lt;sub&gt;i&lt;/sub&gt;是 n&lt;sub&gt;i+1&lt;/sub&gt;的父结点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;路径长度&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;路径所包含边的个数为路径的长度。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;祖先结点&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ancestor&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;沿树根到某一结点路径上的所有结点都是这个结点的祖先结点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;子孙结点&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Descendant&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;某一结点的子树中的所有结点是这个结点的子孙&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;结点的层次&lt;br&gt;(结点的深度)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Level&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;规定根结点在1层，其它任一结点的层数是其父结点的层数加1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;树的深度&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Depth&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;树中所有结点中的最大层次是这棵树的深度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;结点的高度&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Height&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;结点的深度从上往下数，而结点的高度从下往上数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;以定义中的树T解释如下图&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-队列与栈</title>
      <link>http://localhost:1313/2020/data-structure-queue-and-stack/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-queue-and-stack/</guid>
      <description>&lt;p&gt;队列与栈是最常使用的两种数据结构，其中，队列的核心特征是先入先出，栈的核心特征是后入先出，只要符合这两个特征，就属于队列（栈），不因实现形式的不同（数组或链表）而有差别，可以根据具体情况选择使用起来更方便的实现形式。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们对队列与栈的核心功能，循环队列这种特殊结构，以及队列和栈的主要应用，尤其是广度优先搜索和深度优先搜索进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-链表</title>
      <link>http://localhost:1313/2020/data-structure-linkedlist/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-linkedlist/</guid>
      <description>&lt;p&gt;链表是一种最为基础的数据结构，由一系列结点组成，每个结点不仅包含值，还包含指向下一个结点（有时也包括上一个结点）的指针。相比于数组，在链表中访问指定的元素则需要$O(N)$的复杂度，但进行插入和删除操作只需要$O(1)$的复杂度&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-单链表&#34;&gt;1. 单链表&lt;/h2&gt;&#xA;&lt;p&gt;一个单链表的例子如下，蓝色箭头显示链表中的结点是如何相连的&lt;/p&gt;&#xA;&lt;img src=&#34;https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/08/05/screen-shot-2018-04-12-at-152754.png&#34; style=&#34;zoom:50%;&#34; /&gt;&#xA;&lt;p&gt;关于结点的最常见的定义如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//单链表结点&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;val&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 结点的值&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 指向下一个结点的指针&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;多数情况下，我们使用头结点来表示整个链表，并将链表的长度存储其中。虽然增加了一个结点的存储，但带来的好处却是巨大的&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//头结点，也是单链表的起始&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;singlyLinkedList&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 链表长度&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 指向第一个结点的指针&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;定义了头结点的情况下，需要事先对链表进行初始化&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* @description: 初始化链表(头结点)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;   @author: songdehua 2020-03-28&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;   @param: 无&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;   @return: _ *singleLinkedList 指向单链表(头结点)的指针&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;singlyLinkedList&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;singlyLinkedList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;11-获取指定结点的值&#34;&gt;1.1 获取指定结点的值&lt;/h3&gt;&#xA;&lt;p&gt;本质是对链表的遍历，修改操作也是相同的算法，只是需要遍历到指定元素后进行修改即可，程序实现如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* @description: 如果索引有效，获取链表中第 index 个结点的值&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;   @author: songdehua 2020-03-28&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;   @param: index int 要获取的元素位置&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;   @return: _ int 获取元素的值; _ error 索引无效时返回错误&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;singlyLinkedList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;param - index is invalid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;cur&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nx&#34;&gt;cur&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cur&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cur&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;12-插入结点&#34;&gt;1.2 插入结点&lt;/h3&gt;&#xA;&lt;p&gt;如果我们想在 prev 结点后插入新结点，基本操作步骤如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化5-系统功能的充分利用</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-5-system-function-use/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-5-system-function-use/</guid>
      <description>&lt;p&gt;作为一款成熟的商业系统，windows提供了大量实用的功能，尤其是到了win10后，很多功能的体验变得越来越好，本篇对这些功能做总结。&lt;/p&gt;&#xA;&lt;p&gt;值得注意的是，很多功能其实只需要设置一次就不需要再理会，或者干脆微软默认已经进行了最佳设置，这对于我们追求效率和极简是一件非常棒的事。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-搜索&#34;&gt;1. 搜索&lt;/h2&gt;&#xA;&lt;p&gt;首先介绍win10的搜索功能。win10系统出现以来，Cortana就一直是任务栏的常驻功能，在响应语音的同时，也兼职文件搜索，不过并不好用。直到1903版本之后，Cortana和搜索功能拆分，新的搜索可以搜索电脑中的文档、照片、邮件、应用、系统设置、文件夹等等，并且提升了视觉效果，使用体验高了一倍不止。除此之外，在设置中也增加了「搜索」板块，可以排除不查看的文件夹，缩短搜索时间。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674857-e8a7ee80-3ab6-11ea-8d57-c894d10e491b.png&#34; alt=&#34;搜索设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;事实证明，新的搜索功能非常好用，在下面的内容中，我们会大量使用该功能。唤起搜索的快捷键是&lt;code&gt;win+Q&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-磁盘优化&#34;&gt;2. 磁盘优化&lt;/h2&gt;&#xA;&lt;p&gt;win10的磁盘优化分两种。对机械硬盘来说，指的是碎片整理，磁盘碎片是机械硬盘读写过程中产生的不连续存放空间，随着使用时间的增加，磁盘碎片会不断增长，并影响文件的读写速度，碎片整理是将这些不连续的空间整合成一个大的存储空间，目的是提升我们复制粘贴文件(读写文件)的速度。对于固态硬盘(SSD)来说，指的是&lt;a href=&#34;https://www.ithome.com/html/win10/206428.htm&#34;&gt;TRIM&lt;/a&gt;，是把已删除文件标记为无用，避免磁盘将其当成有用数据重复移动，从而影响读写速度和硬盘寿命。&lt;/p&gt;&#xA;&lt;p&gt;关于磁盘碎片整理和TRIM的说明，可以查阅一个&lt;a href=&#34;https://www.zhihu.com/question/21554450&#34;&gt;知乎问答&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;win10系统中对硬盘类型做了自动识别，从而采取对应的优化策略，并且默认每周执行一次优化，因此不需要我们手动设置，如果想调整执行优化的周期，可以下面的方式执行&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;按「windows 徽标键 + Q」快捷键唤起搜索，输入关键词「磁盘优化」&lt;/li&gt;&#xA;&lt;li&gt;选择搜索结果中的「碎片整理和优化驱动器」，一般是第一个结果&lt;/li&gt;&#xA;&lt;li&gt;选择「更改设置」，然后更改频率即可&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674862-f5c4dd80-3ab6-11ea-8dea-c31eafabf004.png&#34; alt=&#34;磁盘优化设置&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-自动垃圾清理&#34;&gt;3. 自动垃圾清理&lt;/h2&gt;&#xA;&lt;p&gt;在介绍win10提供的自动垃圾清理功能前，我们先来理解第三方软件清理垃圾时是清理哪些内容，以火绒为例，清理项包括&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;系统垃圾：系统运行产生的垃圾，包括常用软件日志、回收站垃圾、系统缓存、系统临时文件、系统日志等&lt;/li&gt;&#xA;&lt;li&gt;常用软件垃圾：软件缓存垃圾，如Internet缓存&lt;/li&gt;&#xA;&lt;li&gt;注册表垃圾：无效注册表&lt;/li&gt;&#xA;&lt;li&gt;快捷方式：用不到的快捷方式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;系统垃圾，尤其是其中的回收站垃圾所占比重最大。从出发点来看，垃圾清理的目的是释放磁盘空间，适用于磁盘空间不足的情况。但很多人其实清理垃圾已经成为了一种习惯，与磁盘空间不足无关，常见的操作是定期清空回收站，至于安全软件提供的垃圾清理功能，往往只有在想起来的情况下才会使用。所以，如果win10可以定期清理回收站呢，甚至定期清理系统缓存、临时系统文件、软件日志等安全软件进行垃圾清理的主要内容，更进一步还包括经常被我们遗忘的「下载」文件夹，以及占用大量空间的&lt;code&gt;windows.old&lt;/code&gt;文件夹。win10中的「存储感知」功能可以做到这些事情。&lt;/p&gt;&#xA;&lt;p&gt;搜索「存储设置」，点击「配置存储感知或立即执行」，可以设置运行存储感知的频率。我当前设置为「在可用磁盘空间不足时」，可以将其调整为每周或每月。设置中还包括定期清理回收站、下载文件夹和长时间未使用的OneDrive文件，可以说考虑到了绝大部分的使用情况。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674868-ff4e4580-3ab6-11ea-911c-acd00dbeeb55.png&#34; alt=&#34;存储感知设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;关于定期运行的「存储感知」，其查找并删除的文件包括但不限于：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;临时设置文件&lt;/li&gt;&#xA;&lt;li&gt;旧的索引内容&lt;/li&gt;&#xA;&lt;li&gt;系统缓存文件&lt;/li&gt;&#xA;&lt;li&gt;Internet 缓存文件&lt;/li&gt;&#xA;&lt;li&gt;设备驱动程序包&lt;/li&gt;&#xA;&lt;li&gt;系统下载的程序文件&lt;/li&gt;&#xA;&lt;li&gt;系统日志文件已过期&lt;/li&gt;&#xA;&lt;li&gt;系统错误内存转储文件&lt;/li&gt;&#xA;&lt;li&gt;系统错误小型转储文件&lt;/li&gt;&#xA;&lt;li&gt;临时系统文件&lt;/li&gt;&#xA;&lt;li&gt;Windows 更新临时文件已过期&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;因此，开启存储感知功能后，垃圾清理将不再是我们需要考虑的事情，能够节省一些宝贵的时间和精力。当然，如果闲着没事还是想时不时的手动清空一下回收站，谁也拦不住，也没有任何影响。&lt;/p&gt;&#xA;&lt;p&gt;理论上，配合windows安全中心，我们是不需要安装第三方安全软件的，不过类似于弹窗拦截等功能，win10系统就无能为力了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-专注助手&#34;&gt;4. 专注助手&lt;/h2&gt;&#xA;&lt;p&gt;win10提供的「专注助手」功能可以让我们在需要集中注意力时消除让人分心的通知，比如每天固定学习或工作的时间段。在桌面右下角的操作中心中通过点击打开或关闭专注助手，可以在三个设置中循环切换：仅优先通知、仅限闹钟和关闭。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674873-09704400-3ab7-11ea-9811-8973835d68fa.png&#34; alt=&#34;专注助手开启和关闭&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;搜索「专注助手」，打开其设置页面，可以看到系统提供了一系列的场景，比如使用投影时和全屏模式下启用仅限闹钟、玩游戏时或每天固定的时间段启用仅优先通知。此外，在仅优先通知选项的下面，可以设定自定义的优先列表，但其中的选项对我们都是无意义的，包括来自手机的通知(但win10的这一功能国内不可用)、系统应用的通知等，所以不介绍。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674876-112fe880-3ab7-11ea-8882-d51f7948ad18.png&#34; alt=&#34;专注助手设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;我们启用该功能的目的还是提供的这几个场景：游戏、投影、全屏、固定时间段，启用后可以过滤操作中心弹出的大量通知，有经验的应该知道操作中心弹出的通知真的很烦人。不过1909版本后，可以自定义操作中心的通知，将从来不用的系统应用的通知全部关掉就好，搜索「通知和操作设置」可以打开设置页面。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-跨设备剪贴板同步&#34;&gt;5. 跨设备剪贴板同步&lt;/h2&gt;&#xA;&lt;p&gt;将剪贴板的内容进行同步，从而可以在多个设备进行粘贴。搜索「剪贴板」可以打开该设置&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674886-1e4cd780-3ab7-11ea-98b9-10b981852306.png&#34; alt=&#34;剪贴板设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;按「Windows 徽标键 + V」可以查看剪贴板的内容&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674888-27d63f80-3ab7-11ea-85a6-f42bd43728e9.png&#34; alt=&#34;剪贴板&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;6-快速添加提醒&#34;&gt;6. 快速添加提醒&lt;/h2&gt;&#xA;&lt;p&gt;win10现在可以从任务栏的时间和日期处快速添加事件或提醒，对于以Outlook为主力日历应用的人来说是非常方便了，但对于以手机日历为主力的人来说没有什么用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72674890-31f83e00-3ab7-11ea-9449-38d252324401.png&#34; alt=&#34;快速添加提醒和事件&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;对于小米手机来讲，可以将小米日历和win10的日历进行同步，这样，「快速添加提醒」这一功能对我们就变得非常有用了，操作步骤如下&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在win10日历应用中添加Exchange账户，但账户名为outlook邮箱，并在日历设置里把账户同步打开&lt;/li&gt;&#xA;&lt;li&gt;在win10邮件应用中登录Exchange账户，账户名依然为outlook邮箱&lt;/li&gt;&#xA;&lt;li&gt;在小米手机的电子邮件应用中以Exchange账户登录，账户名还是outlook邮箱&lt;/li&gt;&#xA;&lt;li&gt;查看日历的账户设置，发现此时已经拥有两个账户，日历应用中也有了同步过来的所有事件和提醒&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;日历的同步间隔跟随邮箱，我设置为1小时一次，以除夕合成五福这一提醒为例，我在电脑上添加的该提醒，现在已经同步到了手机&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化6-软件体系整理</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-6-software-collection/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-6-software-collection/</guid>
      <description>&lt;p&gt;对win10中使用的软件体系进行整理，在满足需要的同时，选择每一类软件中最适合的一种，同时尽量减少安装的软件数量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-系统管理&#34;&gt;1. 系统管理&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-火绒&#34;&gt;1.1 火绒&lt;/h3&gt;&#xA;&lt;p&gt;抛弃腾讯和360的全家桶，火绒简单易用，只保留必需的功能，在后台默默工作，没有需要甚至意识不到它的存在。火绒的弹窗拦截功能也非常好用。&lt;a href=&#34;https://www.huorong.cn/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677571-c7f09080-3ad8-11ea-8c1d-753b3290990c.png&#34; alt=&#34;火绒&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-iobit-uninstaller&#34;&gt;1.2 IObit Uninstaller&lt;/h3&gt;&#xA;&lt;p&gt;软件管理，能把安装的软件卸载的干干净净，而不是残留一堆注册表和空文件夹。&lt;a href=&#34;https://www.iobit.com/en/advanceduninstaller.php&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677577-d343bc00-3ad8-11ea-86de-5d857ad1813d.png&#34; alt=&#34;IObit Uninstaller&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;13-7zip&#34;&gt;1.3 7zip&lt;/h3&gt;&#xA;&lt;p&gt;免费开源的压缩软件，有更强的压缩能力，体积足够小(1M)且软件足够简单，只提供必要的功能，集成到右键就像系统自带的一样，不会像WinRAR或2345好压那样每次弹出那个丑陋的界面。&lt;a href=&#34;https://www.7-zip.org/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677580-de96e780-3ad8-11ea-8807-aba5823d05a1.png&#34; alt=&#34;7zip&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;14-onedrive&#34;&gt;1.4 OneDrive&lt;/h3&gt;&#xA;&lt;p&gt;文件同步，必备软件，坚果云限制流量不限制空间，OneDrive限制空间不限制流量，后者更适合我。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677584-e9517c80-3ad8-11ea-9a4f-e5e936beb50c.png&#34; alt=&#34;OneDrive同步&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-生活&#34;&gt;2. 生活&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-迅雷影音&#34;&gt;2.1 迅雷影音&lt;/h3&gt;&#xA;&lt;p&gt;很多人推荐PotPlayer，但少有人注意迅雷影音现在已经移除了所有的广告和推荐，只留下干干净净的界面，论功能足够强大，论颜值也比PotPlayer强，所以我换到了它的阵营。&lt;a href=&#34;http://video.xunlei.com/pc.html&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677588-fb331f80-3ad8-11ea-87ff-da0942c0120d.png&#34; alt=&#34;迅雷影音&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;22-edge&#34;&gt;2.2 Edge&lt;/h3&gt;&#xA;&lt;p&gt;Edge chromium的使用体验挺好的，相比于原版的Edge，支持Chrome商店的所有应用，又有能打的颜值、阅读模式等等实用功能，之前一直用Dev版，1月16日发布正式版后立马跟进。&lt;a href=&#34;https://www.microsoft.com/en-us/edge?icid=SMC-IA-4501095&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677593-0dad5900-3ad9-11ea-9401-7d9ea4db5429.png&#34; alt=&#34;Edge&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;23-microsoft-to-do&#34;&gt;2.3 Microsoft To Do&lt;/h3&gt;&#xA;&lt;p&gt;ToDo类应用，颜值非常高，同时功能全面，还可以和Outlook账户关联同步，手机端也有应用，我现在的待办和备忘是通过它和小米便签协同工作的。&lt;a href=&#34;https://todo.microsoft.com/tasks/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677594-17cf5780-3ad9-11ea-81af-541e31ffcf69.png&#34; alt=&#34;Microsoft To Do&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;24-迅雷&#34;&gt;2.4 迅雷&lt;/h3&gt;&#xA;&lt;p&gt;下载软件，没有选择余地，IDM付费且颜值确实低，FDM的下载速度跟不上，Aria2需要复杂的配置，我平常一般只下载一些电影，得不偿失，所以最后还是用了迅雷。关闭开机启动，用火绒拦截弹窗之后倒也还能用，不会造成太大的困扰。&lt;a href=&#34;https://dl.xunlei.com/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677591-038b5a80-3ad9-11ea-92eb-ff28324f2848.png&#34; alt=&#34;迅雷&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;25-pandownload&#34;&gt;2.5 PanDownload&lt;/h3&gt;&#xA;&lt;p&gt;网盘文件下载，限于百度云不开会员限速到几K的策略，虽然我自己已经不再用网盘，但网上大量的资源依然以网盘的形式分享出来，我使用的下载工具就是PanDownload，现在还集成了资源搜索功能，不用费力的去网上搜索资源，不过有段日子没用该软件了，不知道现在怎么样。&lt;a href=&#34;http://pandownload.com/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677598-261d7380-3ad9-11ea-87ec-9705eeaee798.png&#34; alt=&#34;PanDownload&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;26-其它&#34;&gt;2.6 其它&lt;/h3&gt;&#xA;&lt;p&gt;只需要提一个名字，不需要过多介绍的软件，包括&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;QQ&lt;/li&gt;&#xA;&lt;li&gt;微信电脑版&lt;/li&gt;&#xA;&lt;li&gt;网易云音乐&lt;/li&gt;&#xA;&lt;li&gt;office套件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-美化&#34;&gt;3. 美化&lt;/h2&gt;&#xA;&lt;h3 id=&#34;31-win10萌化通用工具箱&#34;&gt;3.1 Win10萌化通用工具箱&lt;/h3&gt;&#xA;&lt;p&gt;本质就是一个Win10美化工具箱，用它透明化任务栏、设置文件夹背景、跳转库文件和快速访问的显示等，一个软件可以完成TranslucentTB的多个软件的作用。&lt;a href=&#34;http://www.pcmoe.net/thread-71266-1-1.html&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677604-3b929d80-3ad9-11ea-99cb-1fa214b10d4c.png&#34; alt=&#34;软件设置效果&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;32-rainmeter&#34;&gt;3.2 Rainmeter&lt;/h3&gt;&#xA;&lt;p&gt;仅使用其时钟插件，尽可能减少资源消耗。&lt;a href=&#34;https://www.rainmeter.net/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200119_72677607-477e5f80-3ad9-11ea-97ce-9c287309bb46.png&#34; alt=&#34;Rainmeter时钟&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-工作&#34;&gt;4. 工作&lt;/h2&gt;&#xA;&lt;h3 id=&#34;41-chocolatey&#34;&gt;4.1 Chocolatey&lt;/h3&gt;&#xA;&lt;p&gt;包管理工具，方便安装和卸载，我用它安装的软件包括：Golang、Hugo、Git、nvs，对于编程相关的这些软件来说再方便不过了。&lt;a href=&#34;https://chocolatey.org/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化4-文件管理</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-4-file-management/</link>
      <pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-4-file-management/</guid>
      <description>&lt;p&gt;文件管理是效率提升、电子资料极简化的重要部分，本文探索如何有效的对win10中的文件进行管理，核心包括三部分：分类、命名和备份。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-分类&#34;&gt;1. 分类&lt;/h2&gt;&#xA;&lt;p&gt;win10中，最大的分类是磁盘。我的电脑有两块硬盘，划分情况如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;三星SSD 120G：系统盘(C盘)&lt;/li&gt;&#xA;&lt;li&gt;西部数据机械硬盘 1T&#xA;&lt;ul&gt;&#xA;&lt;li&gt;D盘 852G：个人资料&lt;/li&gt;&#xA;&lt;li&gt;F盘 80G：其它&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;SSD只有120G，将其整个作为系统盘，从而提示系统运行流畅度，因为安装的软件不算多，不需要在机械硬盘中单独划分软件安装盘。同时，将软件直接安装在系统盘也可以提升运行流畅度，目前，C盘只占用了50G，因此对于我来说，这种划分方式是合适的。对于游戏来说，一般容量比较大，在安装时就会选择较大的D盘，安装在专门的&lt;code&gt;游戏&lt;/code&gt;文件夹。&lt;/p&gt;&#xA;&lt;p&gt;硬盘其实作为一个完整的磁盘存在比较好，因为划分后文件的复制粘贴都会浪费大量的时间，但出于&lt;code&gt;秩序&lt;/code&gt;的考虑，还是将机械硬盘划分成了两个磁盘。F盘划分了少量的空间，主要有如下用途&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OneDrive同步文件夹&lt;/li&gt;&#xA;&lt;li&gt;Github本地仓库&lt;/li&gt;&#xA;&lt;li&gt;网易云等软件设置的默认下载文件夹&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我使用OneDrive作为同步策略，免费的情况下能获得的最大容量是15G，Github的仓库一般对应某个开发项目，在有限的时间和精力下，一个人同时开发的项目不会很多，另外，Github每个仓库的存储上限是1G，以同时开发5个项目算(已经很多了，而且很少有项目真的占到1G容量上限)，这两部分内容大概会用到20G容量，剩下的容量足够作为网易云等软件的缓存。&lt;/p&gt;&#xA;&lt;p&gt;D盘划分的空间占用了绝大多数，日常的使用以看电影、看剧、收藏动漫和软件、游戏存档和资料、照片为主，因此建立了如下文件夹&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;电影：故名思意，存放下载的电影，会注意及时删除看过的电影，遇到喜欢的会收藏的移动硬盘中&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;剧集：存放电视剧和动漫，我目前有两个子文件夹，&lt;code&gt;宫崎骏&lt;/code&gt;和&lt;code&gt;老友记&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;软件：一些解压即用的、小众不易寻找的软件，以及各种系统镜像&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;虚拟：存放VMware的虚拟机，强迫症发作才把名字改成两个字，好在自己明白它是做什么的，因为虚拟机通常都在几十G，放在C盘会占用大量空间，因此放在此处。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;游戏：以游戏名建立不同的子文件夹，正在玩的游戏存放游戏本体，以前的游戏存放游戏存档和当初收集的游戏资料等。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;照片：照片的分类整理是最为繁琐的，为了保持相互之间最大的独立，大部分照片按时间线分类，目前有三部分：&lt;code&gt;高中&lt;/code&gt;、&lt;code&gt;本科&lt;/code&gt;、&lt;code&gt;硕士&lt;/code&gt;，除此之外，根据具体情况，还有三个文件夹如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;家人&lt;/code&gt;：因为家人照片贯穿整个时间线，单独建立文件夹&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;旅游&lt;/code&gt;：平时经常出去玩，因此单独建立文件夹，里面按景点名建立子文件夹&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;待用&lt;/code&gt;：存放比如身份证照片、化验单等等工作和生活中可能用到的照片&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;以上是整体的框架体系，OneDrive同步文件夹中的结构在本文第三部分介绍。接下来说明日常生活工作的基本流程。&lt;/p&gt;&#xA;&lt;p&gt;电影在下载时直接下载到D盘的&lt;code&gt;电影&lt;/code&gt;目录，其它下载的文件默认位置可能是win10默认的&lt;code&gt;下载&lt;/code&gt;文件夹和迅雷等下载软件的默认下载目录，注意要及时的做好分类，解压即用的软件放到D盘&lt;code&gt;软件&lt;/code&gt;目录，需要收藏的软件也放到这里，一般的软件安装完成后将安装包删除，其它各种文件按这种办法及时的归类和用完删除。&lt;/p&gt;&#xA;&lt;p&gt;在&lt;code&gt;此电脑&lt;/code&gt;下，win10会默认提供几个文件夹，比如&lt;code&gt;图片&lt;/code&gt;、&lt;code&gt;文档&lt;/code&gt;、&lt;code&gt;下载&lt;/code&gt;、&lt;code&gt;桌面&lt;/code&gt;等，其它几个使用频率较小，因此我只保留了这四个。去除该页面不想要的文件夹的方式可以在网上搜索，我使用的是坑晨大佬的&lt;code&gt;Win10萌化通用工具箱&lt;/code&gt;，除了自定义资源管理器这些文件夹的显示外，还用它来透明化任务栏、半透明资源管理器背景和在资源管理器右下角添加喜欢的背景人物。我的&lt;code&gt;此电脑&lt;/code&gt;界面如下，同时，&lt;code&gt;此电脑&lt;/code&gt;也是文件资源管理器的默认打开页面。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20200117_72525676-a8225800-389f-11ea-9dc5-2ad4a87aaa92.png&#34; alt=&#34;文件资源管理器初始页面&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;以上保留的四个文件夹都可以作为单独的文件夹被OneDrive同步，&lt;code&gt;文档&lt;/code&gt;经常被各种软件作为默认的数据存放目录，我们可能经常需要到这里找东西，因此在初始页面保留，&lt;code&gt;下载&lt;/code&gt;前面已经谈到，主要作为浏览器的默认下载目录，打开的频率很高，&lt;code&gt;桌面&lt;/code&gt;就是电脑桌面，我习惯不在桌面放置任何文件，只有在工作时放置一些临时文件，但都是用完即删，但也因此有一定的使用频率。&lt;code&gt;图片&lt;/code&gt;是唯一一个添加到OneDrive同步的，和D盘的&lt;code&gt;照片&lt;/code&gt;不同的是，这里存放的是使用频率较高的或需要在多个电脑使用的图片，当前有四个子文件夹&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;壁纸&lt;/li&gt;&#xA;&lt;li&gt;收藏&lt;/li&gt;&#xA;&lt;li&gt;头像&lt;/li&gt;&#xA;&lt;li&gt;截图&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;图片&lt;/code&gt;目录也是系统截图等很多情况下的默认使用目录。&lt;/p&gt;&#xA;&lt;p&gt;除此之外使用频率较高的只有D盘&lt;code&gt;照片&lt;/code&gt;目录，定期对新照片进行整理存放即可。F盘的Github本地仓库也根据开发工作进行调整。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-命名&#34;&gt;2. 命名&lt;/h2&gt;&#xA;&lt;p&gt;我们这里谈到的命名是自己经常接触的，需要命名的文件，如Github仓库的项目文件、游戏本体、虚拟机、解压即用的软件等，本身自己作为一个单独的文件夹存在，内部已经有着完善的目录体系，虽然涉及大量不同的文件类型，但我们通常不需要对其进行操作，强行重命名甚至可能导致文件不可用，所以不进行讨论。比如某个虚拟机的目录如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test.nvram  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test.vmx          &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-000002.vmdk    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-Snapshot2.vmem  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-Snapshot5.vmsn  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vmware-1.log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test.vmdk   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test.vmxf         &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-c948472c.vmem  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-Snapshot2.vmsn  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vmware.log           &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vmware-2.log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test.vmsd   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-000001.vmdk  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-c948472c.vmss  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test-Snapshot5.vmem  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vmware-0.log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;一个好的文件命名应满足如下需求&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu中无法获得锁相关问题的解决方案</title>
      <link>http://localhost:1313/2020/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;Ubuntu环境下，Unable to acquire the lock这类问题时有发生，本文对该问题的解决方案做一个总结&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)&lt;br&gt;&#xA;E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;第一种情况&#34;&gt;第一种情况&lt;/h2&gt;&#xA;&lt;p&gt;进程中存在与apt相关的正在运行的进程，首先检查是否在运行apt,apt-get相关的进程&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ps aux &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -i apt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;如果存在与apt相关的正在运行的进程，kill掉进程&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo &lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; -9 &amp;lt;process id&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;或者直接简单粗暴的：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo killall apt apt-get &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;如果进行完上面的步骤还是无法顺利执行apt-get 操作，则属于第二种情况&lt;/p&gt;&#xA;&lt;h2 id=&#34;第二种情况&#34;&gt;第二种情况&lt;/h2&gt;&#xA;&lt;p&gt;进程列表中已经没有与apt,apt-get相关的进程在运行，但依然报错，在这种情况下，产生错误的根本原因是lock file。 loack file用于防止两个或多个进程使用相同的数据。 当运行apt或apt-commands时，它会在几个地方创建lock files。 当前一个apt命令未正确终止时，lock file未被删除，因此它们会阻止任何新的apt / apt-get命令实例，比如正在执行apt-get upgrade，在执行过程中直接ctrl+c取消了该操作，很有可能就会造成这种情况。&#xA;要解决此问题，首先要删除lock file。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础12-测试</title>
      <link>http://localhost:1313/2019/golang-syntax-12-test/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-12-test/</guid>
      <description>&lt;p&gt;实际开发中对代码进行测试是不可缺少的工作，在go中可以通过&lt;code&gt;testing&lt;/code&gt;包来进行代码的测试。&lt;code&gt;testing&lt;/code&gt;包和&lt;code&gt;go test&lt;/code&gt;命令相互配合，能够完成代码的自动化测试。&lt;/p&gt;&#xA;&lt;p&gt;在实际开发中，对代码进行测试是不可缺少的工作，在go中可以通过&lt;code&gt;testing&lt;/code&gt;包对代码进行单元测试和性能测试。&lt;/p&gt;&#xA;&lt;h4 id=&#34;基本说明&#34;&gt;基本说明&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;testing&lt;/code&gt;包是与&lt;code&gt;go test&lt;/code&gt;命令配合使用的，编写测试代码需要使用&lt;code&gt;testing&lt;/code&gt;包，而执行测试需要使用&lt;code&gt;go test&lt;/code&gt;命令。执行测试时，会自动读取源码目录下名为&lt;code&gt;*_test.go&lt;/code&gt;的文件，生成并运行测试用的可执行文件，并最终在终端输出测试信息。输出的信息类似于&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;archive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tar&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;0.011&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;FAIL&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;archive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zip&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;0.022&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;compress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gzip&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.033&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;code&gt;testing&lt;/code&gt;包的说明位于：&lt;a href=&#34;https://golang.org/pkg/testing/&#34;&gt;Package testing&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;go test&lt;/code&gt;的说明可通过执行&lt;code&gt; go help test&lt;/code&gt;查看&lt;/p&gt;&#xA;&lt;h4 id=&#34;单元测试&#34;&gt;单元测试&lt;/h4&gt;&#xA;&lt;p&gt;假设当前我们在源代码目录拥有名为&lt;code&gt;hello.go&lt;/code&gt;的源码文件，其内容如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Hello print &amp;#34;hello!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hello!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;首先编写测试用例，即在&lt;code&gt;hello.go&lt;/code&gt;文件同目录下创建&lt;code&gt;hello_test.go&lt;/code&gt;文件，编辑其内容如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;testing&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;TestHello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;注意，单元测试的函数头一般符合如下形式，其中&lt;code&gt;Xxx&lt;/code&gt;是测试函数名。无论原函数名首字母是否大写，测试函数中函数名的首字母必须大写，原话为&lt;code&gt;where Xxx does not start with a lowercase letter.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;TestXxx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;在这两个文件目录下执行&lt;code&gt;go test&lt;/code&gt;命令&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础11-错误处理</title>
      <link>http://localhost:1313/2019/golang-syntax-11-error-and-panic/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-11-error-and-panic/</guid>
      <description>&lt;p&gt;Go中有两套错误处理的方式&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;普通错误： 在函数和方法中返回错误对象作为它们的唯一或最后一个返回值 ，如果返回nil，表示没有错误&lt;/li&gt;&#xA;&lt;li&gt;异常：使用panic和recover&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;主调函数总是应该检查收到的错误，不要忽略，否则可能导致严重的后果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux系统时间同步</title>
      <link>http://localhost:1313/2019/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</guid>
      <description>&lt;p&gt;虚拟机长时间不开机，系统时间和当前时间不同步，导致很多操作被拒绝，这里记录如何主动同步系统的时间和网络时间&lt;/p&gt;&#xA;&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;&#xA;&lt;p&gt;设置系统时区&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ timedatectl set-timezone Asia/Shanghai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;安装ntpdate工具&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install ntpdate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;同步时间&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ntpdate cn.pool.ntp.org&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;将系统时间写入硬件时间&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo hwclock --systohc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;ntpdate cn.pool.ntp.org是位于中国的公共NTP服务器&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础10-协程与通道</title>
      <link>http://localhost:1313/2019/golang-syntax-10-goroutine-and-channel/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-10-goroutine-and-channel/</guid>
      <description>&lt;p&gt;首先来回顾在操作系统中学过的一些概念。进程(processes)是程序执行的基本单位，运行在一个独立的内存地址空间中；一个进程由多个线程(threads)组成，线程的存在是为了能够同时执行多个任务，最大化利用时间，防止产生等待，线程间是共享内存地址空间的。从windows资源管理器看这一点能看的很明白，如下，每个应用程序是一个进程，Typora程序下有两个线程在同时运行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20191216_3EkjsJ.png&#34; alt=&#34;进程与线程&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;并发是建立在多线程之上的概念，将CPU的执行时间划分为许多很小的间隔，多个线程不断地切换执行，从上层看起来就像在同时执行一样，但本质上依然是线性的。并行则是程序在某个特定的事件同时运行在多个CPU上，多核处理器为并行提供了可能。因此，并发也可能是并行的。&lt;/p&gt;&#xA;&lt;p&gt;操作系统课程中一个最主要的问题就是多线程对共享内存空间的访问，我们学到的解决方式是通过加互斥锁来实现，但在设计实现上是一个复杂的过程，非常容易出错，鉴于操作系统考试的惨痛经历，现在完全不想回忆。Go中的标准库&lt;code&gt;sync&lt;/code&gt;中有一些工具可以用来实现互斥锁的相关操作，但它显然没有Go自身支持的Goroutines高效。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-goroutines&#34;&gt;1. Goroutines&lt;/h2&gt;&#xA;&lt;p&gt;Go原生支持并发，依靠的是协程(goroutine)和通道(channel)两个概念。goroutines的概念是为了和processes、threads、coroutines等概念区别。其中coroutines也叫做协程，而且这才是常规意义下的协程，goroutines只在Go中有效。&lt;/p&gt;&#xA;&lt;p&gt;coroutines是比线程更轻的一个概念，只使用很少的内存和资源。它对栈进行分隔，从而动态地增加或缩减内存的使用，栈的管理也是自动的，在协程退出后自动释放空间。协程可以运行在多个线程间，也可以运行在线程内，它的创建廉价到可以在同一地址空间存在100000个。这一概念也存在于其它语言(C#, Java等)中，它与goroutines的区别在于：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go协程意味着并行(或者可以以并行的方式部署)，协程一般不是&lt;/li&gt;&#xA;&lt;li&gt;Go协程通过通道来通信，协程则通过让出与恢复操作来通信&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;理论上，Go协程比协程更加强大。&lt;/p&gt;&#xA;&lt;p&gt;以一个简单模型来描述goroutine：它是一个和其它协程在同一地址空间并发执行的函数。通过在函数或方法名前加上&lt;code&gt;go&lt;/code&gt;关键字来创建和运行一个协程，运行结束后安静的退出(没有任何返回值)。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//并行的运行list.Sort，不等待&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Go程序中必须含有的&lt;code&gt;main()&lt;/code&gt;函数可以看作一个协程，尽管它没有通过&lt;code&gt;go&lt;/code&gt;关键字启动，在程序初始化的过程中(&lt;code&gt;init()&lt;/code&gt;函数运行)，goroutine也可以运行。&lt;/p&gt;&#xA;&lt;p&gt;单纯的结束协程的概念是不够具体的，协程需要和通道来配合&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-channel&#34;&gt;2. Channel&lt;/h2&gt;&#xA;&lt;p&gt;并发编程的困难之处在于实现对共享变量的正确访问，互斥量的方式是复杂的，Go鼓励采用一种不同的方法，即在通道(channel)上传递共享值，如同Unix管道一般，通道用于发送类型化的数据，在任何给定的时间，只有一个协程可以对通道中的数据进行访问，从而完成协程间的通信，也避开了所有由共享内存导致的陷阱。这种通过通道进行通信的方式保证同步性的同时，数据的所有权也因此被传递。&lt;/p&gt;&#xA;&lt;p&gt;这一设计理念最终简化为一句话：&lt;strong&gt;不要通过共享内存来通信，而通过通信来共享内存&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;21-声明与初始化&#34;&gt;2.1 声明与初始化&lt;/h3&gt;&#xA;&lt;p&gt;声明通道的基本形式如下，未初始化的通道值为nil&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;identifier&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;datatype&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;通道只能传输一种类型的数据，比如&lt;code&gt;chan int&lt;/code&gt;或&lt;code&gt;chan string&lt;/code&gt;，可以是任意类型，包括空接口&lt;code&gt;interface{}&lt;/code&gt;和通道自己&lt;/p&gt;&#xA;&lt;p&gt;和map相同，通道也是引用类型，因此使用&lt;code&gt;make&lt;/code&gt;进行初始化，可以指定第二个参数用来指定缓冲区的大小，即通道可容纳的数据个数，这一个值默认是0，意思是无缓冲，无缓冲的通道将通信、值的交换、同步三者结合，保证两个协程的计算处于已知状态。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ci&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ci&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;// unbuffered channel of integers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// unbuffered channel of integers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// buffered channel of pointers to Files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;22-通信操作符-&#34;&gt;2.2 通信操作符&amp;lt;-&lt;/h3&gt;&#xA;&lt;p&gt;这一操作符直观的表示数据的传输：信息按照箭头方向流动。&lt;/p&gt;&#xA;&lt;p&gt;流向通道(发送)用&lt;code&gt;ch &amp;lt;- int1&lt;/code&gt;表示，意为利用通道ch发送变量int1&lt;/p&gt;&#xA;&lt;p&gt;从通道流出(接收)用&lt;code&gt;int2 = &amp;lt;- ch&lt;/code&gt;表示，意为变量int2从通道ch接收数据，如果int2没有声明过，可以使用&lt;code&gt;int2 :=  &amp;lt;- ch&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础8-结构体与方法</title>
      <link>http://localhost:1313/2019/golang-syntax-8-struct-and-method/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-8-struct-and-method/</guid>
      <description>&lt;p&gt;结构体是一种非常重要的结构，用到的地方非常多，在 Go 中，结构体还是实现面向对象编程的基础。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础9-接口与反射</title>
      <link>http://localhost:1313/2019/golang-syntax-9-interface-and-reflect/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-9-interface-and-reflect/</guid>
      <description>&lt;p&gt;本篇介绍 Golang 中的接口与反射。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础7-函数</title>
      <link>http://localhost:1313/2019/golang-syntax-7-function/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-7-function/</guid>
      <description>&lt;h2 id=&#34;1-函数声明与定义&#34;&gt;1. 函数声明与定义&lt;/h2&gt;&#xA;&lt;p&gt;Go中有三种类型的函数：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;普通的带有名字的函数&lt;/li&gt;&#xA;&lt;li&gt;匿名函数&lt;/li&gt;&#xA;&lt;li&gt;方法（Methods，在结构体部分介绍）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;普通函数声明的基本格式为&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;functionName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;param1&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;param2&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ret1&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ret2&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;定义就需要添加大括号和函数体&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;functionName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;param1&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;param2&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ret1&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ret2&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;两个括号中分别为参数列表和返回值列表，参数个数和返回值个数允许为0。左大括号必须与声明语句在同一行，流程控制部分已经见过这个规定，这是编译器强制规定。&lt;/p&gt;&#xA;&lt;p&gt;当函数执行到代码块最后一行，也就是最后一个&lt;code&gt;}&lt;/code&gt;之前，或者执行到&lt;code&gt;return&lt;/code&gt;语句的时候就会退出。&lt;/p&gt;&#xA;&lt;p&gt;main函数是每个程序必须包含的，一般来说是启动后第一个执行的函数，但如果有init()函数会先执行该函数。&lt;/p&gt;&#xA;&lt;p&gt;main函数既没有参数，也没有返回值，如果添加了两者中任一者，都会引发构建错误。main函数一旦返回就表示程序已成功执行并立即退出。同样，init()函数也没有返回值&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-函数调用&#34;&gt;2. 函数调用&lt;/h2&gt;&#xA;&lt;p&gt;同一个包内，可以直接使用函数名调用该函数，不同包内，需要添加包名，如下所示&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pack1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;functionName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arg1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arg2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;argn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pack1&lt;/code&gt;是包名，&lt;code&gt;functionName&lt;/code&gt;是该包中的一个函数，括号里是传入的实参。一个简单的调用其它函数的例子如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;In main before calling greeting&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;In main after calling greeting&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;In greeting: Hi!!!!!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Output:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;before&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;calling&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greeting&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;!!!!!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;after&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;calling&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greeting&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Go中不允许函数重载&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础6-数组、切片与映射</title>
      <link>http://localhost:1313/2019/golang-syntax-6-array-slice-and-map/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-6-array-slice-and-map/</guid>
      <description>&lt;p&gt;只有基本的数据类型无法适应所有的情况，当需要存储和处理大量数据时，通常会使用数组、映射、链表等数据结构，称之为容器(container)。在Go语言中，由于数组不够灵活，增加了切片(slice)类型，切片也是一种容器。&lt;/p&gt;&#xA;&lt;p&gt;C语言没有提供容器封装，开发者需要自己根据性能需求进行封装，或者使用第三方提供的容器。C++ 语言的容器通过标准库提供，如 vector 对应数组，list 对应双链表，map 对应映射等。&lt;/p&gt;&#xA;&lt;p&gt;本篇只介绍数组和切片，映射类型放在下篇介绍，链表类型在数据结构中介绍。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-数组&#34;&gt;1. 数组&lt;/h2&gt;&#xA;&lt;p&gt;数组是有限个相同类型的数据的集合，Go语言中数组声明的格式为&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;identifier&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;数组元素可以是任意基本类型，数组本身，结构体甚至接口（空），当元素类型是数组本身时，即为二维或多维数组。&lt;/p&gt;&#xA;&lt;p&gt;应注意，数组长度也是数组类型的一部分，&lt;code&gt;[5]int&lt;/code&gt;和&lt;code&gt;[10]int&lt;/code&gt;是两个不同类型。&lt;/p&gt;&#xA;&lt;p&gt;数组元素通过索引来读取或修改，不同于字符串，数组是可变的。索引的范围从&lt;code&gt;0&lt;/code&gt;到&lt;code&gt;len(arr)-1&lt;/code&gt;，内置函数&lt;code&gt;len()&lt;/code&gt;可用来获取数组长度，数组长度最大为2Gb。&lt;/p&gt;&#xA;&lt;p&gt;声明数组时所有的元素都会被自动初始化为元素类型的零值，初始化的过程是按照数组元素的顺序进行的。&lt;/p&gt;&#xA;&lt;p&gt;当数组元素较少时，可以在声明时直接进行初始化，一些表达方式如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//剩下的元素会自动补全，其值为0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//只有索引2被赋予了实际的值，其它元素都初始化为空字符串&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;数组长度的位置也可以使用省略号，此时数组长度会根据提供的值的个数自动推断&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;数组元素较多时使用for循环初始化&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//使用for循环初始化&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Go语言中数组是一种值类型，而不像C语言是指向首元素的指针，因此可以使用内置函数&lt;code&gt;new()&lt;/code&gt;来创建数组（&lt;code&gt;new()&lt;/code&gt;用来创建值类型，返回所创建类型的指针）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;这种方式和&lt;code&gt;var arr2 [5]int&lt;/code&gt;的区别是，arr1的类型是&lt;code&gt;*[5]int&lt;/code&gt;，而arr2的类型是&lt;code&gt;[5]int&lt;/code&gt;，一个简单的式子可以帮助理解&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;arr2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;当像上式这样进行赋值时，我们把arr1的值做了一次拷贝，因此修改arr2不会对arr1产生影响。同理，函数中数组作为参数传入时，传入值类型的数组不会改变原值，但是直接传入数组作为参数，当数组很大时会消耗很多内存，可以传入数组的指针或使用切片来解决。以下是传入指针的例子。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nf&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &#x9;&lt;span class=&#34;c1&#34;&gt;// passes a copy of ar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;nf&#34;&gt;fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// passes a pointer to ar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;数组可以组装成多维数组，一个二维数组可以理解为一个数组类型的数组，以下演示一个二维数组的声明&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客5-博客收集</title>
      <link>http://localhost:1313/2019/hugo-blog-themes-collection/</link>
      <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-themes-collection/</guid>
      <description>&lt;p&gt;本文用来收集喜欢的主题和有参考价值的博客(使用Hexo或Hugo的)。&lt;/p&gt;&#xA;&lt;h2 id=&#34;主题&#34;&gt;主题&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/liuzc/LeaveIt&#34;&gt;LeaveIt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Fastbyte01/KeepIt&#34;&gt;KeepIt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/dillonzq/LoveIt&#34;&gt;LoveIt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/orianna-zzo/AllinOne&#34;&gt;AllinOne&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cofess/hexo-theme-pure&#34;&gt;hexo-theme-pure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Siricee/hexo-theme-Chic&#34;&gt;hexo-theme-Chic&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;博客&#34;&gt;博客&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yearito.cn/&#34;&gt;Yearito&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://learnblockchain.cn/&#34;&gt;深入浅出区块链&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://siricee.github.io/&#34;&gt;Sirice&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mogeko.me/&#34;&gt;Mogeko&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://huaien.co/&#34;&gt;Wyane&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dillonzq.com/&#34;&gt;Dillon&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://orianna-zzo.github.io/AllinOne-html/&#34;&gt;Orianna的博客&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://molunerfinn.com/&#34;&gt;MARKSZ的Blog&lt;/a&gt;：PicGo的开发者&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://liam.page/&#34;&gt;始终的博客&lt;/a&gt;：Hexo-Next主题优秀博客&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Golang语法基础5-字符串操作与输入输出</title>
      <link>http://localhost:1313/2019/golang-syntax-5-string-input-and-output/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-5-string-input-and-output/</guid>
      <description>&lt;p&gt;本篇介绍字符串的相关操作，涉及&lt;code&gt;string&lt;/code&gt;和&lt;code&gt;strconv&lt;/code&gt;两个标准库，以及介绍输入输出的基本方法，涉及&lt;code&gt;fmt&lt;/code&gt;和&lt;code&gt;bufio&lt;/code&gt;两个标准库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础4-运算符与流程控制</title>
      <link>http://localhost:1313/2019/golang-syntax-4-operators-and-flow-control/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-4-operators-and-flow-control/</guid>
      <description>&lt;p&gt;本文介绍 Golang 中的运算符和流程控制&lt;/p&gt;</description>
    </item>
    <item>
      <title>Win10效率优化3-桌面整理</title>
      <link>http://localhost:1313/2019/efficient-use-of-win10-3-desktop-management/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/efficient-use-of-win10-3-desktop-management/</guid>
      <description>&lt;p&gt;对任何系统来讲，桌面的整理都是重中之重。有些人喜欢文件触手可及，所有东西都放在桌面。有些人喜欢极简美观，桌面一尘不染，全部通过快速搜索完成。也有人做了折衷，桌面只放常用的文件并使用一些整理工具管理。没有对错，没有优劣，这种事情全看个人喜好，自己用着舒服就行。&lt;/p&gt;&#xA;&lt;p&gt;至于我自己，大概属于第二种吧。以下也按我的习惯来介绍，主要分三部分：壁纸，桌面，任务栏。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-壁纸&#34;&gt;1. 壁纸&lt;/h2&gt;&#xA;&lt;p&gt;无论个人喜好，壁纸的选择都应以不影响使用为原则，过于花里胡哨的壁纸将严重影响对应用和文件的识别，即使桌面干净的用户，复杂的图片也绝对挑战着人的观感和耐心。因此，挑选壁纸不仅要注意分辨率的大小，还要注意构图尽可能简单，最好拥有1/3以上的邻近色区域。以下两张图片就是一个鲜明的对比。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://wallpaperplay.com/walls/full/e/1/c/17719.jpg&#34; alt=&#34;Art&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://wallpaperplay.com/walls/full/c/3/3/38025.jpg&#34; alt=&#34;Cute Owl&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;除此之外，壁纸可分为静态壁纸和动态壁纸两类。&lt;/p&gt;&#xA;&lt;p&gt;静态壁纸的使用是主流，但动态壁纸也有不少拥趸。比较有名的动态壁纸软件是steam上的&lt;a href=&#34;https://store.steampowered.com/app/431960/Wallpaper_Engine/&#34;&gt;Wallpaper Engine&lt;/a&gt;，在社区中提供了大量高质量的动态壁纸，并且不仅仅是常规意义的动态壁纸，还可以通过鼠标进行交互式控制，甚至直接在壁纸上玩游戏，可以说是把这种类型做到了极致。但该软件的缺点在于比较消耗系统资源，同时在电脑启动时要级联启动steam和该软件，拖累了电脑启动速度，在用了一段时间后，新鲜感下降，我也就弃它而去了。以效率和极简的原则来看，动态壁纸的使用性价比并不高，若为了体验一番或电脑配置较高可以使用，但普通情况下不作建议。&lt;/p&gt;&#xA;&lt;p&gt;静态壁纸最重要的就是好的壁纸来源。我个人来讲主要有两个，一个是「Windows聚焦」功能每日更换的锁屏壁纸，遇到喜欢的就保存下来，作为桌面使用；另一个是壁纸网站&lt;a href=&#34;https://wallpaperplay.com/&#34;&gt;Wallpaperplay&lt;/a&gt;，提供了大量高质量的图片，可以挑选作为自己的壁纸使用。我最常使用的是以&lt;code&gt;Minimalist&lt;/code&gt;开头的分类中的图片。以下的示例图片和本文开头的两张对比图片都来自该网站。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://wallpaperplay.com/walls/full/7/2/9/20920.jpg&#34; alt=&#34;Minimalist&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-桌面&#34;&gt;2. 桌面&lt;/h2&gt;&#xA;&lt;p&gt;之所以把桌面和壁纸分开，是为了谈一谈桌面管理。一般情况下，桌面存在的内容包括软件快捷方式图标和常用文档，也有人放置Todo清单。随意放置的话，即使挑选了一张好的壁纸，最后也会把桌面弄得一团糟。因此有人使用了最简单的四象限分类法，将壁纸设为如下的四象限壁纸，把图标和文件放到不同的区域。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://5b0988e595225.cdn.sohucs.com/images/20190717/6299ee4c2cef49d8a9c1a165a79722ed.jpeg&#34; alt=&#34;四象限壁纸&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;也有人使用&lt;a href=&#34;https://www.stardock.com/products/fences/&#34;&gt;Fences&lt;/a&gt;或&lt;a href=&#34;https://guanjia.qq.com/product/zmzl/&#34;&gt;腾讯桌面整理&lt;/a&gt;，把文件归档，桌面于是变成了下面这种样子。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.stardock.com/products/fences/images/fences3/14-Different-View-Modes.jpg&#34; alt=&#34;使用Fences整理桌面&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;但就我自己而言，四象限法不够优雅美观，桌面整理工具又会破坏桌面整体性，还会在右键菜单添加一大堆不需要的东西，因此我选择不放图标和文件在桌面。常用的软件都固定在了底部任务栏，文件则即用即删，同一时间工作的文档不会很多，同时也提醒自己尽快完成工作，之后就可以从桌面移走。如下是我的桌面。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67372906-3d6bc400-f5b1-11e9-859c-764655c6fa5d.jpg&#34; alt=&#34;我的桌面&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;从上图中注意到的另外一点是我在桌面中央放置了一个时钟，使得整个桌面更加和谐，不至于空荡荡的，时钟的位置可以根据壁纸的图案进行调整。而该时钟插件则来源于&lt;a href=&#34;https://www.rainmeter.net/&#34;&gt;Rainmeter&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;实际上关于桌面美化，Rainmeter恐怕不得不提，原本只是一个系统状态监视软件的它，由于强大的可定制性和扩展性，发展出了一个极为庞大的&lt;a href=&#34;https://bbs.rainmeter.cn/forum.php&#34;&gt;社区&lt;/a&gt;，并产生了数量难以估计的插件程序和皮肤样式，从而为我们进行系统桌面的美化提供了极大便利，一个官网提供的示例如下&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.rainmeter.net/img/showcase/momento.png&#34; alt=&#34;Rainmeter示例桌面&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Rainmeter可以显示CPU、内存、硬盘容量、网络等系统信息，可以从网络获取如天气、RSS源等信息，而且占用资源极小。但它不能修改如任务栏外观、开始按钮外观等系统视觉样式，也不能替代与之关联的程序，如果一个皮肤关联了网易云，使用的条件必须是网易云在后台运行。&lt;/p&gt;&#xA;&lt;p&gt;因此，出于极简与效率的考虑，我们摒弃了在桌面使用插件显示CPU、内存、硬盘等系统信息的想法，这些一般情况下查看的频率极小，没有必要放在桌面显示，需要的时候在任务管理器界面查看即可，更加的详细。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67372965-58d6cf00-f5b1-11e9-919a-1d5e3a34daa1.png&#34; alt=&#34;任务管理器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;我们只简单的添加了一个时钟插件，至于天气信息是否添加，随自己所愿。&lt;/p&gt;&#xA;&lt;p&gt;最后是便签，我是曾想过使用那种贴边隐藏的便签的，但思来想去，对我的作用恐怕不是很大，一来便签软件随电脑启动又会增加一项负担，另外就是我个人还是更偏爱使用实际的便签纸贴在工位上，尤其是在看过&lt;a href=&#34;https://movie.douban.com/subject/26816519/&#34;&gt;逃避虽可耻但有用&lt;/a&gt;后，新垣结衣工作中使用的便签法给我了极大的启发。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-任务栏&#34;&gt;3. 任务栏&lt;/h2&gt;&#xA;&lt;p&gt;在我的认知中，任务栏的作用可真的是太大了，不仅仅原先在桌面的软件现在全靠任务栏的图标启动，快速搜索、时间线、日期时间显示等都依赖它。不过在介绍各项功能调整之前，我们先来介绍两个任务栏美化的小技巧。&lt;/p&gt;&#xA;&lt;h3 id=&#34;31-任务栏透明&#34;&gt;3.1 任务栏透明&lt;/h3&gt;&#xA;&lt;p&gt;任务栏透明的工具千千万，而我独爱&lt;a href=&#34;https://github.com/TranslucentTB/TranslucentTB&#34;&gt;TranslucentTB&lt;/a&gt;。说实话，任务栏透明的工具还是不少的，但TranslucentTB集中于这一个功能，把它做到了极致。我曾经使用过很长一段时间坑晨大佬的&lt;a href=&#34;http://www.pcmoe.net/thread-71266-1-1.html&#34;&gt; Win10 萌化通用工作箱&lt;/a&gt;，但到最后发现其中很多功能，包括文件夹背景自定义、系统窗口半透明等我都用不到，或者说这些功能不符合我的使用原则，造成了极大的生产力浪费。直到我找到了TranslucentTB。&lt;/p&gt;&#xA;&lt;p&gt;一些高级功能暂且不表，TranslucentTB支持任务栏的&lt;code&gt;Blur&lt;/code&gt;，&lt;code&gt;Clear&lt;/code&gt;，&lt;code&gt;Normal&lt;/code&gt;，&lt;code&gt;Opaque&lt;/code&gt;，&lt;code&gt;Fluent&lt;/code&gt;五种显示方式，但最为令人惊喜的细节在于，可以在桌面环境和窗口模式下透明，而在全屏模式下不透明。只有经历过的人才会懂这个功能有多么有用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373023-76a43400-f5b1-11e9-90ab-65f2c407ac60.png&#34; alt=&#34;窗口模式的任务栏&#34;&gt;&#xA;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373032-7dcb4200-f5b1-11e9-8527-440196b8c9c2.png&#34; alt=&#34;全屏模式的任务栏&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;TranslucentTB可以直接从 Win10 商店里下载。&lt;/p&gt;&#xA;&lt;h3 id=&#34;32-任务栏居中&#34;&gt;3.2 任务栏居中&lt;/h3&gt;&#xA;&lt;p&gt;任务栏居中可以通过简单的调整实现，无需安装软件。&lt;/p&gt;&#xA;&lt;p&gt;首先在磁盘任意位置建立一个空文件夹，命名为自己喜欢的名字。我选择在F盘根目录建立了文件夹&lt;code&gt;Minimalism&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373057-8a4f9a80-f5b1-11e9-913f-d0ce2a391346.png&#34; alt=&#34;建立空文件夹&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;右键任务栏，选择&lt;code&gt;工具栏—&amp;gt;新建工具栏&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373105-9c313d80-f5b1-11e9-8660-ac228a24142a.png&#34; alt=&#34;新建工具栏&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在弹出的窗口中选择刚刚新建的空文件夹，确认选择。因为我已经操作过一次，所以图中已经可以看到之前新建的&lt;code&gt;Minimalism&lt;/code&gt;工具栏。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373147-afdca400-f5b1-11e9-8158-794412d34733.png&#34; alt=&#34;关联文件夹&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这一步操作之后任务栏应当是如下模样&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373165-bcf99300-f5b1-11e9-8bf2-3a9ad721f1f1.png&#34; alt=&#34;新建工具栏后的任务栏&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以看到，名为&lt;code&gt;Minimalism&lt;/code&gt;的文件夹出现在了任务栏，可以通过这一特性在任务栏定制自己喜欢的文字，但最好不要太长。同时由于该文件夹成为了新的工具栏，之后也不要往里面放文件，不然会一同显示在任务栏中，出现这种情况。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/67373192-c8e55500-f5b1-11e9-8ea3-7e54baaae484.png&#34; alt=&#34;放了文件后的工具栏&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时继续右键任务栏，取消勾选&lt;code&gt;锁定任务栏&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373220-d4d11700-f5b1-11e9-9b5a-4bd1e28673de.png&#34; alt=&#34;取消勾选锁定任务栏&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;取消勾选后，&lt;code&gt;Minimalism&lt;/code&gt;前将出现双竖线。鼠标点击双竖线使劲向左水平拖动，直到左侧的一堆图标自动移动到右边。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373262-e7e3e700-f5b1-11e9-8476-9eb21fda0a6d.png&#34; alt=&#34;图标右移&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后拖动图标左侧的双竖线移动到任务栏中央，重新锁定任务栏，调整完毕。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373283-f29e7c00-f5b1-11e9-8a94-dd44f75d8173.jpg&#34; alt=&#34;任务栏居中&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;33-小图标设置&#34;&gt;3.3 小图标设置&lt;/h3&gt;&#xA;&lt;p&gt;前两步走完之后，其实大体的优化都已经结束了，剩下的是一些细节的说明，包括右侧小图标的显示与否，以及我们把桌面清空之后如何快速搜索软件和文档等。当前主要介绍右下角的小图标设置。&lt;/p&gt;&#xA;&lt;p&gt;右键任务栏，点击任务栏设置，所出现的就是我们所有可做的调整了，也许有人从未关注过这些功能，不过其实都挺有意思的，下面将逐个介绍。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373310-ff22d480-f5b1-11e9-9984-012905dc5a1d.jpg&#34; alt=&#34;任务栏设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;在桌面模式下自动隐藏任务栏&lt;/strong&gt;，如文所述，勾选之后，任务栏将自动隐藏，无论是窗口模式还是全屏模式，只有当鼠标移动到任务栏的位置时任务栏才会显示。也许有人喜欢这样的方式，但我自己来说，即使我喜欢极简，当影响到使用时一样无法接受。由于之前已经将桌面清空，大部分功能依赖任务栏完成，因此对任务栏的使用频率极高，自动隐藏会使人使用起来非常难受，这也是我为什么第一次见到这项功能十分惊喜，但使用连一天都没坚持下来。&lt;/p&gt;&#xA;&lt;p&gt;下面的两个图并不是我没有截任务栏哦，是自动隐藏了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373586-7eb0a380-f5b2-11e9-9bad-572c072cf95c.jpg&#34; alt=&#34;桌面模式隐藏任务栏（桌面）&#34;&gt;&#xA;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191023_67373605-85d7b180-f5b2-11e9-8c2b-ebd7014a718e.jpg&#34; alt=&#34;桌面模式隐藏任务栏（全屏）&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用小任务按钮&lt;/strong&gt;，曾经用过一段时间，作用是将任务栏的大小缩小一号，但人年纪大了，眼睛不好，后来还是换了回来(滑稽)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础3-常量变量与基本数据类型</title>
      <link>http://localhost:1313/2019/golang-syntax-3-constants-variables-and-elementary-types/</link>
      <pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-3-constants-variables-and-elementary-types/</guid>
      <description>&lt;p&gt;本文介绍 Go 中的常量、变量、基本数据类型和常用的类型转换。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Win10效率优化1-综述</title>
      <link>http://localhost:1313/2019/efficient-use-of-win10-1-overview/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/efficient-use-of-win10-1-overview/</guid>
      <description>&lt;p&gt;得益于苹果的生态，MacOS上的优秀软件不少，因此网上存在大量介绍如何利用Mac有效率的学习、工作和生活的文章。但对于Win10来说，这方面的文章就乏善可陈了，但Win10作为一款消费级操作系统，拥有最大的市场占比，更在不断迭代优化，其软件数量也远远超过Mac，因此我相信它是有改善我们学习或工作模式的潜力的。&lt;/p&gt;&#xA;&lt;p&gt;我想要收集一些信息，并结合自身的使用经验，做一次这方面的总结，给自己一个备份，也给其他人一些借鉴。相信不论出于何种原因身处Win10的阵营，一颗追求效率和极简的心想必依然是有的。&lt;/p&gt;&#xA;&lt;p&gt;我们遵循极简和效率的理念来使用Win10，也以同样的理念安排这一个系列的文章。不过，有别于Mac，在Win10领域有一个庞大的社区是关于美化的，好的视觉效果能让人心情愉快，美观也是我们追求的目标，但这一目标位于效率和极简之后，意思是，美化不应当造成任何操作上的不便。这就是我使用Win10的三原则。&lt;/p&gt;&#xA;&lt;p&gt;先来一次头脑风暴，将会涉及的方面包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;锁屏&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;桌面：包括壁纸、桌面管理、任务栏。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件管理&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件资源管理器的初始界面&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;磁盘划分&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件归档&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件命名&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件同步和设备间文件互传&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;系统功能：包括截图、连接、投影、夜间模式、搜索、时间线、VPN、热点等等。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;软件管理&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;软件安装和卸载工具：IObit Uninstaller, Chocolatey&lt;/li&gt;&#xA;&lt;li&gt;通信：QQ, 微信&lt;/li&gt;&#xA;&lt;li&gt;压缩解压工具：7zip&lt;/li&gt;&#xA;&lt;li&gt;浏览器：Edge dev&lt;/li&gt;&#xA;&lt;li&gt;安全软件，应包括磁盘扫描，垃圾清理，漏洞修复，火绒&lt;/li&gt;&#xA;&lt;li&gt;编程IDE和其它编程相关：VScode, Github&lt;/li&gt;&#xA;&lt;li&gt;文献管理：Zotero&lt;/li&gt;&#xA;&lt;li&gt;文档编辑：Typora&lt;/li&gt;&#xA;&lt;li&gt;音乐、视频播放软件：网易云，迅雷影音&lt;/li&gt;&#xA;&lt;li&gt;邮件和日程管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Win10效率优化2-锁屏与登录</title>
      <link>http://localhost:1313/2019/efficient-use-of-win10-2-lockscreen-and-login/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/efficient-use-of-win10-2-lockscreen-and-login/</guid>
      <description>&lt;p&gt;Win10 系统中，锁屏是我们登录系统前看到的一个界面。它的作用是当我们暂时离开电脑时阻止别人操作，但早晨当我们打开电脑时，第一眼看到也是锁屏界面，因此它可以影响我们的心情，所以要选择好的图片作为锁屏背景。微软提供了一些关于锁屏的有用的功能，包括：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;自定义锁屏背景图片&lt;/li&gt;&#xA;&lt;li&gt;在锁屏界面显示当前时间和日期&lt;/li&gt;&#xA;&lt;li&gt;在锁屏界面显示日历中日程信息和软件通知&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;所有的设置基本都位于个性化设置中的锁屏界面设置。以下我们就来介绍如何定制一个合适的锁屏界面。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-锁屏背景&#34;&gt;1. 锁屏背景&lt;/h2&gt;&#xA;&lt;p&gt;Win10 允许我们以三种方式设置锁屏背景： Windows 聚焦，图片和幻灯片放映。具体的设置方式为&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;打开&lt;strong&gt;设置&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;点击&lt;strong&gt;个性化&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;点击&lt;strong&gt;锁屏界面&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;在&lt;strong&gt;背景&lt;/strong&gt;下拉菜单中选择自己要使用的方式&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67180995-dbbf2480-f40d-11e9-8f60-1b3bbcc4e3df.png&#34; alt=&#34;锁屏设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择图片作为锁屏背景后，需要点击「浏览」按钮在电脑中选择自己喜欢的图片，所选图片最好不要影响左下角的时间和通知显示，若能相互辉映最好。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67632706-00ba0880-f8e2-11e9-9023-845943843824.png&#34; alt=&#34;将图片设置为锁屏背景&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择幻灯片放映，则需要选择一个图片文件夹，锁屏界面将循环播放这些图片，每个图片的停留时间大约在10秒左右。&lt;/p&gt;&#xA;&lt;p&gt;单张图片容易看腻，幻灯片不仅需要自己劳心劳力寻找图片，切换速度也比较快。这种情况下，第三个选择&lt;a href=&#34;https://docs.microsoft.com/zh-cn/windows/configuration/windows-spotlight&#34;&gt;Windows 聚焦&lt;/a&gt; 最好不过了。&lt;/p&gt;&#xA;&lt;p&gt;「 Windows 聚焦」是 Win10 内置的一个锁屏壁纸自动换功能，开启后会在锁屏界面每天更换一张新的壁纸。这里需要注意的是，每天第一次登录电脑看到的依然是昨天的背景图片，因为只有在系统启动并联网后才会自动下载壁纸，当你第二次登录时，壁纸就会更新了。&lt;/p&gt;&#xA;&lt;p&gt;Windows 聚焦的壁纸多数为风景照，质量都非常高，而且右上角会有提示询问是否喜欢这张壁纸，选择“不喜欢”将会更换新壁纸，每次选择都会为「 Windows 聚焦」后续筛选壁纸提供参考，从而令锁屏界面出现的壁纸越来越符合个人喜好。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67181021-eed1f480-f40d-11e9-80ff-7378ab87d6fb.png&#34; alt=&#34;锁屏壁纸示例&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;上图是我的电脑今天的锁屏壁纸，可以看到，在左上角和中间还有一些文字，一般情况都是对壁纸内容的简单介绍，有时候也会是一些使用小贴士。而右上角除了喜欢与不喜欢的选项外，还显示了该景点的名称和所在地，单击景点名称然后解锁屏幕，Edge浏览器将自动启动并展示该景点更详细的信息。有的时候我们对某个图片的景点喜爱至极，非常想知道是哪个地方，所以这个功能可谓是十分重要了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67181050-07420f00-f40e-11e9-8e96-5ee4096ceba3.png&#34; alt=&#34;Edge显示锁屏壁纸信息&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如前所述，在经过长时间的使用和反馈之后， Windows 聚焦选择的壁纸将会越来越符合我们的喜好，通常大家都会有将其保存下来的冲动。这些壁纸在电脑中的保存路径为&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;C:&lt;span class=&#34;se&#34;&gt;\U&lt;/span&gt;sers&lt;span class=&#34;se&#34;&gt;\u&lt;/span&gt;ser&lt;span class=&#34;se&#34;&gt;\A&lt;/span&gt;ppData&lt;span class=&#34;se&#34;&gt;\L&lt;/span&gt;ocal&lt;span class=&#34;se&#34;&gt;\P&lt;/span&gt;ackages&lt;span class=&#34;se&#34;&gt;\M&lt;/span&gt;icrosoft. Windows .ContentDeliveryManager_cw5n1h2txyewy&lt;span class=&#34;se&#34;&gt;\L&lt;/span&gt;ocalState&lt;span class=&#34;se&#34;&gt;\A&lt;/span&gt;ssets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;其中&lt;code&gt;user&lt;/code&gt;字段是个人的用户名。此处保存的所有的壁纸都没有后缀，需要我们手动添加图片格式后缀。不过在将其转变为图片之前，为了不影响当前壁纸的显示，最好把它们复制到一个新的文件夹，如下图Spotlight Wallpapers。之后就可以更改这些文件的后缀为图片类型了，推荐使用&lt;a href=&#34;https://www.binfensoft.cn/archives/353&#34;&gt;批量修改文件名&lt;/a&gt;这一软件，更方便一点，文件类型使用&lt;code&gt;.png&lt;/code&gt;最好，但&lt;code&gt;.jpg&lt;/code&gt;和&lt;code&gt;.jpeg&lt;/code&gt;等其它类型也都可以使用。另外，对&lt;code&gt;Asset&lt;/code&gt;文件夹中的原始文件按修改日期排序，可以找到当天的壁纸图片。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67181066-188b1b80-f40e-11e9-9a8c-ef633896b436.png&#34; alt=&#34;锁屏壁纸存储位置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最后还有一点， Windows 聚焦同时提供两种分辨率格式的图片，为1080×1920和1920×1080，前一种可以用于竖屏显示器或手机。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67181085-22ad1a00-f40e-11e9-8d86-6741cb828515.png&#34; alt=&#34;图片分两种格式&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-应用通知&#34;&gt;2. 应用通知&lt;/h2&gt;&#xA;&lt;p&gt;除了时间和日期， Win10 还支持在锁屏界面显示一个应用的详细状态和多个应用的快速状态。设置按钮位于锁屏背景设置的下方。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67181099-2c368200-f40e-11e9-9d4c-e3c39e61d275.png&#34; alt=&#34;锁屏页面显示应用&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;支持显示的应用基本是 Win10 的系统应用，多数我们平时都不会使用，但天气信息的显示对大部分人都有意义，而Outlook日历用户也是一个不小的群体，因此这两个应用显示在锁屏上是对我们有帮助的。应用显示之前首先应在系统中初始化，比如天气应当首先设置好城市。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-登录界面&#34;&gt;3. 登录界面&lt;/h2&gt;&#xA;&lt;p&gt;在应用通知设置的下方，有一个「在登录屏幕上显示锁屏界面背景图片」的按钮。该按钮出现在 Win10  1903版本之后，会在密码输入页面将锁屏壁纸模糊化显示，取消勾选此选项则只有一片灰色背景，两种情况对比如下，对我个人来讲，更喜欢壁纸模糊化的显示。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67183939-2e500f00-f415-11e9-86ff-d082745fdc1b.png&#34; alt=&#34;登录界面不显示锁屏壁纸&#34;&gt;&#xA;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67632706-00ba0880-f8e2-11e9-9023-845943843824.png&#34; alt=&#34;登录界面显示锁屏壁纸&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-手环解锁&#34;&gt;4. 手环解锁&lt;/h2&gt;&#xA;&lt;p&gt;Win10 登录方式有人脸、指纹、PIN、物理密钥、图片密码和普通的登录密码。人脸和指纹自然是好的，但老旧的电脑和台式电脑恐怕都力不从心，这种情况下，PIN是最常用的办法。但现在，小米手环可以通过官方的商店应用「小米智能解锁」来快速解锁屏幕。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20191021_67634007-da03ce00-f8f1-11e9-931c-3138b0992585.png&#34; alt=&#34;小米智能解锁&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git深入-子模块, 徽章, 开源协议</title>
      <link>http://localhost:1313/2019/git-learning-deep-into/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/git-learning-deep-into/</guid>
      <description>&lt;p&gt;学习一些更高级或更有趣的 Git 用法，包括子模块、徽章、开源协议选择等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客4-主题美化</title>
      <link>http://localhost:1313/2019/hugo-blog-theme-beautify/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-theme-beautify/</guid>
      <description>&lt;h2 id=&#34;1-基础知识&#34;&gt;1. 基础知识&lt;/h2&gt;&#xA;&lt;p&gt;通过一个简单的主题开发流程，理解需要的基本知识，为自己进行主题修改和美化打基础，这里参考&lt;a href=&#34;https://github.com/digitalcraftsman/hugo-steam-theme/blob/master/exampleSite/content/post/creating-a-new-theme.md&#34;&gt;create a new theme&lt;/a&gt;一文。&lt;/p&gt;&#xA;&lt;h3 id=&#34;开发准备&#34;&gt;开发准备&lt;/h3&gt;&#xA;&lt;p&gt;Ubuntu安装hugo&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ snap install hugo --channel&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;extended&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;extended/stable&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 0.58.3 from Hugo Authors installed&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;该命令将安装&lt;code&gt;extended&lt;/code&gt;Sass/SCSS版本(apt-get 安装的hugo版本较低)&lt;/p&gt;&#xA;&lt;p&gt;建立博客文件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hugo new site newTheme&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;total &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; songdehua songdehua &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Sep &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 15:52 archetypes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; songdehua songdehua   &lt;span class=&#34;m&#34;&gt;82&lt;/span&gt; Sep &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 15:52 config.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; songdehua songdehua &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Sep &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 15:52 content&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; songdehua songdehua &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Sep &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 15:52 data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; songdehua songdehua &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Sep &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 15:52 layouts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; songdehua songdehua &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Sep &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 15:52 static&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; songdehua songdehua &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Sep &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 15:52 themes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;创建主题&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础2-命令、包与模块</title>
      <link>http://localhost:1313/2019/golang-basic-grammer-2-command-package-module/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-basic-grammer-2-command-package-module/</guid>
      <description>&lt;p&gt;本篇介绍Go中的基础命令，包和模块。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-命令&#34;&gt;1. 命令&lt;/h2&gt;&#xA;&lt;p&gt;Go 在安装后自带一个命令行工具，名为 &lt;code&gt;go&lt;/code&gt;，用来下载、编译、安装、测试 Go 的包和源文件，关于 Go CLI 的发展历史和设计理念，可以查看 &lt;a href=&#34;https://golang.google.cn/doc/articles/go_command.html&#34;&gt;About the go command&lt;/a&gt;，这里只介绍如何使用这些命令。&lt;/p&gt;&#xA;&lt;p&gt;Go 命令的用法如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go &amp;lt;command&amp;gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;arguments&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;可用命令如下，使用 &lt;code&gt;go help &amp;lt;command&amp;gt;&lt;/code&gt; 可获取对应命令的帮助信息&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bug         start a bug report&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;build       compile packages and dependencies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clean       remove object files and cached files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;doc         show documentation &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; package or symbol&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;env         print Go environment information&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fix         update packages to use new APIs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fmt         gofmt &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;reformat&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; package sources&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;generate    generate Go files by processing &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;get         add dependencies to current module and install them&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;install     compile and install packages and dependencies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;list        list packages or modules&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mod         module maintenance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;run         compile and run Go program&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;        &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; packages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tool        run specified go tool&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;version     print Go version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vet         report likely mistakes in packages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;其它的一些帮助主题如下，使用 &lt;code&gt;go help &amp;lt;topic&amp;gt;&lt;/code&gt; 可以查看相关主题的说明&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础1-背景与初探</title>
      <link>http://localhost:1313/2019/golang-basic-grammar-1-background-and-preliminary-exploration/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-basic-grammar-1-background-and-preliminary-exploration/</guid>
      <description>&lt;h2 id=&#34;1-起源与发展&#34;&gt;1. 起源与发展&lt;/h2&gt;&#xA;&lt;p&gt;Go/Golang 起源于2007年，并于2009年正式对外发布，是一个完全开源的项目，背后的支持者是谷歌公司，核心设计者是三位著名IT工程师：Ken Thompson，Rob Pike，Robert Griesemer。分别是如下从左到右三位&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20190913_3AxHPJ.jpg&#34; alt=&#34;Go语言核心设计者&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其中 Ken Thompson 是 Unix 操作系统的设计者，并因此获得图灵奖，也是C语言前身B语言的设计者，UTF-8 编码设计者之一，计算机史的重要人物，2006年加入谷歌，和另外两人一起设计了Go语言。 Rob Pike 是 Ken 的老搭档。&lt;/p&gt;&#xA;&lt;p&gt;随后又有 lan Lance Taylor 和 Russ Cox 两人加入团队，前者是 gccgo 编译器的作者和 cgo工具链的维护者，后者加入团队后着手Go语言标准库的开发。下图分别是他们两个&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20190913_3AxT54.jpg&#34; alt=&#34;Go语言核心开发者&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Go语言以囊地鼠(Gopher)为图标和吉祥物，这是一种原产于加拿大的啮齿类动物，Go语言开发者也一般自称为 Gopher。下图中左边是囊地鼠，右边是 Go logo.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20190913_3AxXKx.jpg&#34; alt=&#34;Gopher&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Go语言相比于其它语言的最大优势在于它的执行性能与开发效率，这得益于Go在并发编程、内存回收等许多方面的良好设计，并因此大规模用于服务器编程、网络编程、数据库和云平台领域。&lt;/p&gt;&#xA;&lt;p&gt;比较出名的Go语言项目有(不限于这些)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go语言本身： &lt;a href=&#34;https://github.com/golang/go&#34;&gt;https://github.com/golang/go&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Docker： &lt;a href=&#34;https://www.docker.com/&#34;&gt;https://www.docker.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;kubernetes： &lt;a href=&#34;https://github.com/kubernetes/kubernetes&#34;&gt;https://github.com/kubernetes/kubernetes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Ethereum： &lt;a href=&#34;https://github.com/ethereum/go-ethereum&#34;&gt;https://github.com/ethereum/go-ethereum&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;fabric： &lt;a href=&#34;https://github.com/hyperledger/fabric&#34;&gt;https://github.com/hyperledger/fabric&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Hugo： &lt;a href=&#34;https://github.com/gohugoio/hugo&#34;&gt;https://github.com/gohugoio/hugo&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;TiDB： &lt;a href=&#34;https://github.com/pingcap/tidb&#34;&gt;https://github.com/pingcap/tidb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;InfluxDB： &lt;a href=&#34;https://github.com/influxdata/influxdb&#34;&gt;https://github.com/influxdata/influxdb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;ETCD： &lt;a href=&#34;https://github.com/etcd-io/etcd&#34;&gt;https://github.com/etcd-io/etcd&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;使用Go的国外公司有：Google, Docker, NetFlix, CloudFlare, Dropbox, MongoDB, Uber等&lt;/p&gt;&#xA;&lt;p&gt;使用Go的国内公司有：七牛、字节跳动、bilibili、京东、&lt;a href=&#34;https://github.com/baidu/bfe&#34;&gt;百度&lt;/a&gt;，其它公司如小米、腾讯、阿里等也都在使用Go，但可能不是主力&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-跟踪最新动态&#34;&gt;2. 跟踪最新动态&lt;/h2&gt;&#xA;&lt;p&gt;最直接的方式是跟踪Go语言的源码库，关注提交历史和&lt;a href=&#34;https://github.com/golang/go/issues&#34;&gt;issue&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;原始代码库： &lt;a href=&#34;https://go.googlesource.com/go&#34;&gt;https://go.googlesource.com/go&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;github镜像： &lt;a href=&#34;https://github.com/golang/go&#34;&gt;https://github.com/golang/go&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;其它活跃论坛或动态&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/golang-dev&#34;&gt;golang-dev&lt;/a&gt;：Google邮件列表的Go开发组讨论区&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/golang-nuts&#34;&gt;golang-nuts&lt;/a&gt;：Google邮件列表的Go讨论社区&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/golang-announce&#34;&gt;golang-announce&lt;/a&gt;：发布Go版本或Go开发的最新状态&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;go.dev&lt;/a&gt;：刚刚上线(2019.11.14)的Go开发人员中心&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://changelog.com/gotime&#34;&gt;gotime&lt;/a&gt;：Go的一个播客，每周一更，内容有干货&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/golang&#34;&gt;@golang&lt;/a&gt;：Go 语言在 Twitter 的官方帐号&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;此外还有每年举办的几个大会&lt;/p&gt;</description>
    </item>
    <item>
      <title>VMware虚拟机使用技巧</title>
      <link>http://localhost:1313/2019/vmware-usage/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/vmware-usage/</guid>
      <description>&lt;p&gt;双系统时常折腾容易坏电脑，因此一般是在虚拟机中使用Linux系统，常用的虚拟机为VMware，本文对VMware的相关知识以及使用过程中的一些问题做介绍。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三种网络模式辨析&#34;&gt;三种网络模式辨析&lt;/h2&gt;&#xA;&lt;p&gt;VMware有三种网络模式，分别是桥接模式、NAT模式和主机模式&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-bridged桥接模式&#34;&gt;1. Bridged(桥接模式)&lt;/h3&gt;&#xA;&lt;p&gt;在桥接模式下，VMware虚拟出来的操作系统就像是局域网中的一独立的主机，它可以访问网内任何一台机器。不过你需要空闲的IP地址，并且需要手工为虚拟系统配置IP地址、子网掩码，而且还要和宿主机器处于同一网段，这样虚拟系统才能和宿主机器进行通信。&lt;/p&gt;&#xA;&lt;p&gt;如果你想利用VMware在局域网内新建一个虚拟服务器，为局域网用户提供网络服务，就应该选择桥接模式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64345429-f0448a80-d022-11e9-9c6c-5a9154f2d7cd.png&#34; alt=&#34;桥接模式&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-nat网络地址转换模式&#34;&gt;2. NAT(网络地址转换模式)&lt;/h3&gt;&#xA;&lt;p&gt;使用NAT模式，就是让虚拟系统借助NAT(网络地址转换)功能，通过宿主机器所在的网络来访问公网。也就是说，使用NAT模式可以实现在虚拟系统里访问互联网。NAT模式下的虚拟系统的TCP/IP配置信息是由VMnet8(NAT)虚拟网络的DHCP服务器提供的，无法进行手工修改，因此虚拟系统也就无法和本局域网中的其他真实主机进行通讯。采用NAT模式最大的优势是虚拟系统接入互联网非常简单，你不需要进行任何其他的配置，只需要宿主机器能访问互联网即可。&lt;/p&gt;&#xA;&lt;p&gt;如果你想利用VMware安装一个新的虚拟系统，在虚拟系统中不用进行任何手工配置就能直接访问互联网，建议你采用NAT模式。（也可以配置静态IP，后面会介绍）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64345428-efabf400-d022-11e9-87e1-228e7f09f247.png&#34; alt=&#34;NAT模式&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-host-only主机模式&#34;&gt;3. Host-only(主机模式)&lt;/h3&gt;&#xA;&lt;p&gt;在某些特殊的网络调试环境中，要求将真实环境和虚拟环境隔离开，这时你就可采用Host-only模式。&lt;/p&gt;&#xA;&lt;p&gt;在Host-only模式中，所有的虚拟系统是可以相互通信的，但虚拟系统和真实的网络是被隔离开的。可以利用Windows XP里面自带的Internet连接共享(实际上是一个简单的路由NAT)来让虚拟机 通过主机真实的网卡进行外网的访问。虚拟系统的TCP/IP配置信息(如IP地址、网关地址、DNS服务器等)，都是由VMnet1(Host-only)虚拟网络的DHCP服务器来动态分配的。如果你想利用VMware创建一个与网内其他机器相隔离的虚拟系统，进行某些特殊的网络调试工作，可以选择Host-only模式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64345431-f0448a80-d022-11e9-8278-920d6587ca2c.png&#34; alt=&#34;主机模式&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;静态ip设置&#34;&gt;静态ip设置&lt;/h2&gt;&#xA;&lt;p&gt;虚拟机中安装的是Ubuntu18.04，因项目需要对其进行静态IP设置&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-桥接模式&#34;&gt;1. 桥接模式&lt;/h3&gt;&#xA;&lt;p&gt;首先查看虚拟机网络配置信息，选择菜单栏&lt;code&gt;编辑—&amp;gt;虚拟网络编辑器&lt;/code&gt;，在三个网络中选择&lt;code&gt;VMnet0&lt;/code&gt;，桥接模式中选择网卡，我选择了有线网卡，可以根据需要选择无线网卡。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64427296-7f18dc00-d0e3-11e9-8dad-39778fe38ba4.png&#34; alt=&#34;虚拟网络编辑器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其次编辑虚拟机网络模式，点击&lt;code&gt;编辑虚拟机设置&lt;/code&gt;，选择&lt;code&gt;网络适配器&lt;/code&gt;，在&lt;code&gt;网络连接&lt;/code&gt;部分选择&lt;code&gt;桥接模式&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64427318-8c35cb00-d0e3-11e9-9d13-4aaf367e5b7b.png&#34; alt=&#34;虚拟机网络设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;###　2. NAT模式&lt;/p&gt;&#xA;&lt;p&gt;首先依然是查看虚拟机网络配置信息，选择菜单栏&lt;code&gt;编辑—&amp;gt;虚拟网络编辑器&lt;/code&gt;，在三个网络中选择&lt;code&gt;VMnet8&lt;/code&gt;，点击&lt;code&gt;NAT设置&lt;/code&gt;，查看并记录子网ip和网关。虚拟网络编辑器中的&lt;code&gt;使用本地DHCP服务将IP地址分配给虚拟机&lt;/code&gt;选项不要取消勾选，因为看到很多教程说要取消勾选，实际上取消掉之后就没网了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;注：这一步是查看，没有需要更改的内容。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64344984-13bb0580-d022-11e9-9a8c-37744441d088.png&#34; alt=&#34;虚拟网络编辑器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后编辑虚拟机网络模式。查看完配置信息后，在要设置静态ip的虚拟机界面下，点击&lt;code&gt;编辑虚拟机设置&lt;/code&gt;，进入后选择&lt;code&gt;网络适配器&lt;/code&gt;，在&lt;code&gt;网络连接&lt;/code&gt;部分从&lt;code&gt;NAT模式&lt;/code&gt;切换到&lt;code&gt;自定义特点虚拟网络&lt;/code&gt;，并选择&lt;code&gt;VMnet8(NAT模式)&lt;/code&gt;。点击确定后退出。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;注：这一步需要在关闭虚拟机的状态下进行，挂起状态无法设置&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64344983-13bb0580-d022-11e9-896c-4b2149636e34.png&#34; alt=&#34;虚拟机网络适配器设置&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-静态ip设置&#34;&gt;3. 静态ip设置&lt;/h3&gt;&#xA;&lt;p&gt;Ubuntu18.04的静态ip设置是通用的，不因使用虚拟机不同。官方对静态ip设置的说明位于&lt;a href=&#34;https://help.ubuntu.com/lts/serverguide/network-configuration.html&#34;&gt;Network Configuration&lt;/a&gt;，步骤如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用&lt;code&gt;ifconfig&lt;/code&gt;可以查看当前ip和网关地址和网卡名，若有必要可以自己测试一下网络是否畅通。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在&lt;code&gt;/etc/netplan&lt;/code&gt;目录下创建配置文件&lt;code&gt;02_config.yaml&lt;/code&gt;，因为该目录下已有01开头的文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo nano /etc/netplan/02_config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在配置文件中添加如下信息&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;network&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;renderer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networkd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ethernets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ens33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;addresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;m&#34;&gt;192.168.191.4&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;gateway4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;192.168.191.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;nameservers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;mydomain, otherdomain]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;addresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1.1.1.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8.8.8.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ens33&lt;/code&gt;是网卡名，即之前使用&lt;code&gt;ifconfig&lt;/code&gt;命令查到的ip最前面的字段。addresses下的ip是自定义的静态ip，根据子网ip自己选择设置即可，掩码是24位的。&lt;code&gt;gateway4&lt;/code&gt;就是之前在&lt;code&gt;NAT设置&lt;/code&gt;中看到的网关地址。&lt;code&gt;nameservers&lt;/code&gt;下的&lt;code&gt;addresses&lt;/code&gt;是域名服务器地址，这里写的两个是常用的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派和虚拟机组网出现的问题及解决思路</title>
      <link>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BB%84%E7%BD%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BB%84%E7%BD%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/</guid>
      <description>&lt;p&gt;小米随身WiFi拥有两种模式，网卡模式可以令电脑搜索并接入其它的WiFi，AP模式可以开启一个WiFi供别的设备加入。现在拥有一台主机，插在上面的小米随身WiFi开启了热点模式，网关地址为192.168.191.1。另外还有两台树莓派，静态ip分别设置为了192.168.191.2和192.168..191.3。主机中利用VMware建立了一个虚拟机，系统为Ubuntu18.04。现在，虚拟机中的系统（之后简称为虚拟机）需要和两块树莓派联通。拓扑结构如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AvOHS.png&#34; alt=&#34;待处理网络&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在NAT模式下对虚拟机设置了静态ip，但这种情况测试网络时发现虚拟机可以ping通两个树莓派，树莓派无法ping通Ubuntu，经过思考发现NAT模式下虚拟机所在网段和树莓派所在网段不是同一个，虚拟机共享了主机的网络，但树莓派处于AP热点网络下，无法访问。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axp3n.png&#34; alt=&#34;桥接方案&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;将NAT模式改为桥接模式，虚拟机桥接到作为AP热点的小米随身WiFi上。但经试验无法联通，主要是因为桥接的本质是将虚拟机视为和主机在同一网络下的实体设备，桥接的对象也是拥有自己ip的终端设备，而小米随身WiFi此时处于AP模式，类似于路由器，只存在网关地址。理解了这个之后，转而将虚拟机桥接到有线网卡上，但有线网卡所在的实验室局域网和AP热点的局域网存在隔离，无法联通。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AxmC9.png&#34; alt=&#34;虚拟机开启AP&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;转而直接由虚拟机开启AP热点（安装驱动，利用&lt;a href=&#34;https://github.com/oblique/create_ap&#34;&gt;create_ap&lt;/a&gt;开启AP热点），如果树莓派可以访问虚拟机，就能实现互通，经实验并不可以，是因为在AP模式下，小米随身WiFi仍然是路由器状态，虚拟机在网络上的ip取决于其有线网卡，然而有线网卡的地址仍然是实验室局域网ip，和树莓派不互通。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axug1.png&#34; alt=&#34;共同接入手机热点&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;手机开启热点，主机上的随身WiFI切换回无线网卡模式，主机和树莓派都接入手机开启的热点网络。这种情况可以互通，但由于无法对手机热点的网段进行设置，从而无法设定各设备的静态ip。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AxGUe.png&#34; alt=&#34;笔记本开启双虚拟机&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;主机利用随身WiFi开启热点，树莓派和另外一台笔记本电脑接入热点网络，笔记本电脑中开启两个Ubuntu18.04的虚拟机，每个都桥接到热点网络上。这种办法没有试验，一是主机电脑将会陷入闲置，而笔记本电脑的负载将加大。二是太麻烦了，此时打算直接用路由器开局域网让所有设备接入。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Ax0Df.png&#34; alt=&#34;路由器建立局域网&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;找同学借了一个水星MW306R的路由器，开了个局域网，默认网关是192.168.1.1，因为树莓派的静态ip已经设好了，不想动，于是把路由器的网关改成了192.168.191.1，然后树莓派，主机，笔记本都接到路由器的网络，主机和笔记本电脑各开一个虚拟机，虚拟机桥接到无线网络上，从而实现了互通。&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派使用网线直连电脑</title>
      <link>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BA%BF%E7%9B%B4%E8%BF%9E%E7%94%B5%E8%84%91/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BA%BF%E7%9B%B4%E8%BF%9E%E7%94%B5%E8%84%91/</guid>
      <description>&lt;p&gt;树莓派刷好系统，要进行联网使用，手里没有显示屏和HDMI线，实验室没有路由器，电脑也没有无线网卡，唯一的网口也被占用。只能通过网线和USB网口转换器直连电脑并使用SSH登录。&lt;/p&gt;&#xA;&lt;h4 id=&#34;准备材料&#34;&gt;准备材料&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;刷好系统的树莓派，已添加&lt;code&gt;ssh&lt;/code&gt;文件启用ssh&lt;/li&gt;&#xA;&lt;li&gt;一根网线&lt;/li&gt;&#xA;&lt;li&gt;一台已联网的电脑&lt;/li&gt;&#xA;&lt;li&gt;USB网口转换器（如果有多余的网口可以不需要）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;连接&#34;&gt;连接&lt;/h4&gt;&#xA;&lt;p&gt;使用USB网口转换器扩展一个网口出来，使用网线连接扩展的网口和树莓派。&lt;/p&gt;&#xA;&lt;h4 id=&#34;网络设置&#34;&gt;网络设置&lt;/h4&gt;&#xA;&lt;p&gt;打开网络和共享中心，可看到已联网的网络&lt;code&gt;以太网&lt;/code&gt;和树莓派连接的网络&lt;code&gt;以太网3&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190904_3AXugP.png&#34; alt=&#34;网络与共享中心&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;设置网络共享&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击&lt;code&gt;以太网3-&amp;gt;属性-&amp;gt;共享选项卡-&amp;gt;双击“Internet协议版本4（TCP/IP)” –&amp;gt; 选择“使用下面的ip地址” &lt;/code&gt;，填入后点击确认&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/3AXUg0.png&#34; alt=&#34;以太网3 IP设定&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击&lt;code&gt;以太网-&amp;gt;属性-&amp;gt;共享选项卡-&amp;gt;勾选“允许其他网络用户通过此计算机的Internet连接来连接” –&amp;gt; 在家庭网络连接下面的下拉菜单中选择 “以太网3” &lt;/code&gt;，点击确认（出现将ip设置为“192.168.137.1”的提示也点击确定，这里出现这个是因为事先设定了以太网3的IP）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190904_3AXoUH.png&#34; alt=&#34;网络共享设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;查询树莓派的IP&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;在PowerShell或cmd中输入&lt;code&gt;arp -a&lt;/code&gt;，寻找地址&lt;code&gt;192.168.137.1&lt;/code&gt;下面的IP，第一个符合IP分配规则的地址就是树莓派的地址，如果查询不到，重新拔插树莓派的网线后再次查询即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190904_3AjSaQ.png&#34; alt=&#34;arp命令查询树莓派IP&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;也可以使用&lt;code&gt;Advanced IP Scanner Portable&lt;/code&gt;工具扫描查询，名称为&lt;code&gt;raspberrypi.mshome.net&lt;/code&gt;的既是树莓派，见名知意。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190904_3AjFx0.png&#34; alt=&#34;Advanced IP Scanner扫描树莓派IP&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用ssh工具连接&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用ssh工具（我用Putty），通过查询到的IP连接树莓派，默认用户名和密码是&lt;code&gt;pi&lt;/code&gt;和&lt;code&gt;raspberry&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派常用设置</title>
      <link>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;p&gt;记录树莓派使用过程中经常使用的一些设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-wifi连接&#34;&gt;1. WiFi连接&lt;/h2&gt;&#xA;&lt;p&gt;这里指的是初次启动直连WiFi，主要是因为手里没有屏幕，因为使用的小米随身WiFi，所以可能有些废话，但为了保存资料，就写这里了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-随身wifi设置&#34;&gt;1.1 随身WiFi设置&lt;/h3&gt;&#xA;&lt;p&gt;按随身WiFi附带的说明会下载安装一个网络管理软件&lt;a href=&#34;http://www.miwifi.com/miwifi_download.html&#34;&gt;miwifi&lt;/a&gt;，驱动会默认安装。但使用这一软件，接入设备的ip无法ping通，只能选择卸载该软件单独安装驱动。驱动名为&lt;code&gt;Xiaomi 802.11n USB Wireless Adapter&lt;/code&gt;，可以用必应或谷歌直接搜索&lt;a href=&#34;https://www.driverscape.com/download/xiaomi-802.11n-usb-wireless-adapter&#34;&gt;下载&lt;/a&gt;即可。驱动安装完成后，安装&lt;a href=&#34;http://wifi.liebao.cn/&#34;&gt;猎豹免费wifi&lt;/a&gt;，用作wifi管理软件，查看到的设备ip可以使用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;注：使用win10自带的热点开启工具会出现不少问题，即使成功开启了，设备也连接不上。唯一能成功启用的方式还是在安装猎豹免费wifi后进行启用，然后关闭猎豹，不过这样就没什么意义了。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;小米，百度，360的随身WiFi使用的都是mt7601u。其它关于小米随身WiFi的一些参数，查询如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190904_3AL0zV.png&#34; alt=&#34;小米随身WiFi的参数&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-树莓派设置&#34;&gt;1.2 树莓派设置&lt;/h3&gt;&#xA;&lt;p&gt;将刷好 Raspbian 系统的 SD 卡用电脑读取。在 boot 分区，也就是树莓派的 &lt;code&gt;/boot&lt;/code&gt; 目录下新建 wpa_supplicant.conf 文件，按照下面的参考格式填入内容并保存 wpa_supplicant.conf 文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;ctrl_interface&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/run/wpa_supplicant &lt;span class=&#34;nv&#34;&gt;GROUP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;netdev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;update_config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;country&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;network&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;ssid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;WiFi名&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;psk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;密码&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;key_mgmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;WPA-PSK&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;priority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;priority：连接优先级，数字越大优先级越高（不可以是负数）&lt;br&gt;&#xA;scan_ssid：连接隐藏WiFi时需要指定该值为1&lt;/p&gt;&#xA;&lt;p&gt;key_mgmt：加密方式，WPA和WPA2都填WPA-PSK，小米随身WiFi使用这种，其他的还有WEP等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;13-开启ssh连接&#34;&gt;1.3 开启SSH连接&lt;/h3&gt;&#xA;&lt;p&gt;在boot分区新建名为&lt;code&gt;ssh&lt;/code&gt;的文件，要注意小写且没有扩展名。&lt;/p&gt;&#xA;&lt;h3 id=&#34;14-树莓派启动并访问&#34;&gt;1.4 树莓派启动并访问&lt;/h3&gt;&#xA;&lt;p&gt;将配置好的SD卡卸载并插入树莓派，通电启动。不久即可以在WiFi管理软件中看到，设备名会是&lt;code&gt;raspberrypi&lt;/code&gt;，极好辨认，同时能看到分配的ip。通过该ip使用SSH登录即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;注：可以使用&lt;code&gt;arp -a&lt;/code&gt;命令或IP扫描工具扫描，都不影响，只是从wifi管理软件看更快。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客3-进阶设置</title>
      <link>http://localhost:1313/2019/hugo-blog-advanced-setup/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-advanced-setup/</guid>
      <description>&lt;p&gt;本文是 Hugo 使用记录的第二篇，介绍如何为Hugo开启更多的功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-添加菜单栏页面&#34;&gt;1. 添加菜单栏页面&lt;/h2&gt;&#xA;&lt;p&gt;我们可以自己建立新的菜单页面&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; ，比如我新建&lt;code&gt;life&lt;/code&gt;页面用作展示阅读的书籍、电影和游览的景点。建立页面文件的命令如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hugo new life.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;然后编辑项目根目录下的站点配置文件&lt;code&gt;config.toml&lt;/code&gt;，添加页面说明。其中&lt;code&gt;weight&lt;/code&gt;字段的值决定了该页面在菜单栏的顺序&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;，其值越大，顺序越靠后。按照习惯，&lt;code&gt;About&lt;/code&gt;页面放在最后，所以其&lt;code&gt;weight&lt;/code&gt;字段值设置为5。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 添加Tags和Life菜单，并修改About菜单的weight字段值为5（为了调整菜单栏显示顺序）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Tags&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/tags/&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Life&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/life/&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;新建的life.md文件位于content目录下，编辑文件内容从而决定实际的页面显示内容。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls content -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;total &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; lylw1 &lt;span class=&#34;m&#34;&gt;197609&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;658&lt;/span&gt;  9月 &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt; 11:34 about.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; lylw1 &lt;span class=&#34;m&#34;&gt;197609&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3343&lt;/span&gt;  9月 &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; 11:34 life.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;2-字数统计&#34;&gt;2. 字数统计&lt;/h2&gt;&#xA;&lt;p&gt;中文(&lt;a href=&#34;https://github.com/nodejh/hugo-theme-cactus-plus/issues/18&#34;&gt;详情&lt;/a&gt;)统计的支持可以通过在&lt;code&gt;config.toml&lt;/code&gt;中添加如下语句启用&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;hasCJKLanguage&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;2-开启评论&#34;&gt;2. 开启评论&lt;/h2&gt;&#xA;&lt;p&gt;使用gitalk，首先在GitHub 上创建一个 &lt;a href=&#34;https://github.com/settings/applications/new&#34;&gt;Github Application&lt;/a&gt;，记录 &lt;code&gt;Client ID&lt;/code&gt; 和 &lt;code&gt;Client Secret&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客2-文章写作</title>
      <link>http://localhost:1313/2019/hugo-blog-article-write/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-article-write/</guid>
      <description>&lt;p&gt;本文是 Hugo 使用记录的第二篇，介绍关于文章写作的一些问题，包括分类管理、排版技巧、特殊语法等，所有语法基于 LoveIt 主题。&lt;/p&gt;&#xA;&lt;p&gt;Hugo支持的文章格式为&lt;code&gt;.md&lt;/code&gt;，即用markdown语言编辑的文章。所有的文章都放在&lt;code&gt;content/posts&lt;/code&gt;目录下，支持级联目录，即在&lt;code&gt;posts&lt;/code&gt;目录下按分类建立多个子文件夹放置文章，比如本博客的文章按分类放在四个子文件夹下。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;爱编程爱技术的孩子/  我所热爱的生活啊/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;平日里的白日梦/      研究生的区块链学习之路/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;下面是三条方便清晰管理和生成文章的目录结构建议:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;保持博客文章存放在 &lt;code&gt;content/posts&lt;/code&gt; 目录, 例如: &lt;code&gt;content/posts/我的第一篇文章.md&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;保持简单的静态页面存放在 &lt;code&gt;content&lt;/code&gt; 目录, 例如: &lt;code&gt;content/about.md&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;保持图片之类的媒体资源存放在 &lt;code&gt;static&lt;/code&gt; 目录, 例如: &lt;code&gt;static/images/screenshot.png&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;1-前置参数&#34;&gt;1. 前置参数&lt;/h2&gt;&#xA;&lt;p&gt;Hugo 允许在文章内容前面添加 &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;toml&lt;/code&gt; 或者 &lt;code&gt;json&lt;/code&gt; 格式的前置参数，LoveIt 默认文章模板提供的前置参数有&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;我的第一篇文章&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subtitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ld&#34;&gt;2020-03-04T15:58:26&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;+08&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lastmod&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ld&#34;&gt;2020-03-04T15:58:26&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;+08&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;draft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;authorLink&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;license&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;categories&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hiddenFromHomePage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;featured_image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;featured_image_preview&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;autoCollapsemath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mapbox&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;accessToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lightStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;darkStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;geolocate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fullscreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lightgallery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;linkToMarkdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;share&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;comment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt;: 文章标题.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;subtitle&lt;/strong&gt;: 文章副标题.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt;: 这篇文章创建的日期时间. 它通常是从文章的前置参数中的 &lt;code&gt;date&lt;/code&gt; 字段获取的, 但是也可以在 &lt;a href=&#34;../theme-documentation-basics/#site-configuration&#34;&gt;网站配置&lt;/a&gt; 中设置.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;lastmod&lt;/strong&gt;: 上次修改内容的日期时间.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;draft&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 除非 &lt;code&gt;hugo&lt;/code&gt; 命令使用了 &lt;code&gt;--buildDrafts&lt;/code&gt;/&lt;code&gt;-D&lt;/code&gt; 参数, 这篇文章不会被渲染.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;author&lt;/strong&gt;: 文章作者.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;authorLink&lt;/strong&gt;: 文章作者的链接.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;: 文章内容的描述.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;license&lt;/strong&gt;: 这篇文章特殊的许可.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;tags&lt;/strong&gt;: 文章的标签.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;categories&lt;/strong&gt;: 文章所属的类别.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;hiddenFromHomePage&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 这篇文章将不会显示在主页上, 但是此行为可以在 &lt;a href=&#34;../theme-documentation-basics/#site-configuration&#34;&gt;网站配置&lt;/a&gt; 中设置的.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;featuredImage&lt;/strong&gt;: 文章的特色图片.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;featuredImagePreview&lt;/strong&gt;: 用在主页预览的文章特色图片.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;toc&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 这篇文章会显示右侧目录.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;autoCollapseToc&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 文章目录会自动折叠.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;math&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 将自动渲染文章中的数学公式.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;mapbox&lt;/strong&gt;:  和 &lt;a href=&#34;../theme-documentation-basics/#site-configuration&#34;&gt;网站配置&lt;/a&gt; 中的 &lt;code&gt;params.mapbox&lt;/code&gt; 对象相同.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;lightgallery&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 文章中的图片将可以按照画廊形式呈现.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;linkToMarkdown&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 内容的页脚将显示指向原始 Markdown 文件的链接.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;share&lt;/strong&gt;: 和 &lt;a href=&#34;../theme-documentation-basics/#site-configuration&#34;&gt;网站配置&lt;/a&gt; 中的 &lt;code&gt;params.share&lt;/code&gt; 对象相同.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;comment&lt;/strong&gt;: 如果设为 &lt;code&gt;true&lt;/code&gt;, 将启用评论系统.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-标签与分类&#34;&gt;2. 标签与分类&lt;/h2&gt;&#xA;&lt;p&gt;标签和分类字段是归档文章最常用的两种形式。为了更好的使用，我们需要弄清楚它们的区别。以生活与健身的韦恩图为例&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，饮食与睡眠同时属于这两个分类，当出现这类型文章时，就可以添加标签来管理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客1-基础建站</title>
      <link>http://localhost:1313/2019/hugo-blog-build-personal-blog/</link>
      <pubDate>Fri, 26 Apr 2019 10:45:00 +0800</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-build-personal-blog/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; 是由 Go 语言实现的静态网站生成器，可以快速建立一个静态网站，虽然多数情况下用来搭建个人博客，但也可以用作展示在线书籍、个人简历等。在使用 Hugo 之前，我一直使用 Hexo 搭建个人博客，促使我更换工具的原因主要有两个&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;文章数量较多时，Hexo 生成速度非常慢，同样的文章数量下，Hugo 渲染文章几乎是即时的；&lt;/li&gt;&#xA;&lt;li&gt;Hexo 依赖于 Node.js，使用需要在电脑里安装 node 和 npm。另外，Hexo 允许开发者提供各种 npm 模块来增强其功能，这种做法虽然使 Hexo 扩展性极高，但在博客的维护、备份和恢复等方面都带来了极大的不便。Hugo 使用 Go 开发，不依赖任何其它模块，只需要按照 Hugo 这一个软件即可。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;综上，我选择将博客网站迁移到 Hugo，这个系列的文章用来记录 Hugo 使用种遇到的问题和积累的经验。本文是第一篇，介绍博客网站搭建的过程和一些基础配置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-安装hugo&#34;&gt;1. 安装Hugo&lt;/h2&gt;&#xA;&lt;p&gt;详细的安装说明参见&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;官方文档&lt;/a&gt;，这里简单介绍 win10 和 Ubuntu18.04 的快速安装。&lt;/p&gt;&#xA;&lt;p&gt;win10下可自行从官网下载软件包安装，也可以使用 &lt;a href=&#34;https://chocolatey.org/&#34;&gt;chocolatey&lt;/a&gt; 包管理工具快速安装&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 更新chocolatey到最新&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; choco upgrade chocolatey&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装hugo-extended，因为将要使用的主题使用scss&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; choco install hugo-extended -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查安装&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; choco list --local&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chocolatey 0.10.15&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo-extended 0.58.3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; packages installed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Ubuntu下使用 apt-get 会安装低版本 Hugo，因此使用 snap 安装&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派项目构想-扫地机器人</title>
      <link>http://localhost:1313/2019/raspberry-project-sweeping-robot/</link>
      <pubDate>Tue, 26 Mar 2019 19:40:00 +0800</pubDate>
      <guid>http://localhost:1313/2019/raspberry-project-sweeping-robot/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;本文是创新创业的结课报告，结课报告的题目要求如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过课程学习、课下查阅网络与图文资料，了解和掌握树莓派的功能、扩展性与应用领域（树莓派的典型和非典型应用）&lt;/li&gt;&#xA;&lt;li&gt;深入分析某一个具体行业或工作的工作特点，找到痛点难点，并分析树莓派的适用性（树莓派的什么特点使其适合用于解决这一问题）&lt;/li&gt;&#xA;&lt;li&gt;基于树莓派的功能，讨论如何通过增加相应的软硬件（传感器、软件模块、算法库……等），满足所关注的问题&lt;/li&gt;&#xA;&lt;li&gt;以“开发产品原型并吸引风投”为目标，完成一份创业项目计划书&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;注：不要求完成实际作品，而是强调基于技术的创意、运用工具和所学知识解决实际问题的能力、分析评价项目商业价值的能力&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用树莓派作为服务器建立动态博客</title>
      <link>http://localhost:1313/2019/using-virtual-machine-as-raspberry-pi-server-to-build-dynamic-blog/</link>
      <pubDate>Wed, 13 Mar 2019 14:32:00 +0800</pubDate>
      <guid>http://localhost:1313/2019/using-virtual-machine-as-raspberry-pi-server-to-build-dynamic-blog/</guid>
      <description>&lt;h2 id=&#34;1-前言&#34;&gt;1. 前言&lt;/h2&gt;&#xA;&lt;p&gt;该工作为课程作业，主要目标为利用树莓派作为服务器，完成wordpress的配置，建立动态博客网站。详细的作业要求如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;制作raspbian系统的镜像并成功启动树莓派&lt;/li&gt;&#xA;&lt;li&gt;安装apche2，mariadb，php，phpmyadmin等软件&lt;/li&gt;&#xA;&lt;li&gt;安装wordpress&lt;/li&gt;&#xA;&lt;li&gt;登录wordpress后台，发送任一篇技术文章&lt;/li&gt;&#xA;&lt;li&gt;使用本地计算机完成对博客网站的访问&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-树莓派启动&#34;&gt;2. 树莓派启动&lt;/h2&gt;&#xA;&lt;p&gt;在官网下载&lt;a href=&#34;https://www.raspberrypi.org/downloads/raspbian/&#34;&gt;raspbian&lt;/a&gt;系统，利用「Win32DiskImager」软件将下载好的镜像写入准备好的SD卡。写入完成后，在boot目录下新建 &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; 文件，复制下面的内容到该文件并修改WIFI名和密码，保存该文件，这一步是为了在树莓派启动时令其自动连接到电脑。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;ctrl_interface&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/run/wpa_supplicant &lt;span class=&#34;nv&#34;&gt;GROUP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;netdev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;update_config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;country&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CN&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;network&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;ssid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;WiFi名&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;psk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;密码&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;key_mgmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;WPA-PSK&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;priority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;然后同样在boot目录下新建名为&lt;code&gt;ssh&lt;/code&gt;的文件，要注意小写且没有扩展名，从而开启SSH连接。&lt;/p&gt;&#xA;&lt;p&gt;将配置好的SD卡从电脑卸载并以正确的方式插入树莓派，通电启动，在路由器后台查看新加入的名称中包含&lt;code&gt;raspberry&lt;/code&gt;的设备，记录其ip地址，然后使用Putty通过该地址登录树莓派。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-软件安装&#34;&gt;3. 软件安装&lt;/h2&gt;&#xA;&lt;h3 id=&#34;apache2&#34;&gt;apache2&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install -y apache2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ apachectl -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Server version: Apache/2.4.25 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Debian&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Server built:   2018-11-03T18:46:19&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;浏览器地址栏输入localhost，显示&lt;code&gt;It works!&lt;/code&gt;界面&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-ICMP协议</title>
      <link>http://localhost:1313/2018/internet-control-message-protocol/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/internet-control-message-protocol/</guid>
      <description>&lt;p&gt;网络层除了主要的 IP 协议外，还有 ICMP（Internet Control Message Protocol） 协议，ping 和 traceroute 都会用到它，本文进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-HTTP方法</title>
      <link>http://localhost:1313/2018/http-method/</link>
      <pubDate>Mon, 20 Aug 2018 19:38:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/http-method/</guid>
      <description>&lt;p&gt;理解不同的 HTTP 方法的区别，主要参考 &lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-4.3&#34;&gt;RFC 7231&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-HTTP与HTTPS协议</title>
      <link>http://localhost:1313/2018/http-and-https/</link>
      <pubDate>Thu, 09 Aug 2018 20:43:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/http-and-https/</guid>
      <description>&lt;p&gt;HTTP 和 HTTPS 是最常用的两个协议，本篇对它们进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-TCP和UDP协议</title>
      <link>http://localhost:1313/2018/transmission-control-protocol-and-user-datagram-protocol/</link>
      <pubDate>Tue, 07 Aug 2018 21:16:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/transmission-control-protocol-and-user-datagram-protocol/</guid>
      <description>&lt;p&gt;本篇介绍计算机网络运输层的的 TCP 和 UDP 协议，主要是过一遍，加深理解，以及方便以后查看，毕竟不是每次都带着书。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-数据链路层</title>
      <link>http://localhost:1313/2018/data-link-layer/</link>
      <pubDate>Thu, 19 Jul 2018 20:25:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/data-link-layer/</guid>
      <description>&lt;p&gt;两台主机间的数据传输，通常不是直达的，而是分成一段一段的链路。两个相邻节点间如何传输数据，是数据链路层关心的事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-物理层</title>
      <link>http://localhost:1313/2018/physical-layer/</link>
      <pubDate>Thu, 19 Jul 2018 20:08:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/physical-layer/</guid>
      <description>&lt;p&gt;物理层是 OSI 体系最下面的一层，涉及的多数是关于传输媒体和数据通信的知识，概念居多，本篇不详细解释，仅分辨物理层的主要任务。&lt;/p&gt;&#xA;&lt;p&gt;物理层考虑的问题是如何传输比特流，它要负责向数据链路层屏蔽掉传输媒体和通信手段的差异，从而使上层能专注自己的协议和服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown使用探索</title>
      <link>http://localhost:1313/2018/markdown-usage/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/markdown-usage/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;Markdown用习惯之后，就会不管什么事都想用它来做，因为真的太好用了。本篇文章就是一些尝试，因为往往“不堪大用”，所以给这篇文章起了这么一个名字。当前一些基本想法如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将Markdown变成思维导图&lt;/li&gt;&#xA;&lt;li&gt;将Markdown变成幻灯&lt;/li&gt;&#xA;&lt;li&gt;用Markdown写论文&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;将markdown变成思维导图&#34;&gt;将Markdown变成思维导图&lt;/h2&gt;&#xA;&lt;p&gt;首先尝试将Markdown变成思维导图，这一想法主要是因为当初使用过一段时间&lt;a href=&#34;https://mubu.com/&#34;&gt;幕布&lt;/a&gt;，觉得这种大纲与思维导图的即时切换很有效率，在使用Markdown以后，突然发现无序列表的展现形式和幕布的大纲完全一致，因此打算尝试一下。&lt;/p&gt;&#xA;&lt;p&gt;由于使用思维导图的频率不是很高，因此最好是可以在网页上可以直接导入Markdown文件就能转换为思维导图，首先尝试的思路就是幕布。&lt;/p&gt;&#xA;&lt;h3 id=&#34;幕布&#34;&gt;幕布&lt;/h3&gt;&#xA;&lt;p&gt;幕布有网页版，满足第一个条件，查看幕布中可导入的文件格式，发现只有两种：&lt;code&gt;OPML&lt;/code&gt;和&lt;code&gt;FreeMind&lt;/code&gt;，我使用的Markdown编辑器是Typora，导出格式中有OPML的选项，需要安装pandoc才能以这种方式导出。虽然看起来是无序列表的形式，但导入幕布的markdown内容实际上应该是多级标题的形式，否则导入会出现错误，各级标题下的内容会作为备注出现。以下面的内容为例，测试幕布的导入效果。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;### 家庭教师reborn&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《家庭教师HITMAN REBORN！》是由ARTLAND改编自天野明的同名漫画。作品于2006年10月7日播放，全203话。故事围绕彭格列（意大利黑手党）第十代首领沢田纲吉与其家族成员的成长而展开的一系列故事。 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;### 秦时明月&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《秦时明月》系列是由中国杭州玄机科技信息技术有限公司制作的3D武侠动画系列，于2007年春节期间起在中国全国各地正式首映。目前动画已完结前5部，共175集。 系列灵感来源于温世仁原著小说。时代背景从秦灭六国、建立中国首个帝国开始，到秦国灭亡，时间跨度30年&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;包括回忆&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;，讲述一个体内流淌英雄之血的少年——天明，最终成长为盖世英雄，影响历史进程的热血励志故事&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;### 成龙历险记&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《成龙历险记》是龙之宝工作室制作系列冒险喜剧动画，于2000年9月9在Kids&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; WB华纳动画天地电视台首播。剧情讲述了成龙一家有趣的历险故事，成龙和小玉在世界各地探索各种神秘悬疑的谜团，生活和经历中充满着许多奇幻色彩，其中有关武功和魔法，包含了亲情和友情，以及中国文化的元素，几乎每一趟惊险刺激的旅程身边都有小玉陪伴而行。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;### 美食的俘虏&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;电视动画《美食的俘虏》改编自岛袋光年的同名漫画作品，由东映动画制作，于2011年4月3日起在富士电视台播出，全147话。这是个美食时代。讲述了美食猎人阿虏和料理人小松成长的相关故事。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;### 刀剑神域&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《刀剑神域》是由川原砾著作，abec负责插画，电击文库所属的轻小说。2022年，讲述了玩家桐人在虚拟大规模线上角色扮演游戏《刀剑神域〈SAO〉》中战斗并最终脱离世界的故事。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;建立一个名为&lt;code&gt;动漫收藏.md&lt;/code&gt;的新文档保存上面的测试内容，导出为OPML格式，然后在幕布中导入，幕布导入时以文件名为标题，导入后大纲与思维导图两种模式的显示效果如下&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180701_1HYkxx.png&#34; alt=&#34;mubu大纲模式&#34;&gt;&#xA;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180701_1HYMid.png&#34; alt=&#34;mubu思维导图模式&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这种方法的缺点是幕布的思维导图展示风格只有最普通的形式，高级的功能需要付费，而且即时付费后，幕布中也缺乏好看的思维导图风格。&lt;/p&gt;&#xA;&lt;p&gt;最后，幕布大纲模式的内容也可以导出为OPML文件，但是该功能也需要付费。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown语法</title>
      <link>http://localhost:1313/2018/markdown-syntax/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/markdown-syntax/</guid>
      <description>&lt;p&gt;Markdown由Aaron Swartz和John Gruber共同设计&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Aaron Swartz的博客：&lt;a href=&#34;http://www.aaronsw.com/&#34;&gt;http://www.aaronsw.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;John Gruber的博客： &lt;a href=&#34;https://daringfireball.net/&#34;&gt;https://daringfireball.net/ &lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;作者中的Aaron Swartz是天才程序员，著名社交网站&lt;a href=&#34;http://www.reddit.com/&#34;&gt;Reddit&lt;/a&gt;的联合创始人，14岁参与RSS 1.0规格标准的制订，致力于网络信息开放。在2011年7月19日，因被指控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕，2013年1月自杀身亡，年仅26岁。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://tse3-mm.cn.bing.net/th?id=OIP.3gYYIbdHi-ZmoY65LaErfgHaF7&amp;amp;pid=Api&amp;amp;rs=1&#34; alt=&#34;Aaron Swartz&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Markdown的优点很多，下面稍微列举一下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;易读（看起开舒服）、易写（语法简单）、易更改(纯文本)，处处体现着极简主义的影子。&lt;/li&gt;&#xA;&lt;li&gt;兼容HTML，可以转换为HTML格式发布。&lt;/li&gt;&#xA;&lt;li&gt;跨平台使用。&lt;/li&gt;&#xA;&lt;li&gt;越来越多的网站支持Markdown。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;具体的Markdown语法主要分为如下几部分：标题，段落，引用，代码块，列表，加粗与斜体，分割线与删除线，链接，图片。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-基础语法&#34;&gt;1. 基础语法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;标题&#34;&gt;标题&lt;/h3&gt;&#xA;&lt;p&gt;标题的定义有两种形式&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用&lt;code&gt;=&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;标记一级和二级标题。&lt;/p&gt;&#xA;&lt;p&gt;一级标题使用   &lt;code&gt;========= &lt;/code&gt;&lt;br&gt;&#xA;二级标题使用   &lt;code&gt;---------&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用&lt;code&gt;#&lt;/code&gt;，可表示1-6级标题。&lt;/p&gt;&#xA;&lt;p&gt;# 一级标题&lt;br&gt;&#xA;## 二级标题&lt;br&gt;&#xA;### 三级标题&lt;br&gt;&#xA;#### 四级标题&lt;br&gt;&#xA;##### 五级标题&lt;br&gt;&#xA;###### 六级标题&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：一般习惯从二级标题开始使用，因为一级标题对于多数文章来说，字体都显得有点过大&lt;/p&gt;&#xA;&lt;h3 id=&#34;段落&#34;&gt;段落&lt;/h3&gt;&#xA;&lt;p&gt;段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;引用&#34;&gt;引用&lt;/h3&gt;&#xA;&lt;p&gt;在段落的每行或者只在第一行使用符号&lt;code&gt;&amp;gt;&lt;/code&gt;，如&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;ge&#34;&gt;区块引用   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;效果：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;区块引用&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;代码块&#34;&gt;代码块&lt;/h3&gt;&#xA;&lt;p&gt;在每行起始添加4个空格或者一个制表符，注意要和普通段落间存在空行。最常用围墙式代码块，即使用 3 个连续的反单引号把一段文字包围起来表示代码块，这样可以避免每行代码开头都添加 4 个空格，写法如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;​```&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;let i = 100;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;let j = 200;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;console.log(i + j);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;​```&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;使用围墙式代码块还有有个额外的功能：可以指定编程语言类别，让其中的代码实现语法高亮，方法是在第一行反单引号后面写上语言种类的名称，写法如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git提高-分支管理, 多人协作, 标签管理, gitignore, commit信息</title>
      <link>http://localhost:1313/2018/git-learning-improvement/</link>
      <pubDate>Sun, 22 Apr 2018 10:21:16 +0800</pubDate>
      <guid>http://localhost:1313/2018/git-learning-improvement/</guid>
      <description>&lt;p&gt;上一篇我们学习了Git的基本知识，包括仓库创建，提交、修改、推送、回退等等操作，本篇学习一些高级的功能。转自 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/896043488029600&#34;&gt;廖雪峰的官方网站-git教程&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-分支管理&#34;&gt;1. 分支管理&lt;/h2&gt;&#xA;&lt;p&gt;每个仓库都可能有几条不同的分支，比如master分支，比如用于开发的dev分支。分支操作的实质是对指针的操作&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-分支管理策略&#34;&gt;1.1 分支管理策略&lt;/h3&gt;&#xA;&lt;p&gt;在实际开发中，我们应该按照几个基本原则进行分支管理：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;master&lt;/code&gt;分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面工作；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;工作都在&lt;code&gt;dev&lt;/code&gt;分支上，也就是说，&lt;code&gt;dev&lt;/code&gt;分支是不稳定的，到大版本发布时，再把&lt;code&gt;dev&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;上，在&lt;code&gt;master&lt;/code&gt;分支发布大版本；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;团队中每个人都在&lt;code&gt;dev&lt;/code&gt;分支上干活，但每个人都有自己的分支，时不时地往&lt;code&gt;dev&lt;/code&gt;分支上合并就可以了&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-创建分支&#34;&gt;1.2 创建分支&lt;/h3&gt;&#xA;&lt;p&gt;创建dev分支，然后切换到dev分支：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout -b dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Switched to a new branch &lt;span class=&#34;s1&#34;&gt;&amp;#39;dev&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;code&gt;git checkout&lt;/code&gt;命令加上&lt;code&gt;-b&lt;/code&gt;参数表示创建并切换，相当于以下两条命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git branch dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Switched to branch &lt;span class=&#34;s1&#34;&gt;&amp;#39;dev&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;用&lt;code&gt;git branch&lt;/code&gt;命令查看当前分支，该命令会列出所有分支，当前分支前面会标一个&lt;code&gt;*&lt;/code&gt;号&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git branch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  master&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;然后就可以在&lt;code&gt;dev&lt;/code&gt;分支上进行修改提交，&lt;code&gt;commit&lt;/code&gt;操作完成后对分支的操作也就完成，可以切换回&lt;code&gt;master&lt;/code&gt;分支&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout master&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;切换回&lt;code&gt;master&lt;/code&gt;分支后看不到刚才的修改，因为修改在&lt;code&gt;dev&lt;/code&gt;分支上，必须先进行合并&lt;/p&gt;&#xA;&lt;h3 id=&#34;13-合并分支&#34;&gt;1.3 合并分支&lt;/h3&gt;&#xA;&lt;p&gt;将&lt;code&gt;dev&lt;/code&gt;分支的修改合并到&lt;code&gt;master&lt;/code&gt;分支&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git merge dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;code&gt;git merge&lt;/code&gt;命令用于合并指定分支到当前分支。合并后，就能在&lt;code&gt;master&lt;/code&gt;分支查看到刚刚在&lt;code&gt;dev&lt;/code&gt;分支做的修改&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git入门-基本概念, 基本原理, 安装使用</title>
      <link>http://localhost:1313/2018/git-learning-getting-started/</link>
      <pubDate>Fri, 20 Apr 2018 19:06:20 +0800</pubDate>
      <guid>http://localhost:1313/2018/git-learning-getting-started/</guid>
      <description>&lt;p&gt;版本控制系统在代码开发过程中必不可缺，本系列学习 Git 的使用，版本托管服务则是 Github。以廖雪峰大神 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/896043488029600&#34;&gt;git教程&lt;/a&gt; 为主体，辅以使用过程中遇到的问题和心得。&lt;/p&gt;</description>
    </item>
    <item>
      <title>编程语言选择</title>
      <link>http://localhost:1313/2018/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</link>
      <pubDate>Wed, 18 Apr 2018 20:06:18 +0800</pubDate>
      <guid>http://localhost:1313/2018/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</guid>
      <description>&lt;p&gt;从大学期间教授的C、C++、Java，到自己接触的python、js，以及耳熟能详的PHP、C#、Ruby，甚至其它众多听过的没听过的语言。在此写这篇文章对这些主流的编程语言做一个对比，不是说哪个好哪个不好，更多的是总结下每一种都更多的用在哪些方面，以此来为未来的道路做一个参考。&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h3 id=&#34;tiobe编程语言排行榜&#34;&gt;TIOBE编程语言排行榜&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.tiobe.com/tiobe-index//&#34;&gt;TIOBT编程语言排行榜&lt;/a&gt;是编程语言流行趋势的一个指标,该排行每月更新一次。编程语言在排行榜上的位置是根据全世界范围内相应的有经验的工程师、课程和第三方供应商的数量而定。而谷歌、必应、维基、亚马逊、YouTube和百度等搜索引擎的搜索频次决定该语言的占比（Ratings）。另外，网站还特别强调，关于哪种语言是最好的，哪种语言的已完成代码最多和他们无关。&lt;br&gt;&#xA;这个排行榜用来考察自己的编程技能是否还在时代潮流，也可以在开始一段新的学习或开发一个新系统时作为一个语言选择依据。2018年4月的排行榜如下：&#xA;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180418_1HN7Ie.png&#34; alt=&#34;TIOBE Index_2018 04&#34;&gt;&#xA;我们就从这个排行榜开始讲起，分析各流行语言如表1.&lt;/p&gt;&#xA;&lt;p&gt;表1.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;语言&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;用来做什么&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;优点&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;缺点&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;编写了&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Java&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;安卓应用开发、视频游戏开发、桌面GUI、Hadoop开发&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;使用人数最多，开发者需求量最大&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;内存占用很大；启动速度很慢&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Gmail,Minecraft&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;开发固件或移动应用；操作系统开发；编写系统软件&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;可移动性很高，可在不做改动或改动很小的情况下开发运行在不同平台的软件；C很小，可以嵌入几乎所有现代微型处理器，从冰箱到闹钟；因为几乎所有编程语言都由C实现，学会C就能使你方便的学会一切编程语言&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;没有运行时检查机制；不支持面向对象编程&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;kindle，Linux，OpenGL&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C++&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;操作系统开发，搜索引擎开发等&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;学起来很困难；尺寸巨大，大部分功能相互影响是极其复杂的方式&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Goole，Outlook&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Python&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;网页开发，视频游戏开发，桌面GUI,“胶水语言”-把用其它语言制作的各种模块（尤其是C/C++）连结在一起，黑客语言&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;最容易学习的语言；大量的库和函数；用于物联网，如树莓派平台&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;作为解释型语言，比编译型语言慢很多；在移动计算方面很强，很少有智能机应用由Python开发；是动态型，需要更多测试以及错误仅在运行时提示&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Instagram，YouTube&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C#&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Windows应用开发，商业应用开发&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;完整的.NET库，提供接入大量功能和支持；基于C，所以学到的架构可以转移到其它语言如Java，PHP以及C++&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;因为集合了.NET，没有任何跨平台能力&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;stackoverflow，Evernote&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;PHP&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;PHP是Web开发语言，广泛用在网站开发，API接口开发，服务器端开发，广告系统给开发，内部OA开发，移动后台开发，游戏开发&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;容易上手；社群庞大，社区活跃，开发者遇到的多数问题都有前人的解决方案；对数据库友好&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;代码不美；速度比其它语言慢；错误处理不够周全，因为要支持大量旧版的功能&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;facebook，wordpress&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Javascript&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;目前所有主流浏览器上唯一支持的脚本语言，可以做网站前端，后台，Web交互，游戏脚本等&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;因为任何代码功能都能立刻运行，速度很快；学习和实施都相当简单&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;有时候会被恶意利用，不怎么安全；会被不同浏览器编译出不同结果&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ruby&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;桌面GUI，网页应用，Web开发&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;和Python一样好学；大量的扩展和库；社区庞大&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;速度慢；很难找到好的文档&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Swift&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;与Object-C同用于IOS开发，这也是我为什么不单列Object-C的原因&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;我的选择&#34;&gt;我的选择&lt;/h3&gt;&#xA;&lt;h4 id=&#34;已学过按熟悉程度排名&#34;&gt;已学过（按熟悉程度排名）&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;C&lt;/li&gt;&#xA;&lt;li&gt;C++&lt;/li&gt;&#xA;&lt;li&gt;Java&lt;/li&gt;&#xA;&lt;li&gt;Python&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;未来重心按重要性排名&#34;&gt;未来重心（按重要性排名）&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;C&lt;/li&gt;&#xA;&lt;li&gt;Python&lt;/li&gt;&#xA;&lt;li&gt;HTML+CSS+Javascript&lt;/li&gt;&#xA;&lt;li&gt;Go&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/br&gt;&#xA;### 参考链接&#xA;[2016主流编程语言的详细对比](https://blog.csdn.net/z4909801/article/details/56511220)  &#xA;[几种主流编程语言的优点和缺点比较](http://baijiahao.baidu.com/s?id=1574780298772788&amp;wfr=spider&amp;for=pc)  &#xA;[各主流编程语言各自擅长什么场景，为什么？](https://www.zhihu.com/question/20806939)</description>
    </item>
    <item>
      <title>Hexo 搭建个人博客</title>
      <link>http://localhost:1313/2018/using-hexo-build-persoanl-blog/</link>
      <pubDate>Tue, 17 Apr 2018 20:30:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/using-hexo-build-persoanl-blog/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hexo.io/zh-cn/index.html&#34;&gt;Hexo&lt;/a&gt;是一款快速、简洁且高效的静态博客框架，使用Markdown渲染引擎解析文章，拥有着丰富的&lt;a href=&#34;https://hexo.io/themes/&#34;&gt;主题社区&lt;/a&gt;，可以帮助我们快速建立自己的博客，正在成为越来越多的技术人员制作自己博客的首选。&lt;/p&gt;&#xA;&lt;p&gt;我选用了Hexo+github的博客部署模式，博客地址为：&lt;a href=&#34;https://songdehua.github.io&#34;&gt;https://songdehua.github.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h2 id=&#34;开始使用&#34;&gt;开始使用&lt;/h2&gt;&#xA;&lt;p&gt;Hexo使用Node.js编写，安装之前需要先安装两个工具&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Node.js，版本不低于8.6，建议10.0以上&lt;/li&gt;&#xA;&lt;li&gt;Git&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我在win10环境下管理和部署博客，因此使用windows下的包管理工具&lt;a href=&#34;https://chocolatey.org/&#34;&gt;chocolate&lt;/a&gt;安装git和&lt;a href=&#34;https://github.com/jasongin/nvs/&#34;&gt;nvs&lt;/a&gt;，然后使用nvs安装和管理Node.js，默认会安装最新的软件版本，当然也可以自己指定版本号。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;choco&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;git&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;choco&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nvs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set-executionpolicy&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remotesigned&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nvs&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lts&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nvs&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lts&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;以上程序安装完成后，使用npm安装Hexo&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-g&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hexo-cli&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;此时即可执行以下命令建立博客&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hexo init hexo_blog  &lt;span class=&#34;c1&#34;&gt;# hexo_blog为博客项目文件夹&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; hexo_blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;当前hexo_blog文件夹的目录结构如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── node_modules       //依赖安装目录&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── scaffolds          //模板文件夹，新建的文章将会从此目录下的文件中继承格式&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   ├── draft.md         //草稿模板&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   ├── page.md          //页面模板&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   └── post.md          //文章模板&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;             //资源文件夹，用于放置图片、数据、文章等资源&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   └── _posts           //文章目录&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── themes             //主题文件夹&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   └── landscape        //默认主题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── .gitignore         //指定不纳入git版本控制的文件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── _config.yml        //站点配置文件          &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── package.json       //Hexo软件版本信息和依赖的模块列表&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── package-lock.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;_config.yml&lt;/strong&gt;是网站的&lt;a href=&#34;https://hexo.io/zh-cn/docs/configuration&#34;&gt;配置&lt;/a&gt; 信息，以&lt;a href=&#34;http://www.ruanyifeng.com/blog/2016/07/yaml.html?f=tt&#34;&gt;YAML&lt;/a&gt;语言编写，在此可以配置大部分的参数。&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植1-移植相关知识</title>
      <link>http://localhost:1313/2018/migration-related-knowledge/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/migration-related-knowledge/</guid>
      <description>&lt;h2 id=&#34;1-linux-操作系统组成&#34;&gt;1. Linux 操作系统组成&lt;/h2&gt;&#xA;&lt;p&gt;Linux 操作系统由 Linux 内核、shell 命令解释器和应用程序3部分构成&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-shell&#34;&gt;1.1 shell&lt;/h3&gt;&#xA;&lt;p&gt;Linux的内核不能直接接受来自终端的用户命令，shell 为用户提供使用 Linux 操作系统的接口。在Linux 中几乎所有的操作都可以通过命令行来完成，使用 shell 编写的程序称为 shell 脚本。shell 可以作为命令语言、命令解释程序及程序设计语言，用户成功登录Linux时系统自动启用shell，当在终端输入正确的shell命令时，shell通过相应的命令和程序，通过内核执行用户需要的操作。更详细的知识可参考 &lt;a href=&#34;https://www.ibm.com/developerworks/cn/linux/l-linux-shells/index.html&#34;&gt;评估Linux中的shell&lt;/a&gt; 一文。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_41342748db2b.gif&#34; alt=&#34;1977年以来的Linux shell&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;几种 shell 的比较表如下&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Shell&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Bourne Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;编程方式占优势，但在与用户交互方面比较差&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Bourne - Again Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;专为 Linux 而写，在 Bourne Shell 基础上增加了功能，是 Linux 默认内核&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;语法类似于 C 语言，有较高的编程能力&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Tcsh&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C shell 的扩展&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Korn Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;集合了 C shell 和 Bourne shell 的优点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;12-linux-内核&#34;&gt;1.2 Linux 内核&lt;/h3&gt;&#xA;&lt;p&gt;Linux 内核是操作系统的核心部分。它由进程管理、文件管理、存储管理、设备管理和网络管理五大部分组成。采用模块化的设计，它的功能也是通过增加和减少模块来实现的。这种设计保证系统封闭和开放与效率的平衡，避免在修剪功能时改变系统结构。&lt;/p&gt;&#xA;&lt;p&gt;Linux 内核最注重的问题是实用和效率，其特点如下&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;整个 Linux 内核由很多过程组成，每个过程可以独立编译，然后用连接程序将其连接在一起成为一个单独的目标程序。&lt;/li&gt;&#xA;&lt;li&gt;Linux 的文件系统最大特点是实现了一种抽象文件模型——VFS。使用虚拟文件系统屏蔽了各种不同文件系统的内在差别，使得用户可以使用同样的方式访问各种不同格式的文件系统，可以毫无区别的在不同格式、不同介质的文件系统之间使用 VFS 提供的统一接口交换数据。&lt;/li&gt;&#xA;&lt;li&gt;为了保证方便的支持新设备、新功能，又不会无限扩大内核规模，Linux 系统对设备驱动或新文件系统等采用了模块化方式，用户在需要时可以动态加载，使用完毕可以动态卸载。同时对内核，用户也可以定制，选择适合自己的功能，将不需要的部分剔除出内核。这两种技术都保证了内核的紧凑性和扩展性。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-u-boot&#34;&gt;2. u-boot&lt;/h2&gt;&#xA;&lt;p&gt;u-boot是在 PPCBOOT 和 ARMBOOT 基础上发展而来的，是一个通用引导程序，支持很多架构，这一点上篇BootLoader已经很明白。u-boot的移植过程是一个对嵌入式系统包括软硬件及操作系统加深理解的一个过程，我们通过这个过程来一点点学习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植2-Debian系统的移植</title>
      <link>http://localhost:1313/2018/migration-of-debian-system/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/migration-of-debian-system/</guid>
      <description>&lt;p&gt;Debian 系统的移植总分四部分：u-boot的编译与烧录，Linux内核的编译与烧录，Debian 基本根文件系统的制作、配置与烧录，开发板设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-u-boot的编译&#34;&gt;1. u-boot的编译&lt;/h2&gt;&#xA;&lt;p&gt;对应于EMSYM的blurr开发板的u-boot项目使用GitHub进行开源维护，&lt;a href=&#34;https://github.com/EMSYM/U-boot&#34;&gt;下载地址&lt;/a&gt;，我的编译环境为Ubuntu16.04 LTS系统&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-下载源码&#34;&gt;1.1 下载源码&lt;/h3&gt;&#xA;&lt;p&gt;方法一：在链接打开后的项目界面依次选择clone or download—&amp;gt;Download ZIP，将源码下载到PC中相应的文件夹（记得解压&amp;hellip;..）&lt;/p&gt;&#xA;&lt;p&gt;方法二：采用git命令（须事先安装git）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone https://github.com/EMSYM/U-boot.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;注：该链接在选中clone or download后可看到&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-分支切换&#34;&gt;1.2 分支切换&lt;/h3&gt;&#xA;&lt;p&gt;在下载好的u-boot项目目录下打开虚拟终端，创建并切换分支&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout -b v4.1 origin/blurr-4.1.15&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_d1bb18bcb403.png&#34; alt=&#34;创建并切换分支&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;13-安装依赖&#34;&gt;1.3 安装依赖&lt;/h3&gt;&#xA;&lt;p&gt;gcc-arm-linux-gnueabi是我们用到的交叉编译器&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt install gcc-arm-linux-gnueabi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install build-essential gcc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;注：Ubuntu缺省情况下，并没有提供C/C++的编译环境，因此还需要手动安装。如果单独安装gcc以及g++比较麻烦，幸运的是，为了能够编译Ubuntu的内核，Ubuntu提供了一个build-essential软件包。因为依赖关系的问题，安装了该软件包，编译c/c++所需要的软件包也都会被安装。因此如果想在Ubuntu中编译c/c++程序，只需要安装该软件包就可以了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_8135c2d310f2.png&#34; alt=&#34;build-essential的依赖关系&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;14-开始编译&#34;&gt;1.4 开始编译&lt;/h3&gt;&#xA;&lt;p&gt;指定核心类型&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nv&#34;&gt;ARCH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;arm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;生成配置文件（用到Makefile，参阅&lt;a href=&#34;https://hacker-yhj.github.io/resources/gun_make.pdf&#34;&gt;GNU make中文手册&lt;/a&gt;）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make mx6dl_blurr_defconfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_c22b1be42612.png&#34; alt=&#34;生成配置文件&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;指定交叉编译前缀，编译u-boot&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make &lt;span class=&#34;nv&#34;&gt;CROSS_COMPILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;arm-linux-gnueabi- &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_967c5a8d8bba.png&#34; alt=&#34;编译通过&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植3-Android系统移植</title>
      <link>http://localhost:1313/2018/android-system-migration/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/android-system-migration/</guid>
      <description>&lt;p&gt;采用Android6.0（棉花糖），编译环境为Ubuntu14.04和opoenjdk-7-jdk&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-获取源码&#34;&gt;1. 获取源码&lt;/h2&gt;&#xA;&lt;p&gt;首先参阅Android网站&lt;a href=&#34;http://source.android.com/source/initializing.html&#34;&gt;source.android.com/source/initializing.html&lt;/a&gt;安装依赖&lt;/p&gt;&#xA;&lt;p&gt;除Android网站要求的软件包，还需要安装如下软件包：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install uuid uuid-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install zlib1g-dev liblz-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install liblzo2-2 liblzo2-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install lzop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install git-core curl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install u-boot-tools&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install mtd-utils&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install android-tools-fsutils&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install openjdk-7-jdK&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取安卓源码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ mkdir myandroid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ mkdir bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myandroid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl https://storage.googleapis.com/git-repo-downloads/repo &amp;gt; ~/bin/repo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ chmod a+x ~/bin/repo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ~/bin/repo init -u https://android.googlesource.com/platform/manifest -b android-6.0.1_r22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ~/bin/repo sync &lt;span class=&#34;c1&#34;&gt;# This command loads most needed repos. Therefore, it can take several hours to load.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取内核源码&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植4-内核配置</title>
      <link>http://localhost:1313/2018/linux-lernel-configuration/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/linux-lernel-configuration/</guid>
      <description>&lt;p&gt;内核配置的目的主要是裁剪掉不必要的文件和目录，获得一个最适用的操作系统。可通过执行下面的命令进入配置窗口&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make menuconfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;执行完毕后显示一个基于文本的图形化终端配置菜单，这是是使用最广的配置方法，如果一个.config文件已经存在，它将使用该文件设置那些默认值&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-启动内核配置窗口&#34;&gt;1. 启动内核配置窗口&lt;/h2&gt;&#xA;&lt;p&gt;进入需要被配置的内核的根目录，使用 &lt;code&gt;make menuconfig&lt;/code&gt; 命令启动内核配置窗口，如下图&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_image-20200427162438680.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最上面的标题栏里，.config是核心功能列表档，我们现在就是在对这个文件做处理；x86是我的电脑CPU架构，4.1.15是我现在要配置的这个内核的版本&lt;/p&gt;&#xA;&lt;p&gt;整个界面的用法大概是这样：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;左右方向键：可以移动最底下的 项目；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;上下方向键：可以移动上面框里的蓝色光柱选择选项，该行有箭头 (&amp;mdash;&amp;gt;) 则表示该行内部还有其他细项需要来配置的意思；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选定项目：以上下方向键选择好想要配置的项目之后，以左右方向键选择， 按下回车就可以进入该项目去作更进一步的细节配置；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可挑选功能：在细节项目的配置当中，如果前面有 [ ] 或 &amp;lt; &amp;gt; 符号时，该项目才可以选择， 而选择使用空格键；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;若为 [&lt;em&gt;] &amp;lt;&lt;/em&gt;&amp;gt; 则表示编译进核心；若为则表示编译成模块。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;配置时可以遵循这样的原则：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一定用的功能，编译进核心；&lt;/li&gt;&#xA;&lt;li&gt;未来可能用到的功能，尽量编译为模块&lt;/li&gt;&#xA;&lt;li&gt;不知道用来做什么的功能，看help也看不懂，保留默认值，或者编译为模块&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-具体配置&#34;&gt;2. 具体配置&lt;/h2&gt;&#xA;&lt;p&gt;关于内核配置主选项的记录丢失，只剩关于 General setup 部分的记录。与 Linux 最相关的程序互动、核心版本说明、是否使用发展中程序码等资讯都在该部分配置的。 这里的项目主要都是针对核心与程序之间的相关性来设计的，基本上，保留默认值即可！ 不要随便取消底下的任何一个项目，因为可能会造成某些程序无法被同时运行的困境！ 不过底下有非常多新的功能，如果有不清楚的地方，可以按&lt;code&gt;&amp;lt;help&amp;gt;&lt;/code&gt;进入查阅，里面会有一些建议！ 你可以依据 Help 的建议来选择新功能的启动与否！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_03d038acd2f0.png&#34; alt=&#34;General setup 选项&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;cross-compiler tool prefix&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;交叉编译工具前缀，功能是make时自动使用交叉编译器进行编译。比如在这儿填上&lt;em&gt;arm-linux&lt;/em&gt;，相当与编译时使用*make CROSS_COMPILE=arm-linux-*命令。如果你不想自动使用交叉编译工具，此处应该留空&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;compile also drivers which will not load&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;编译驱动程序将不加载，一些驱动可能在其它的编译平台被编译，而这个编译平台跟它的期望运行平台不一样（好像就是交叉编译。。），所以即使这些驱动不能在编译平台加载运行，一些开发者仍然可能想要构建这个驱动来进行编译测试（就是看看它到底能不能编译通过，没打算让它运行么）所以，根据你的需求来选择好了，这个一般是不选。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Local version - append to kernel release&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
