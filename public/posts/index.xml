<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>All Posts - songdehua blog</title>
    <link>http://localhost:1313/posts/</link>
    <description>书藏的个人博客，记录学习，记录生活</description>
    <generator>Hugo 0.135.0 &amp; FixIt v0.3.13</generator>
    <language>en</language>
    <lastBuildDate>Tue, 26 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>最近一些杂记</title>
      <link>http://localhost:1313/2024/poetry/</link>
      <pubDate>Tue, 26 Nov 2024 00:39:00 +0800</pubDate>
      <guid>http://localhost:1313/2024/poetry/</guid>
      <category domain="http://localhost:1313/categories/%E8%AF%97%E4%B8%8E%E8%BF%9C%E6%96%B9/">诗与远方</category>
      <description>最近一些杂记</description>
    </item>
    <item>
      <title>hugo搭建个人博客6-CDN加速</title>
      <link>http://localhost:1313/2023/using-hugo-to-build-personal-blog-6-cdn/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/using-hugo-to-build-personal-blog-6-cdn/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;个人博客用的是 Github Pages 服务，国内访问实在是太慢了，于是想用 CDN 做加速。&lt;/p&gt;&#xA;&lt;h2 id=&#34;cdn介绍&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;CDN介绍&lt;/span&gt;&#xA;  &lt;a href=&#34;#cdn%e4%bb%8b%e7%bb%8d&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;CDN 全称为 Content Delivery Network，中文名为内容分发网络，以下介绍来自&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>人际关系处理</title>
      <link>http://localhost:1313/2023/interpersonal-relationship-handling/</link>
      <pubDate>Sat, 27 May 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2023/interpersonal-relationship-handling/</guid>
      <category domain="http://localhost:1313/categories/%E5%B9%B3%E6%97%A5%E9%87%8C%E7%9A%84%E7%99%BD%E6%97%A5%E6%A2%A6/">平日里的白日梦</category>
      <description>&lt;p&gt;思考人际关系的处理&lt;/p&gt;</description>
    </item>
    <item>
      <title>U盘只读状态清除</title>
      <link>http://localhost:1313/2021/clear-usb-falsh-disk-read-only-status/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2021/clear-usb-falsh-disk-read-only-status/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;U盘变只读是经常出现的情况，以前都是使用写保护开关，一旦没有开关就毫无办法，今天又遇到这种情况，解决问题后这里总结一下解决办法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang学习资料</title>
      <link>http://localhost:1313/2021/golang-learning-materials/</link>
      <pubDate>Mon, 05 Jul 2021 19:13:00 +0800</pubDate>
      <guid>http://localhost:1313/2021/golang-learning-materials/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;学习 Go 时收藏的一些网址，做一下收录，作为结尾。&lt;/p&gt;</description>
    </item>
    <item>
      <title>图片知识一文知</title>
      <link>http://localhost:1313/2021/picture-knowledge/</link>
      <pubDate>Tue, 23 Mar 2021 15:32:00 +0800</pubDate>
      <guid>http://localhost:1313/2021/picture-knowledge/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;由于博客的原因，每周都需要进行图片处理，所以这里对相关知识做一个总结，包括图片格式、图片压缩的原理、水印、工具、最合适的大小等等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo开发主题1-内容管理</title>
      <link>http://localhost:1313/2020/hugo-develop-themes-1-content-management/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/hugo-develop-themes-1-content-management/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Hugo 用到最后，终究还是免不了走上自己修改甚至开发主题的道路，本篇首先介绍 Hugo 的内容如何管理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo开发主题2-模板</title>
      <link>http://localhost:1313/2020/hugo-develop-themes-2-templates/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/hugo-develop-themes-2-templates/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Hugo 用到最后，终究还是免不了走上自己修改甚至开发主题的道路，本篇介绍 Hugo 的核心之一：模板。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机基础-实数在计算机中的存储</title>
      <link>http://localhost:1313/2020/storage-of-reals-in-computers/</link>
      <pubDate>Sun, 18 Oct 2020 10:16:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/storage-of-reals-in-computers/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;最近在智能合约中实现信誉算法，但是 Solidity 不支持浮点数赋值和运算，好在有人写了一个库实现了 IEEE 754 浮点数标准，只不过输入输出都是二进制，所以回过头来仔细理解一下实数在计算机中的存储。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go实现2048小游戏</title>
      <link>http://localhost:1313/2020/a-cli-implement-of-2048-game-using-go/</link>
      <pubDate>Thu, 08 Oct 2020 19:35:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/a-cli-implement-of-2048-game-using-go/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Go 实现一个命令行界面的 2048 游戏，仅涉及 Git 和 Go，用来熟悉基本语言特性。原型项目来自 &lt;a href=&#34;https://github.com/chhabraamit/2048&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://github.com/chhabraamit/2048&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化7-终端和winget</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-7-windows-terminal-and-winget/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-7-windows-terminal-and-winget/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Windows terminal 的安装配置和 winget 的基本使用，主要原因是 Powershell 不好看。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-windows-terminal&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. Windows terminal&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-windows-terminal&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;界面友好的终端应用，凡是命令行程序都可以用它启动，可以将 win10 下的 cmd、Powershell 和 git bash 都集中在一起，当然，最重要的是好看。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang查漏补缺</title>
      <link>http://localhost:1313/2020/golang-supplement/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-supplement/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;查漏补缺的一些问题&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-时间复杂度和空间复杂度</title>
      <link>http://localhost:1313/2020/algorithm-time-and-space-complexity/</link>
      <pubDate>Fri, 18 Sep 2020 20:37:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/algorithm-time-and-space-complexity/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;时间和空间复杂度的分析是编制程序的一个基本能力，不过平时基本都是脑子里简单的估计，本篇文章打算回忆一下大 O 表示法和具体的时间复杂度的推导过程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows、Linux、Unix和 macOS</title>
      <link>http://localhost:1313/2020/windows-linux-unix-and-macos/</link>
      <pubDate>Wed, 02 Sep 2020 21:15:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/windows-linux-unix-and-macos/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;目前主流的操作系统就是 Windows、Linux 和 macOS，有时候我们也常听到 Unix。今天查一下资料看一看它们的区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>正则表达式与通配符</title>
      <link>http://localhost:1313/2020/regular-expression-basic-syntax/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/regular-expression-basic-syntax/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;正则表达式在字符串处理时使用的非常普遍，这次来学习正则的相关知识，分别结束通配符、正则及它们的区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-字符串类问题</title>
      <link>http://localhost:1313/2020/algorithm-stings/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-stings/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;做 Leetcode 每日一题的时候遇到了子串判断类的问题，想起一直没仔细的去看过 KMP 等字符串常用的算法，所以这里学习一下。&lt;/p&gt;&#xA;&lt;!---more--&gt;&#xA;&lt;h2 id=&#34;1-重复的子字符串&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 重复的子字符串&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e9%87%8d%e5%a4%8d%e7%9a%84%e5%ad%90%e5%ad%97%e7%ac%a6%e4%b8%b2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;这就是今天遇到的题目，题目描述为&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bash脚本语法</title>
      <link>http://localhost:1313/2020/bash-script-grammer/</link>
      <pubDate>Tue, 18 Aug 2020 11:37:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/bash-script-grammer/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;很多时候都要求能使用 Shell 脚本进行编程，本文是根据阮一峰大神的 &lt;a href=&#34;https://wangdoc.com/bash/intro.html&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;系列教程&lt;/a&gt; 总结的基本知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统6-文件管理</title>
      <link>http://localhost:1313/2020/operate-system-6-file-management/</link>
      <pubDate>Tue, 18 Aug 2020 08:18:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-6-file-management/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍文件管理相关的内容。包括硬盘结构、文件和目录的概念，以及一个文件系统涉及的其它知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统5-设备管理</title>
      <link>http://localhost:1313/2020/operate-system-5-device-management/</link>
      <pubDate>Mon, 17 Aug 2020 19:25:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-5-device-management/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍设备管理的相关内容。最近发现本科用的教材内容非常陈旧，而且不是那么浅显易懂，于是找了一本国外的教材《操作系统导论》，主要根据这个来学习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习9-调用栈</title>
      <link>http://localhost:1313/2020/golang-deep-learning-9-call-stack/</link>
      <pubDate>Sat, 15 Aug 2020 09:47:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-9-call-stack/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍如何分析 Go 的调用栈。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习8-堆栈与逃逸分析</title>
      <link>http://localhost:1313/2020/golang-deep-learning-8-stack-heap-and-escape-analysis/</link>
      <pubDate>Sat, 15 Aug 2020 08:47:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-8-stack-heap-and-escape-analysis/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍 Go 的堆栈和逃逸分析。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统4-存储管理</title>
      <link>http://localhost:1313/2020/operate-system-4-memory-management/</link>
      <pubDate>Thu, 13 Aug 2020 11:04:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-4-memory-management/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍操作系统另一个重要功能：存储管理。包括存储管理的基本功能，以及分区、页式、段式与段页式三种存储管理方法的具体细节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统3-进程管理</title>
      <link>http://localhost:1313/2020/operate-system-3-process-management/</link>
      <pubDate>Mon, 10 Aug 2020 08:06:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-3-process-management/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍操作系统最重要的一部分功能之一：进程管理，从进程的概念到进程的通信，再到死锁问题，最后结束进程的调度。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统2-用户接口</title>
      <link>http://localhost:1313/2020/operate-system-2-user-interface/</link>
      <pubDate>Sun, 09 Aug 2020 17:16:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-2-user-interface/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍操作系统的一个重要功能：提供用户接口。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作系统1-概述</title>
      <link>http://localhost:1313/2020/operate-system-1-overview/</link>
      <pubDate>Sun, 09 Aug 2020 10:27:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/operate-system-1-overview/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍操作系统的概念、历史、分类、功能及理解这些功能的必备基础知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化8-自动化</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-7-automation/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-7-automation/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;win10 一些重复操作的自动化，主要利用 Powershell 和windows任务计划程序，运行环境为 Windows 10 和 PowerShell 7.1，低版本 PowerShell 可能有中文路径无法识别问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-背包问题</title>
      <link>http://localhost:1313/2020/algorithm-knapsack-problem/</link>
      <pubDate>Thu, 06 Aug 2020 10:22:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/algorithm-knapsack-problem/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;奇安信的笔试遇到了完全背包问题，结果写的时候按 0-1 背包写的贪心，最后没 AC，因此本篇对所有的背包问题做一次整理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习7-调度器与垃圾回收</title>
      <link>http://localhost:1313/2020/golang-deep-learning-7-scheduler-and-garbage-collection/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-7-scheduler-and-garbage-collection/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;调度器和垃圾回收都属于 runtime 的一部分，本文我们介绍 Go 中 runtime 的含义，然后再来分析 Go 的调度器和垃圾回收策略。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习6-使用pprof进行性能分析</title>
      <link>http://localhost:1313/2020/golang-deep-learning-6-performance-analysis-pprof/</link>
      <pubDate>Mon, 27 Jul 2020 18:46:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-6-performance-analysis-pprof/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;pprof 用来做 Go 程序的性能监控，让我们知道在什么地方耗费了多少 CPU、memory。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习5-使用dlv调试程序</title>
      <link>http://localhost:1313/2020/golang-deep-learning-5-debug-with-dlv/</link>
      <pubDate>Sun, 26 Jul 2020 09:43:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-5-debug-with-dlv/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;在C/C++中，使用 GDB 调试程序，但在Go中，看过网上的一些文章后，发现 dlv 是个更好的选择，本文进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习4-map</title>
      <link>http://localhost:1313/2020/golang-deep-learning-4-map/</link>
      <pubDate>Sat, 25 Jul 2020 09:45:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-4-map/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文关心 map 的底层实现、map 的扩容机制和 map 遍历的随机性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习3-切片</title>
      <link>http://localhost:1313/2020/golang-deep-learning-3-slice/</link>
      <pubDate>Fri, 24 Jul 2020 16:13:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-3-slice/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇理解切片的底层实现和扩容方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习2-string</title>
      <link>http://localhost:1313/2020/golang-deep-learning-2-string/</link>
      <pubDate>Fri, 24 Jul 2020 11:19:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-2-string/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Go 中字符串虽然作为基本数据类型，但本质依然是字符数组，本篇文章理解 Go 底层 string 类型是如何实现的，以及探讨它与 []byte 之间的关系。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang深入学习1-uintptr 和 Unsafe.Pointer</title>
      <link>http://localhost:1313/2020/golang-deep-learning-1-uintptr-and-unsafe.pointer/</link>
      <pubDate>Thu, 23 Jul 2020 12:15:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-deep-learning-1-uintptr-and-unsafe.pointer/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍 Go 中的指针、uintptr 和 unsafe.Pointer 三个概念。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-分支限界</title>
      <link>http://localhost:1313/2020/algorithm-branch-and-bound/</link>
      <pubDate>Thu, 23 Jul 2020 10:07:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/algorithm-branch-and-bound/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;分支限界和回溯都是有效搜索解空间树的方法，不同的是，分支限界使用广度优先或最小耗费/最大效益优先的方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang日志系统</title>
      <link>http://localhost:1313/2020/golang-log-system/</link>
      <pubDate>Sun, 07 Jun 2020 09:48:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-log-system/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;日志是一个系统必不可少的部分，本篇介绍Golang中的日志系统。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang设置与使用cookie</title>
      <link>http://localhost:1313/2020/golang-set-and-use-cookie/</link>
      <pubDate>Mon, 01 Jun 2020 20:11:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-set-and-use-cookie/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;关于 Cookie 的使用是 Web 编程中的重要一部分，本篇介绍 Cookie 的基本知识和 Golang 中使用的方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang模板</title>
      <link>http://localhost:1313/2020/golang-template/</link>
      <pubDate>Fri, 29 May 2020 17:08:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-template/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;模板就是在写动态页面时不变的部分，服务端程序渲染可变部分生成动态网页，Go 语言提供了 html/template 包来支持模板渲染。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang使用gorilla、mux包</title>
      <link>http://localhost:1313/2020/golang-use-gorilla/mux-package/</link>
      <pubDate>Fri, 29 May 2020 13:38:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-use-gorilla/mux-package/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍 &lt;a href=&#34;https://github.com/gorilla/mux&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;gorilla/mux&lt;/a&gt; 包的使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang启动HTTP服务器</title>
      <link>http://localhost:1313/2020/golang-start-http-server/</link>
      <pubDate>Fri, 29 May 2020 09:32:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/golang-start-http-server/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍 Golang 如何实现 HTTP 服务端及客户端。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang密码学算法</title>
      <link>http://localhost:1313/2020/golang-cryptographic-algorithm/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-cryptographic-algorithm/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;在 Go 中，加密是很重要的一部分，本文对此进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang数据库编程</title>
      <link>http://localhost:1313/2020/golang-interact-with-mysql/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/golang-interact-with-mysql/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Go 官方提供了database 包，database 包下有 sql/driver。该包用来定义操作数据库的接口，这保证了无论使用哪种数据库，操作方式都是相同的。但 Go 官方并没有提供连接数据库的 driver，如果要操作数据库，还需要第三方的 driver 包。这里介绍 &lt;a href=&#34;https://github.com/go-sql-driver/mysql&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;go-mysql-driver&lt;/a&gt; 的使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-安装&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 安装&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%ae%89%e8%a3%85&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;在执行了 &lt;code&gt;go mod&lt;/code&gt; 的项目目录下执行如下安装命令&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-回溯</title>
      <link>http://localhost:1313/2020/algorithm-backtracking/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-backtracking/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;在真实的世界中，很多问题是不存在快速解法的，只能穷尽搜索，因此一个高效的搜索技术非常重要。回溯（Backtracking）和分支限界（Branch&amp;amp;Bound）就是两种减小搜索空间大小的技术。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-回溯的基本思想&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 回溯的基本思想&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%9b%9e%e6%ba%af%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%80%9d%e6%83%b3&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;11-解空间树&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1.1 解空间树&lt;/span&gt;&#xA;  &lt;a href=&#34;#11-%e8%a7%a3%e7%a9%ba%e9%97%b4%e6%a0%91&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;假设可以用一个 n 元组 $X=(x_1,x_2,……,x_n)$ 来表示所求问题的解，其中 $x_i$ 的取值范围为某个有穷集合 S。我们把 $X=(x_1,x_2,……,x_n)$ 所有可能取值的组合称作问题的解空间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-贪心</title>
      <link>http://localhost:1313/2020/algorithm-greedu/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-greedu/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;贪心是一种策略，是一种总是寻求当前最优的策略。因为贪心只关心局部的最优，因此不是总能得到全局的最优解，所以我们选择贪心解决问题时必须保证状态的独立性，即当前最优值只与当前状态有关，不会影响以后的状态。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-动态规划</title>
      <link>http://localhost:1313/2020/algorithm-dynamic-programming/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-dynamic-programming/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;动态规划策略通常用于求解最优化问题。在这类问题中，可能会有许多可行解，每个解对应一个值，我们希望找到具有最优值的那个解，也就是最优解。当题目中涉及「最大」「最小」等词时，很有可能就是这类问题，要考虑是否可用动态规划求解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-分治</title>
      <link>http://localhost:1313/2020/algorithm-divide-and-conquer/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-divide-and-conquer/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;分治，字面意思就是分而治之，意思就是把一个复杂的问题分成两个或更多个相同或相似的子问题，解决子问题后再进行合并。典型的如归并排序和快排，都是以分治为基础的。&lt;/p&gt;&#xA;&lt;p&gt;我们以 &lt;strong&gt;归并排序&lt;/strong&gt; 来说明一个典型的分治算法的思路&lt;/p&gt;&#xA;&lt;p&gt;分治算法可以分三步走：分解 -&amp;gt; 解决 -&amp;gt; 合并&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;分解原问题为结构相同的子问题。&lt;/li&gt;&#xA;&lt;li&gt;分解到某个容易求解的边界之后，进行递归求解。&lt;/li&gt;&#xA;&lt;li&gt;将子问题的解合并成原问题的解。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;归并排序，我们就叫这个函数 &lt;code&gt;merge_sort&lt;/code&gt; 吧，按照我们上面说的，要明确该函数的职责，即 &lt;strong&gt;对传入的一个数组排序&lt;/strong&gt; 。OK，那么这个问题能不能分解呢？当然可以！给一个数组排序，不就等于给该数组的两半分别排序，然后合并就完事了。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;merge_sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;一个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;可以很容易处理&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;merge_sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;左半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;merge_sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;右半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;左半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;右半个数组&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;好了，这个算法也就这样了，完全没有任何难度。记住之前说的，相信函数的能力，传给它半个数组，那么这半个数组就已经被排好了。而且你会发现这不就是个二叉树遍历模板吗？为什么是后序遍历？因为我们分治算法的套路是 &lt;strong&gt;分解 -&amp;gt; 解决（触底）-&amp;gt; 合并（回溯）&lt;/strong&gt; 啊，先左右分解，再处理合并，回溯就是在退栈，就相当于后序遍历了。至于 &lt;code&gt;merge&lt;/code&gt; 函数，参考两个有序链表的合并，简直一模一样。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-递归</title>
      <link>http://localhost:1313/2020/algorithm-recursive/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-recursive/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;首先简单阐述一下递归、分治、动态规划和贪心这几个东西的区别和联系。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;递归是一种编程技巧，一种解决问题的思维方式；&lt;/li&gt;&#xA;&lt;li&gt;分治和动态规划是建立在递归基础上的，解决更具体问题的两类算法思想（实现动态规划大都不是递归的，但是过程和思想是）；&lt;/li&gt;&#xA;&lt;li&gt;贪心是动态规划的一个子集，可以更高效解决一部分更特殊的问题。&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>算法-排序</title>
      <link>http://localhost:1313/2020/algorithm-sort/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-sort/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;排序算法分为&lt;strong&gt;内部排序&lt;/strong&gt;（待排序记录存放在内存中进行的排序过程）和&lt;strong&gt;外部排序&lt;/strong&gt;（由于待排序记录数量大，以致内存一次不能容纳全部记录，在排序过程中需要对外存进行访问）。我们一般提到的基本都属于内部排序，一共可以分为5大类、8小类，如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;插入排序：直接插入排序、希尔排序&lt;/li&gt;&#xA;&lt;li&gt;选择排序：简单选择排序、堆排序&lt;/li&gt;&#xA;&lt;li&gt;交换排序：冒泡排序、快速排序&lt;/li&gt;&#xA;&lt;li&gt;归并排序&lt;/li&gt;&#xA;&lt;li&gt;基数排序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这篇文章对这 8 类排序算法进行详细说明，不过在此之前，先介绍排序稳定性的概念，因为时间复杂度、空间复杂度和排序稳定性是排序算法的三个重要度量。&lt;/p&gt;&#xA;&lt;p&gt;排序稳定性其实就是相同的两个数在排序前后的先后位置是否发生了变化，具体的数学定义如下&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;假设 $r_i = r_j(1 \le i \le n, 1 \le j \le n, i \ne j)$，且在排序前的序列中 $r_i$ 领先于 $r_j$ （即 $i \le j$）。如果排序后 $r_i$ 仍领先于 $r_j$ ，则称所用的排序方法是稳定的；反之，若可能使得排序后的序列中 $r_j$ 领先于 $r_i$，则称所用的排序方法是不稳定的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;注意，下面我们所有的讨论都是基于递增排序的&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-直接插入排序&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 直接插入排序&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e7%9b%b4%e6%8e%a5%e6%8f%92%e5%85%a5%e6%8e%92%e5%ba%8f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;核心思想是：将序列的第一个记录看成是一个有序的子序列，然后从第二个记录开始逐个进行插入，直至整个序列有序为止。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-搜索</title>
      <link>http://localhost:1313/2020/algorithm-search/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-search/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;搜索是最常用的算法之一，但线性的搜索进行介绍没有太大的意义，本文介绍搜索中一种广为使用的方法：二分查找。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法-数组类问题</title>
      <link>http://localhost:1313/2020/algorithm-array/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/algorithm-array/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;数组的访问时间为 $O(1)$，这是它最大的优势，但限于数组固定的大小，平常使用最多的是动态数组。在 Golang 中，其实就是[切片]^(slice)，动态数组的初始化、访问、修改、迭代、添加、删除等都是 Golang 语法的内容，这里不再介绍。事实上，一维数组的大部分问题都很好解决，我们在本文中仅介绍二维数组的一些典型问题，更多维的数组思路是相似，而且由于其复杂性，实际上很少出现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-方向转换&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 方向转换&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e6%96%b9%e5%90%91%e8%bd%ac%e6%8d%a2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;下面是一个叫做「对角线遍历」的例子，在这个例子中，我们可以理解如何在二维数组中转换前进方向，这是一个很有用的技巧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-并查集</title>
      <link>http://localhost:1313/2020/data-structure-union-find-set/</link>
      <pubDate>Wed, 18 Mar 2020 18:44:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/data-structure-union-find-set/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;并查集是一种特别而实用的结构，主要作用是进行不相交集合的合并和判断两个元素是否在同一集合，时间复杂度为常数级。常见用途包括 Kruskal 算法和求最近公共祖先，本篇文章介绍该数据结构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-B树与红黑树</title>
      <link>http://localhost:1313/2020/data-structure-b-tree-and-red-black-tree/</link>
      <pubDate>Wed, 18 Mar 2020 09:21:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/data-structure-b-tree-and-red-black-tree/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍B树（B-树），B+树和红黑树，参考自陈小玉，《趣学数据结构》。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-图</title>
      <link>http://localhost:1313/2020/data-structure-graph/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-graph/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;链表是一种一对一的关系，树是一种一对多的关系，图则是一种多对多的关系。实际上，我们可以将链表和树都看作图的一部分。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-图的定义&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 图的定义&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%9b%be%e7%9a%84%e5%ae%9a%e4%b9%89&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;用 V(Vertex) 表示顶点的集合，用 E(Edge) 表示边的集合，则图可以看作由一个非空的有限顶点集合 V 和一个有限边的集合 E 组成，记作G(V, E)。其中&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-堆</title>
      <link>http://localhost:1313/2020/data-structure-heap/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-heap/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;普通的队列是一种先进先出的数据结构，在此基础上，还有一种叫做 &lt;strong&gt;优先队列&lt;/strong&gt; 的结构。顾名思义，优先队列就是具有优先级的队列，其中，元素被赋予优先级，具有最高优先级的元素将最先被访问。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-二叉搜索树</title>
      <link>http://localhost:1313/2020/data-structure-binary-search-tree/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-binary-search-tree/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;二叉搜索树是二叉树的一种特殊形式，由于它对查找的良好特性，使用较为广泛，本篇文章我们对其进行介绍，同时也包括二叉搜索树的各种进阶，比如二叉平衡树。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-二叉搜索树&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 二叉搜索树&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;11-定义&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1.1 定义&lt;/span&gt;&#xA;  &lt;a href=&#34;#11-%e5%ae%9a%e4%b9%89&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;二叉搜索树（BST，Binary Search Tree），也称二叉排序树或二叉查找树。其定义如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-二叉树</title>
      <link>http://localhost:1313/2020/data-structure-tree-and-binary-tree/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-tree-and-binary-tree/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;树是反映事物之间层次关系的一种结构，比如家谱树、硬盘目录结构树等。&lt;/p&gt;&#xA;&lt;p&gt;使用树的原因是这种层次结构在管理上有更高的效率，以查找为例，顺序查找的时间复杂度是O(n)，而二分查找的时间复杂度是O(log&lt;sub&gt;2&lt;/sub&gt;n)，可以看到查找效率得到了很大的提高，这是因为二分查找本质上是对一颗树的查找。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-树&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 树&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e6%a0%91&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;11-定义&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1.1 定义&lt;/span&gt;&#xA;  &lt;a href=&#34;#11-%e5%ae%9a%e4%b9%89&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;树（Tree）是由 n（n$\geq$0）个结点构成的有限集合，当 n=0 时，称为空树，而对于任一颗非空树（n&amp;gt;0），它具有如下性质：&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-队列与栈</title>
      <link>http://localhost:1313/2020/data-structure-queue-and-stack/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-queue-and-stack/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;队列与栈是最常使用的两种数据结构，其中，队列的核心特征是先入先出，栈的核心特征是后入先出，只要符合这两个特征，就属于队列（栈），不因实现形式的不同（数组或链表）而有差别，可以根据具体情况选择使用起来更方便的实现形式。&lt;/p&gt;&#xA;&lt;p&gt;在本文中，我们对队列与栈的核心功能，循环队列这种特殊结构，以及队列和栈的主要应用，尤其是广度优先搜索和深度优先搜索进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构-链表</title>
      <link>http://localhost:1313/2020/data-structure-linkedlist/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/data-structure-linkedlist/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;链表是一种最为基础的数据结构，由一系列结点组成，每个结点不仅包含值，还包含指向下一个结点（有时也包括上一个结点）的指针。相比于数组，在链表中访问指定的元素则需要$O(N)$的复杂度，但进行插入和删除操作只需要$O(1)$的复杂度&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-单链表&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 单链表&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%8d%95%e9%93%be%e8%a1%a8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;一个单链表的例子如下，蓝色箭头显示链表中的结点是如何相连的&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化5-系统功能的充分利用</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-5-system-function-use/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-5-system-function-use/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;作为一款成熟的商业系统，windows提供了大量实用的功能，尤其是到了win10后，很多功能的体验变得越来越好，本篇对这些功能做总结。&lt;/p&gt;&#xA;&lt;p&gt;值得注意的是，很多功能其实只需要设置一次就不需要再理会，或者干脆微软默认已经进行了最佳设置，这对于我们追求效率和极简是一件非常棒的事。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-搜索&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 搜索&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e6%90%9c%e7%b4%a2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;首先介绍win10的搜索功能。win10系统出现以来，Cortana就一直是任务栏的常驻功能，在响应语音的同时，也兼职文件搜索，不过并不好用。直到1903版本之后，Cortana和搜索功能拆分，新的搜索可以搜索电脑中的文档、照片、邮件、应用、系统设置、文件夹等等，并且提升了视觉效果，使用体验高了一倍不止。除此之外，在设置中也增加了「搜索」板块，可以排除不查看的文件夹，缩短搜索时间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化6-软件体系整理</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-6-software-collection/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-6-software-collection/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;对win10中使用的软件体系进行整理，在满足需要的同时，选择每一类软件中最适合的一种，同时尽量减少安装的软件数量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-系统管理&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 系统管理&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e7%b3%bb%e7%bb%9f%e7%ae%a1%e7%90%86&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;11-火绒&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1.1 火绒&lt;/span&gt;&#xA;  &lt;a href=&#34;#11-%e7%81%ab%e7%bb%92&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;抛弃腾讯和360的全家桶，火绒简单易用，只保留必需的功能，在后台默默工作，没有需要甚至意识不到它的存在。火绒的弹窗拦截功能也非常好用。&lt;a href=&#34;https://www.huorong.cn/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>win10效率优化4-文件管理</title>
      <link>http://localhost:1313/2020/efficient-use-of-win10-4-file-management/</link>
      <pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/efficient-use-of-win10-4-file-management/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;文件管理是效率提升、电子资料极简化的重要部分，本文探索如何有效的对win10中的文件进行管理，核心包括三部分：分类、命名和备份。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-分类&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 分类&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%88%86%e7%b1%bb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;win10中，最大的分类是磁盘。我的电脑有两块硬盘，划分情况如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu中无法获得锁相关问题的解决方案</title>
      <link>http://localhost:1313/2020/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Ubuntu环境下，Unable to acquire the lock这类问题时有发生，本文对该问题的解决方案做一个总结&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)&lt;br&gt;&#xA;E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;第一种情况&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第一种情况&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b8%80%e7%a7%8d%e6%83%85%e5%86%b5&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;进程中存在与apt相关的正在运行的进程，首先检查是否在运行apt,apt-get相关的进程&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础12-测试</title>
      <link>http://localhost:1313/2019/golang-syntax-12-test/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-12-test/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;实际开发中对代码进行测试是不可缺少的工作，在go中可以通过&lt;code&gt;testing&lt;/code&gt;包来进行代码的测试。&lt;code&gt;testing&lt;/code&gt;包和&lt;code&gt;go test&lt;/code&gt;命令相互配合，能够完成代码的自动化测试。&lt;/p&gt;&#xA;&lt;p&gt;在实际开发中，对代码进行测试是不可缺少的工作，在go中可以通过&lt;code&gt;testing&lt;/code&gt;包对代码进行单元测试和性能测试。&lt;/p&gt;&#xA;&lt;h4 id=&#34;基本说明&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;基本说明&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%9f%ba%e6%9c%ac%e8%af%b4%e6%98%8e&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;testing&lt;/code&gt;包是与&lt;code&gt;go test&lt;/code&gt;命令配合使用的，编写测试代码需要使用&lt;code&gt;testing&lt;/code&gt;包，而执行测试需要使用&lt;code&gt;go test&lt;/code&gt;命令。执行测试时，会自动读取源码目录下名为&lt;code&gt;*_test.go&lt;/code&gt;的文件，生成并运行测试用的可执行文件，并最终在终端输出测试信息。输出的信息类似于&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础11-错误处理</title>
      <link>http://localhost:1313/2019/golang-syntax-11-error-and-panic/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-11-error-and-panic/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Go中有两套错误处理的方式&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;普通错误： 在函数和方法中返回错误对象作为它们的唯一或最后一个返回值 ，如果返回nil，表示没有错误&lt;/li&gt;&#xA;&lt;li&gt;异常：使用panic和recover&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;主调函数总是应该检查收到的错误，不要忽略，否则可能导致严重的后果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux系统时间同步</title>
      <link>http://localhost:1313/2019/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;虚拟机长时间不开机，系统时间和当前时间不同步，导致很多操作被拒绝，这里记录如何主动同步系统的时间和网络时间&lt;/p&gt;&#xA;&lt;h2 id=&#34;正文&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;正文&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%ad%a3%e6%96%87&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;设置系统时区&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础10-协程与通道</title>
      <link>http://localhost:1313/2019/golang-syntax-10-goroutine-and-channel/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-10-goroutine-and-channel/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;首先来回顾在操作系统中学过的一些概念。进程(processes)是程序执行的基本单位，运行在一个独立的内存地址空间中；一个进程由多个线程(threads)组成，线程的存在是为了能够同时执行多个任务，最大化利用时间，防止产生等待，线程间是共享内存地址空间的。从windows资源管理器看这一点能看的很明白，如下，每个应用程序是一个进程，Typora程序下有两个线程在同时运行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20191216_3EkjsJ.png&#34; alt=&#34;进程与线程&#34; srcset=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20191216_3EkjsJ.png?size=small, https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20191216_3EkjsJ.png?size=medium 1.5x, https://picped-1301226557.cos.ap-beijing.myqcloud.com/Go_20191216_3EkjsJ.png?size=large 2x&#34; data-title=&#34;进程与线程&#34; style=&#34;background: url(/images/loading.min.svg) no-repeat center;&#34; onload=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}this.dataset.lazyloaded=&#39;&#39;;&#34; onerror=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;并发是建立在多线程之上的概念，将CPU的执行时间划分为许多很小的间隔，多个线程不断地切换执行，从上层看起来就像在同时执行一样，但本质上依然是线性的。并行则是程序在某个特定的事件同时运行在多个CPU上，多核处理器为并行提供了可能。因此，并发也可能是并行的。&lt;/p&gt;&#xA;&lt;p&gt;操作系统课程中一个最主要的问题就是多线程对共享内存空间的访问，我们学到的解决方式是通过加互斥锁来实现，但在设计实现上是一个复杂的过程，非常容易出错，鉴于操作系统考试的惨痛经历，现在完全不想回忆。Go中的标准库&lt;code&gt;sync&lt;/code&gt;中有一些工具可以用来实现互斥锁的相关操作，但它显然没有Go自身支持的Goroutines高效。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-goroutines&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. Goroutines&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-goroutines&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Go原生支持并发，依靠的是协程(goroutine)和通道(channel)两个概念。goroutines的概念是为了和processes、threads、coroutines等概念区别。其中coroutines也叫做协程，而且这才是常规意义下的协程，goroutines只在Go中有效。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础8-结构体与方法</title>
      <link>http://localhost:1313/2019/golang-syntax-8-struct-and-method/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-8-struct-and-method/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;结构体是一种非常重要的结构，用到的地方非常多，在 Go 中，结构体还是实现面向对象编程的基础。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础9-接口与反射</title>
      <link>http://localhost:1313/2019/golang-syntax-9-interface-and-reflect/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-9-interface-and-reflect/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍 Golang 中的接口与反射。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础7-函数</title>
      <link>http://localhost:1313/2019/golang-syntax-7-function/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-7-function/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;h2 id=&#34;1-函数声明与定义&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 函数声明与定义&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%87%bd%e6%95%b0%e5%a3%b0%e6%98%8e%e4%b8%8e%e5%ae%9a%e4%b9%89&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Go中有三种类型的函数：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础6-数组、切片与映射</title>
      <link>http://localhost:1313/2019/golang-syntax-6-array-slice-and-map/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-6-array-slice-and-map/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;只有基本的数据类型无法适应所有的情况，当需要存储和处理大量数据时，通常会使用数组、映射、链表等数据结构，称之为容器(container)。在Go语言中，由于数组不够灵活，增加了切片(slice)类型，切片也是一种容器。&lt;/p&gt;&#xA;&lt;p&gt;C语言没有提供容器封装，开发者需要自己根据性能需求进行封装，或者使用第三方提供的容器。C++ 语言的容器通过标准库提供，如 vector 对应数组，list 对应双链表，map 对应映射等。&lt;/p&gt;&#xA;&lt;p&gt;本篇只介绍数组和切片，映射类型放在下篇介绍，链表类型在数据结构中介绍。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-数组&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 数组&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e6%95%b0%e7%bb%84&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;数组是有限个相同类型的数据的集合，Go语言中数组声明的格式为&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客5-博客收集</title>
      <link>http://localhost:1313/2019/hugo-blog-themes-collection/</link>
      <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-themes-collection/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文用来收集喜欢的主题和有参考价值的博客(使用Hexo或Hugo的)。&lt;/p&gt;&#xA;&lt;h2 id=&#34;主题&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;主题&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%b8%bb%e9%a2%98&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/liuzc/LeaveIt&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;LeaveIt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Fastbyte01/KeepIt&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;KeepIt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/dillonzq/LoveIt&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;LoveIt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/orianna-zzo/AllinOne&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;AllinOne&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cofess/hexo-theme-pure&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;hexo-theme-pure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Siricee/hexo-theme-Chic&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;hexo-theme-Chic&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;博客&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;博客&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%8d%9a%e5%ae%a2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yearito.cn/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Yearito&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://learnblockchain.cn/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;深入浅出区块链&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://siricee.github.io/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Sirice&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mogeko.me/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Mogeko&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://huaien.co/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Wyane&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dillonzq.com/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Dillon&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://orianna-zzo.github.io/AllinOne-html/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Orianna的博客&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://molunerfinn.com/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;MARKSZ的Blog&lt;/a&gt;：PicGo的开发者&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://liam.page/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;始终的博客&lt;/a&gt;：Hexo-Next主题优秀博客&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Golang语法基础5-字符串操作与输入输出</title>
      <link>http://localhost:1313/2019/golang-syntax-5-string-input-and-output/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-5-string-input-and-output/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍字符串的相关操作，涉及&lt;code&gt;string&lt;/code&gt;和&lt;code&gt;strconv&lt;/code&gt;两个标准库，以及介绍输入输出的基本方法，涉及&lt;code&gt;fmt&lt;/code&gt;和&lt;code&gt;bufio&lt;/code&gt;两个标准库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础4-运算符与流程控制</title>
      <link>http://localhost:1313/2019/golang-syntax-4-operators-and-flow-control/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-4-operators-and-flow-control/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍 Golang 中的运算符和流程控制&lt;/p&gt;</description>
    </item>
    <item>
      <title>Win10效率优化3-桌面整理</title>
      <link>http://localhost:1313/2019/efficient-use-of-win10-3-desktop-management/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/efficient-use-of-win10-3-desktop-management/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;对任何系统来讲，桌面的整理都是重中之重。有些人喜欢文件触手可及，所有东西都放在桌面。有些人喜欢极简美观，桌面一尘不染，全部通过快速搜索完成。也有人做了折衷，桌面只放常用的文件并使用一些整理工具管理。没有对错，没有优劣，这种事情全看个人喜好，自己用着舒服就行。&lt;/p&gt;&#xA;&lt;p&gt;至于我自己，大概属于第二种吧。以下也按我的习惯来介绍，主要分三部分：壁纸，桌面，任务栏。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-壁纸&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 壁纸&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%a3%81%e7%ba%b8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;无论个人喜好，壁纸的选择都应以不影响使用为原则，过于花里胡哨的壁纸将严重影响对应用和文件的识别，即使桌面干净的用户，复杂的图片也绝对挑战着人的观感和耐心。因此，挑选壁纸不仅要注意分辨率的大小，还要注意构图尽可能简单，最好拥有1/3以上的邻近色区域。以下两张图片就是一个鲜明的对比。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础3-常量变量与基本数据类型</title>
      <link>http://localhost:1313/2019/golang-syntax-3-constants-variables-and-elementary-types/</link>
      <pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-syntax-3-constants-variables-and-elementary-types/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文介绍 Go 中的常量、变量、基本数据类型和常用的类型转换。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Win10效率优化1-综述</title>
      <link>http://localhost:1313/2019/efficient-use-of-win10-1-overview/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/efficient-use-of-win10-1-overview/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;得益于苹果的生态，MacOS上的优秀软件不少，因此网上存在大量介绍如何利用Mac有效率的学习、工作和生活的文章。但对于Win10来说，这方面的文章就乏善可陈了，但Win10作为一款消费级操作系统，拥有最大的市场占比，更在不断迭代优化，其软件数量也远远超过Mac，因此我相信它是有改善我们学习或工作模式的潜力的。&lt;/p&gt;&#xA;&lt;p&gt;我想要收集一些信息，并结合自身的使用经验，做一次这方面的总结，给自己一个备份，也给其他人一些借鉴。相信不论出于何种原因身处Win10的阵营，一颗追求效率和极简的心想必依然是有的。&lt;/p&gt;&#xA;&lt;p&gt;我们遵循极简和效率的理念来使用Win10，也以同样的理念安排这一个系列的文章。不过，有别于Mac，在Win10领域有一个庞大的社区是关于美化的，好的视觉效果能让人心情愉快，美观也是我们追求的目标，但这一目标位于效率和极简之后，意思是，美化不应当造成任何操作上的不便。这就是我使用Win10的三原则。&lt;/p&gt;&#xA;&lt;p&gt;先来一次头脑风暴，将会涉及的方面包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;锁屏&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;桌面：包括壁纸、桌面管理、任务栏。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件管理&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件资源管理器的初始界面&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;磁盘划分&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件归档&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件命名&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件同步和设备间文件互传&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;系统功能：包括截图、连接、投影、夜间模式、搜索、时间线、VPN、热点等等。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;软件管理&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;软件安装和卸载工具：IObit Uninstaller, Chocolatey&lt;/li&gt;&#xA;&lt;li&gt;通信：QQ, 微信&lt;/li&gt;&#xA;&lt;li&gt;压缩解压工具：7zip&lt;/li&gt;&#xA;&lt;li&gt;浏览器：Edge dev&lt;/li&gt;&#xA;&lt;li&gt;安全软件，应包括磁盘扫描，垃圾清理，漏洞修复，火绒&lt;/li&gt;&#xA;&lt;li&gt;编程IDE和其它编程相关：VScode, Github&lt;/li&gt;&#xA;&lt;li&gt;文献管理：Zotero&lt;/li&gt;&#xA;&lt;li&gt;文档编辑：Typora&lt;/li&gt;&#xA;&lt;li&gt;音乐、视频播放软件：网易云，迅雷影音&lt;/li&gt;&#xA;&lt;li&gt;邮件和日程管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Win10效率优化2-锁屏与登录</title>
      <link>http://localhost:1313/2019/efficient-use-of-win10-2-lockscreen-and-login/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/efficient-use-of-win10-2-lockscreen-and-login/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Win10 系统中，锁屏是我们登录系统前看到的一个界面。它的作用是当我们暂时离开电脑时阻止别人操作，但早晨当我们打开电脑时，第一眼看到也是锁屏界面，因此它可以影响我们的心情，所以要选择好的图片作为锁屏背景。微软提供了一些关于锁屏的有用的功能，包括：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;自定义锁屏背景图片&lt;/li&gt;&#xA;&lt;li&gt;在锁屏界面显示当前时间和日期&lt;/li&gt;&#xA;&lt;li&gt;在锁屏界面显示日历中日程信息和软件通知&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;所有的设置基本都位于个性化设置中的锁屏界面设置。以下我们就来介绍如何定制一个合适的锁屏界面。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-锁屏背景&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 锁屏背景&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e9%94%81%e5%b1%8f%e8%83%8c%e6%99%af&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Win10 允许我们以三种方式设置锁屏背景： Windows 聚焦，图片和幻灯片放映。具体的设置方式为&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git深入-子模块, 徽章, 开源协议</title>
      <link>http://localhost:1313/2019/git-learning-deep-into/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/git-learning-deep-into/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;学习一些更高级或更有趣的 Git 用法，包括子模块、徽章、开源协议选择等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客4-主题美化</title>
      <link>http://localhost:1313/2019/hugo-blog-theme-beautify/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-theme-beautify/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;h2 id=&#34;1-基础知识&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 基础知识&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;通过一个简单的主题开发流程，理解需要的基本知识，为自己进行主题修改和美化打基础，这里参考&lt;a href=&#34;https://github.com/digitalcraftsman/hugo-steam-theme/blob/master/exampleSite/content/post/creating-a-new-theme.md&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;create a new theme&lt;/a&gt;一文。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础2-命令、包与模块</title>
      <link>http://localhost:1313/2019/golang-basic-grammer-2-command-package-module/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-basic-grammer-2-command-package-module/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍Go中的基础命令，包和模块。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-命令&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 命令&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%91%bd%e4%bb%a4&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Go 在安装后自带一个命令行工具，名为 &lt;code&gt;go&lt;/code&gt;，用来下载、编译、安装、测试 Go 的包和源文件，关于 Go CLI 的发展历史和设计理念，可以查看 &lt;a href=&#34;https://golang.google.cn/doc/articles/go_command.html&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;About the go command&lt;/a&gt;，这里只介绍如何使用这些命令。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang语法基础1-背景与初探</title>
      <link>http://localhost:1313/2019/golang-basic-grammar-1-background-and-preliminary-exploration/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/golang-basic-grammar-1-background-and-preliminary-exploration/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;h2 id=&#34;1-起源与发展&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 起源与发展&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e8%b5%b7%e6%ba%90%e4%b8%8e%e5%8f%91%e5%b1%95&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Go/Golang 起源于2007年，并于2009年正式对外发布，是一个完全开源的项目，背后的支持者是谷歌公司，核心设计者是三位著名IT工程师：Ken Thompson，Rob Pike，Robert Griesemer。分别是如下从左到右三位&lt;/p&gt;</description>
    </item>
    <item>
      <title>VMware虚拟机使用技巧</title>
      <link>http://localhost:1313/2019/vmware-usage/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/vmware-usage/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;双系统时常折腾容易坏电脑，因此一般是在虚拟机中使用Linux系统，常用的虚拟机为VMware，本文对VMware的相关知识以及使用过程中的一些问题做介绍。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三种网络模式辨析&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;三种网络模式辨析&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%b8%89%e7%a7%8d%e7%bd%91%e7%bb%9c%e6%a8%a1%e5%bc%8f%e8%be%a8%e6%9e%90&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;VMware有三种网络模式，分别是桥接模式、NAT模式和主机模式&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派和虚拟机组网出现的问题及解决思路</title>
      <link>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BB%84%E7%BD%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BB%84%E7%BD%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;小米随身WiFi拥有两种模式，网卡模式可以令电脑搜索并接入其它的WiFi，AP模式可以开启一个WiFi供别的设备加入。现在拥有一台主机，插在上面的小米随身WiFi开启了热点模式，网关地址为192.168.191.1。另外还有两台树莓派，静态ip分别设置为了192.168.191.2和192.168..191.3。主机中利用VMware建立了一个虚拟机，系统为Ubuntu18.04。现在，虚拟机中的系统（之后简称为虚拟机）需要和两块树莓派联通。拓扑结构如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AvOHS.png&#34; alt=&#34;待处理网络&#34; srcset=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AvOHS.png?size=small, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AvOHS.png?size=medium 1.5x, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AvOHS.png?size=large 2x&#34; data-title=&#34;待处理网络&#34; style=&#34;background: url(/images/loading.min.svg) no-repeat center;&#34; onload=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}this.dataset.lazyloaded=&#39;&#39;;&#34; onerror=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;在NAT模式下对虚拟机设置了静态ip，但这种情况测试网络时发现虚拟机可以ping通两个树莓派，树莓派无法ping通Ubuntu，经过思考发现NAT模式下虚拟机所在网段和树莓派所在网段不是同一个，虚拟机共享了主机的网络，但树莓派处于AP热点网络下，无法访问。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axp3n.png&#34; alt=&#34;桥接方案&#34; srcset=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axp3n.png?size=small, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axp3n.png?size=medium 1.5x, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axp3n.png?size=large 2x&#34; data-title=&#34;桥接方案&#34; style=&#34;background: url(/images/loading.min.svg) no-repeat center;&#34; onload=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}this.dataset.lazyloaded=&#39;&#39;;&#34; onerror=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;将NAT模式改为桥接模式，虚拟机桥接到作为AP热点的小米随身WiFi上。但经试验无法联通，主要是因为桥接的本质是将虚拟机视为和主机在同一网络下的实体设备，桥接的对象也是拥有自己ip的终端设备，而小米随身WiFi此时处于AP模式，类似于路由器，只存在网关地址。理解了这个之后，转而将虚拟机桥接到有线网卡上，但有线网卡所在的实验室局域网和AP热点的局域网存在隔离，无法联通。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AxmC9.png&#34; alt=&#34;虚拟机开启AP&#34; srcset=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AxmC9.png?size=small, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AxmC9.png?size=medium 1.5x, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3AxmC9.png?size=large 2x&#34; data-title=&#34;虚拟机开启AP&#34; style=&#34;background: url(/images/loading.min.svg) no-repeat center;&#34; onload=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}this.dataset.lazyloaded=&#39;&#39;;&#34; onerror=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;转而直接由虚拟机开启AP热点（安装驱动，利用&lt;a href=&#34;https://github.com/oblique/create_ap&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;create_ap&lt;/a&gt;开启AP热点），如果树莓派可以访问虚拟机，就能实现互通，经实验并不可以，是因为在AP模式下，小米随身WiFi仍然是路由器状态，虚拟机在网络上的ip取决于其有线网卡，然而有线网卡的地址仍然是实验室局域网ip，和树莓派不互通。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axug1.png&#34; alt=&#34;共同接入手机热点&#34; srcset=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axug1.png?size=small, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axug1.png?size=medium 1.5x, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_3Axug1.png?size=large 2x&#34; data-title=&#34;共同接入手机热点&#34; style=&#34;background: url(/images/loading.min.svg) no-repeat center;&#34; onload=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}this.dataset.lazyloaded=&#39;&#39;;&#34; onerror=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}&#34;/&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派使用网线直连电脑</title>
      <link>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BA%BF%E7%9B%B4%E8%BF%9E%E7%94%B5%E8%84%91/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BA%BF%E7%9B%B4%E8%BF%9E%E7%94%B5%E8%84%91/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;树莓派刷好系统，要进行联网使用，手里没有显示屏和HDMI线，实验室没有路由器，电脑也没有无线网卡，唯一的网口也被占用。只能通过网线和USB网口转换器直连电脑并使用SSH登录。&lt;/p&gt;&#xA;&lt;h4 id=&#34;准备材料&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;准备材料&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%87%86%e5%a4%87%e6%9d%90%e6%96%99&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;ol&gt;&#xA;&lt;li&gt;刷好系统的树莓派，已添加&lt;code&gt;ssh&lt;/code&gt;文件启用ssh&lt;/li&gt;&#xA;&lt;li&gt;一根网线&lt;/li&gt;&#xA;&lt;li&gt;一台已联网的电脑&lt;/li&gt;&#xA;&lt;li&gt;USB网口转换器（如果有多余的网口可以不需要）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;连接&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;连接&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%bf%9e%e6%8e%a5&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;使用USB网口转换器扩展一个网口出来，使用网线连接扩展的网口和树莓派。&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派常用设置</title>
      <link>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;记录树莓派使用过程中经常使用的一些设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-wifi连接&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. WiFi连接&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-wifi%e8%bf%9e%e6%8e%a5&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;这里指的是初次启动直连WiFi，主要是因为手里没有屏幕，因为使用的小米随身WiFi，所以可能有些废话，但为了保存资料，就写这里了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客3-进阶设置</title>
      <link>http://localhost:1313/2019/hugo-blog-advanced-setup/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-advanced-setup/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文是 Hugo 使用记录的第二篇，介绍如何为Hugo开启更多的功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-添加菜单栏页面&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 添加菜单栏页面&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e6%b7%bb%e5%8a%a0%e8%8f%9c%e5%8d%95%e6%a0%8f%e9%a1%b5%e9%9d%a2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;我们可以自己建立新的菜单页面&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; ，比如我新建&lt;code&gt;life&lt;/code&gt;页面用作展示阅读的书籍、电影和游览的景点。建立页面文件的命令如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客2-文章写作</title>
      <link>http://localhost:1313/2019/hugo-blog-article-write/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-article-write/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本文是 Hugo 使用记录的第二篇，介绍关于文章写作的一些问题，包括分类管理、排版技巧、特殊语法等，所有语法基于 LoveIt 主题。&lt;/p&gt;&#xA;&lt;p&gt;Hugo支持的文章格式为&lt;code&gt;.md&lt;/code&gt;，即用markdown语言编辑的文章。所有的文章都放在&lt;code&gt;content/posts&lt;/code&gt;目录下，支持级联目录，即在&lt;code&gt;posts&lt;/code&gt;目录下按分类建立多个子文件夹放置文章，比如本博客的文章按分类放在四个子文件夹下。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls posts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;牧码人/  我所热爱的生活啊/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;平日里的白日梦/      研究生的区块链学习之路/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;下面是三条方便清晰管理和生成文章的目录结构建议:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;保持博客文章存放在 &lt;code&gt;content/posts&lt;/code&gt; 目录, 例如: &lt;code&gt;content/posts/我的第一篇文章.md&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;保持简单的静态页面存放在 &lt;code&gt;content&lt;/code&gt; 目录, 例如: &lt;code&gt;content/about.md&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;保持图片之类的媒体资源存放在 &lt;code&gt;static&lt;/code&gt; 目录, 例如: &lt;code&gt;static/images/screenshot.png&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;1-前置参数&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 前置参数&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%89%8d%e7%bd%ae%e5%8f%82%e6%95%b0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Hugo 允许在文章内容前面添加 &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;toml&lt;/code&gt; 或者 &lt;code&gt;json&lt;/code&gt; 格式的前置参数，LoveIt 默认文章模板提供的前置参数有&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo搭建个人博客1-基础建站</title>
      <link>http://localhost:1313/2019/hugo-blog-build-personal-blog/</link>
      <pubDate>Fri, 26 Apr 2019 10:45:00 +0800</pubDate>
      <guid>http://localhost:1313/2019/hugo-blog-build-personal-blog/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Hugo&lt;/a&gt; 是由 Go 语言实现的静态网站生成器，可以快速建立一个静态网站，虽然多数情况下用来搭建个人博客，但也可以用作展示在线书籍、个人简历等。在使用 Hugo 之前，我一直使用 Hexo 搭建个人博客，促使我更换工具的原因主要有两个&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;文章数量较多时，Hexo 生成速度非常慢，同样的文章数量下，Hugo 渲染文章几乎是即时的；&lt;/li&gt;&#xA;&lt;li&gt;Hexo 依赖于 Node.js，使用需要在电脑里安装 node 和 npm。另外，Hexo 允许开发者提供各种 npm 模块来增强其功能，这种做法虽然使 Hexo 扩展性极高，但在博客的维护、备份和恢复等方面都带来了极大的不便。Hugo 使用 Go 开发，不依赖任何其它模块，只需要按照 Hugo 这一个软件即可。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;综上，我选择将博客网站迁移到 Hugo，这个系列的文章用来记录 Hugo 使用种遇到的问题和积累的经验。本文是第一篇，介绍博客网站搭建的过程和一些基础配置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-安装hugo&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 安装Hugo&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%ae%89%e8%a3%85hugo&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;详细的安装说明参见&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;官方文档&lt;/a&gt;，这里简单介绍 win10 和 Ubuntu18.04 的快速安装。&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派项目构想-扫地机器人</title>
      <link>http://localhost:1313/2019/raspberry-project-sweeping-robot/</link>
      <pubDate>Tue, 26 Mar 2019 19:40:00 +0800</pubDate>
      <guid>http://localhost:1313/2019/raspberry-project-sweeping-robot/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;h2 id=&#34;前言&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;前言&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;本文是创新创业的结课报告，结课报告的题目要求如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过课程学习、课下查阅网络与图文资料，了解和掌握树莓派的功能、扩展性与应用领域（树莓派的典型和非典型应用）&lt;/li&gt;&#xA;&lt;li&gt;深入分析某一个具体行业或工作的工作特点，找到痛点难点，并分析树莓派的适用性（树莓派的什么特点使其适合用于解决这一问题）&lt;/li&gt;&#xA;&lt;li&gt;基于树莓派的功能，讨论如何通过增加相应的软硬件（传感器、软件模块、算法库……等），满足所关注的问题&lt;/li&gt;&#xA;&lt;li&gt;以“开发产品原型并吸引风投”为目标，完成一份创业项目计划书&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;注：不要求完成实际作品，而是强调基于技术的创意、运用工具和所学知识解决实际问题的能力、分析评价项目商业价值的能力&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用树莓派作为服务器建立动态博客</title>
      <link>http://localhost:1313/2019/using-virtual-machine-as-raspberry-pi-server-to-build-dynamic-blog/</link>
      <pubDate>Wed, 13 Mar 2019 14:32:00 +0800</pubDate>
      <guid>http://localhost:1313/2019/using-virtual-machine-as-raspberry-pi-server-to-build-dynamic-blog/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;h2 id=&#34;1-前言&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 前言&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%89%8d%e8%a8%80&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;该工作为课程作业，主要目标为利用树莓派作为服务器，完成wordpress的配置，建立动态博客网站。详细的作业要求如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-ICMP协议</title>
      <link>http://localhost:1313/2018/internet-control-message-protocol/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/internet-control-message-protocol/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;网络层除了主要的 IP 协议外，还有 ICMP（Internet Control Message Protocol） 协议，ping 和 traceroute 都会用到它，本文进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-HTTP方法</title>
      <link>http://localhost:1313/2018/http-method/</link>
      <pubDate>Mon, 20 Aug 2018 19:38:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/http-method/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;理解不同的 HTTP 方法的区别，主要参考 &lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-4.3&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;RFC 7231&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-HTTP与HTTPS协议</title>
      <link>http://localhost:1313/2018/http-and-https/</link>
      <pubDate>Thu, 09 Aug 2018 20:43:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/http-and-https/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;HTTP 和 HTTPS 是最常用的两个协议，本篇对它们进行介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-TCP和UDP协议</title>
      <link>http://localhost:1313/2018/transmission-control-protocol-and-user-datagram-protocol/</link>
      <pubDate>Tue, 07 Aug 2018 21:16:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/transmission-control-protocol-and-user-datagram-protocol/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;本篇介绍计算机网络运输层的的 TCP 和 UDP 协议，主要是过一遍，加深理解，以及方便以后查看，毕竟不是每次都带着书。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-数据链路层</title>
      <link>http://localhost:1313/2018/data-link-layer/</link>
      <pubDate>Thu, 19 Jul 2018 20:25:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/data-link-layer/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;两台主机间的数据传输，通常不是直达的，而是分成一段一段的链路。两个相邻节点间如何传输数据，是数据链路层关心的事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络-物理层</title>
      <link>http://localhost:1313/2018/physical-layer/</link>
      <pubDate>Thu, 19 Jul 2018 20:08:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/physical-layer/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;物理层是 OSI 体系最下面的一层，涉及的多数是关于传输媒体和数据通信的知识，概念居多，本篇不详细解释，仅分辨物理层的主要任务。&lt;/p&gt;&#xA;&lt;p&gt;物理层考虑的问题是如何传输比特流，它要负责向数据链路层屏蔽掉传输媒体和通信手段的差异，从而使上层能专注自己的协议和服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown使用探索</title>
      <link>http://localhost:1313/2018/markdown-usage/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/markdown-usage/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;h2 id=&#34;前言&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;前言&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Markdown用习惯之后，就会不管什么事都想用它来做，因为真的太好用了。本篇文章就是一些尝试，因为往往“不堪大用”，所以给这篇文章起了这么一个名字。当前一些基本想法如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown语法</title>
      <link>http://localhost:1313/2018/markdown-syntax/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/markdown-syntax/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Markdown由Aaron Swartz和John Gruber共同设计&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Aaron Swartz的博客：&lt;a href=&#34;http://www.aaronsw.com/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;http://www.aaronsw.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;John Gruber的博客： &lt;a href=&#34;https://daringfireball.net/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://daringfireball.net/ &lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;作者中的Aaron Swartz是天才程序员，著名社交网站&lt;a href=&#34;http://www.reddit.com/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Reddit&lt;/a&gt;的联合创始人，14岁参与RSS 1.0规格标准的制订，致力于网络信息开放。在2011年7月19日，因被指控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕，2013年1月自杀身亡，年仅26岁。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://tse3-mm.cn.bing.net/th?id=OIP.3gYYIbdHi-ZmoY65LaErfgHaF7&amp;amp;pid=Api&amp;amp;rs=1&#34; alt=&#34;Aaron Swartz&#34; srcset=&#34;https://tse3-mm.cn.bing.net/th?id=OIP.3gYYIbdHi-ZmoY65LaErfgHaF7&amp;amp;pid=Api&amp;amp;rs=1&amp;amp;size=small, https://tse3-mm.cn.bing.net/th?id=OIP.3gYYIbdHi-ZmoY65LaErfgHaF7&amp;amp;pid=Api&amp;amp;rs=1&amp;amp;size=medium 1.5x, https://tse3-mm.cn.bing.net/th?id=OIP.3gYYIbdHi-ZmoY65LaErfgHaF7&amp;amp;pid=Api&amp;amp;rs=1&amp;amp;size=large 2x&#34; data-title=&#34;Aaron Swartz&#34; class=&#34;suffix-invalid suffix-invalid__small suffix-invalid__large&#34; style=&#34;background: url(/images/loading.min.svg) no-repeat center;&#34; onload=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}this.dataset.lazyloaded=&#39;&#39;;&#34; onerror=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}&#34;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;Markdown的优点很多，下面稍微列举一下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;易读（看起开舒服）、易写（语法简单）、易更改(纯文本)，处处体现着极简主义的影子。&lt;/li&gt;&#xA;&lt;li&gt;兼容HTML，可以转换为HTML格式发布。&lt;/li&gt;&#xA;&lt;li&gt;跨平台使用。&lt;/li&gt;&#xA;&lt;li&gt;越来越多的网站支持Markdown。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;具体的Markdown语法主要分为如下几部分：标题，段落，引用，代码块，列表，加粗与斜体，分割线与删除线，链接，图片。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-基础语法&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 基础语法&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%9f%ba%e7%a1%80%e8%af%ad%e6%b3%95&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;标题&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;标题&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%a0%87%e9%a2%98&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;标题的定义有两种形式&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git提高-分支管理, 多人协作, 标签管理, gitignore, commit信息</title>
      <link>http://localhost:1313/2018/git-learning-improvement/</link>
      <pubDate>Sun, 22 Apr 2018 10:21:16 +0800</pubDate>
      <guid>http://localhost:1313/2018/git-learning-improvement/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;上一篇我们学习了Git的基本知识，包括仓库创建，提交、修改、推送、回退等等操作，本篇学习一些高级的功能。转自 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/896043488029600&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;廖雪峰的官方网站-git教程&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-分支管理&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 分支管理&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%88%86%e6%94%af%e7%ae%a1%e7%90%86&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;每个仓库都可能有几条不同的分支，比如master分支，比如用于开发的dev分支。分支操作的实质是对指针的操作&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git入门-基本概念, 基本原理, 安装使用</title>
      <link>http://localhost:1313/2018/git-learning-getting-started/</link>
      <pubDate>Fri, 20 Apr 2018 19:06:20 +0800</pubDate>
      <guid>http://localhost:1313/2018/git-learning-getting-started/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;版本控制系统在代码开发过程中必不可缺，本系列学习 Git 的使用，版本托管服务则是 Github。以廖雪峰大神 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/896043488029600&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;git教程&lt;/a&gt; 为主体，辅以使用过程中遇到的问题和心得。&lt;/p&gt;</description>
    </item>
    <item>
      <title>编程语言选择</title>
      <link>http://localhost:1313/2018/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</link>
      <pubDate>Wed, 18 Apr 2018 20:06:18 +0800</pubDate>
      <guid>http://localhost:1313/2018/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;从大学期间教授的C、C++、Java，到自己接触的python、js，以及耳熟能详的PHP、C#、Ruby，甚至其它众多听过的没听过的语言。在此写这篇文章对这些主流的编程语言做一个对比，不是说哪个好哪个不好，更多的是总结下每一种都更多的用在哪些方面，以此来为未来的道路做一个参考。&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h3 id=&#34;tiobe编程语言排行榜&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;TIOBE编程语言排行榜&lt;/span&gt;&#xA;  &lt;a href=&#34;#tiobe%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80%e6%8e%92%e8%a1%8c%e6%a6%9c&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.tiobe.com/tiobe-index//&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;TIOBT编程语言排行榜&lt;/a&gt;是编程语言流行趋势的一个指标,该排行每月更新一次。编程语言在排行榜上的位置是根据全世界范围内相应的有经验的工程师、课程和第三方供应商的数量而定。而谷歌、必应、维基、亚马逊、YouTube和百度等搜索引擎的搜索频次决定该语言的占比（Ratings）。另外，网站还特别强调，关于哪种语言是最好的，哪种语言的已完成代码最多和他们无关。&lt;br&gt;&#xA;这个排行榜用来考察自己的编程技能是否还在时代潮流，也可以在开始一段新的学习或开发一个新系统时作为一个语言选择依据。2018年4月的排行榜如下：&#xA;&lt;img loading=&#34;lazy&#34; src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180418_1HN7Ie.png&#34; alt=&#34;TIOBE Index_2018 04&#34; srcset=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180418_1HN7Ie.png?size=small, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180418_1HN7Ie.png?size=medium 1.5x, https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180418_1HN7Ie.png?size=large 2x&#34; data-title=&#34;TIOBE Index_2018 04&#34; style=&#34;background: url(/images/loading.min.svg) no-repeat center;&#34; onload=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}this.dataset.lazyloaded=&#39;&#39;;&#34; onerror=&#34;this.title=this.dataset.title;for(const i of [&#39;style&#39;, &#39;data-title&#39;,&#39;onerror&#39;,&#39;onload&#39;]){this.removeAttribute(i);}&#34;/&gt;&#xA;我们就从这个排行榜开始讲起，分析各流行语言如表1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hexo 搭建个人博客</title>
      <link>http://localhost:1313/2018/using-hexo-build-persoanl-blog/</link>
      <pubDate>Tue, 17 Apr 2018 20:30:00 +0800</pubDate>
      <guid>http://localhost:1313/2018/using-hexo-build-persoanl-blog/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;&lt;a href=&#34;https://hexo.io/zh-cn/index.html&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Hexo&lt;/a&gt;是一款快速、简洁且高效的静态博客框架，使用Markdown渲染引擎解析文章，拥有着丰富的&lt;a href=&#34;https://hexo.io/themes/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;主题社区&lt;/a&gt;，可以帮助我们快速建立自己的博客，正在成为越来越多的技术人员制作自己博客的首选。&lt;/p&gt;&#xA;&lt;p&gt;我选用了Hexo+github的博客部署模式，博客地址为：&lt;a href=&#34;https://songdehua.github.io&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://songdehua.github.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h2 id=&#34;开始使用&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;开始使用&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%bc%80%e5%a7%8b%e4%bd%bf%e7%94%a8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Hexo使用Node.js编写，安装之前需要先安装两个工具&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植1-移植相关知识</title>
      <link>http://localhost:1313/2018/migration-related-knowledge/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/migration-related-knowledge/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;h2 id=&#34;1-linux-操作系统组成&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. Linux 操作系统组成&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-linux-%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f%e7%bb%84%e6%88%90&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Linux 操作系统由 Linux 内核、shell 命令解释器和应用程序3部分构成&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植2-Debian系统的移植</title>
      <link>http://localhost:1313/2018/migration-of-debian-system/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/migration-of-debian-system/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;Debian 系统的移植总分四部分：u-boot的编译与烧录，Linux内核的编译与烧录，Debian 基本根文件系统的制作、配置与烧录，开发板设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-u-boot的编译&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. u-boot的编译&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-u-boot%e7%9a%84%e7%bc%96%e8%af%91&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;对应于EMSYM的blurr开发板的u-boot项目使用GitHub进行开源维护，&lt;a href=&#34;https://github.com/EMSYM/U-boot&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;下载地址&lt;/a&gt;，我的编译环境为Ubuntu16.04 LTS系统&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植3-Android系统移植</title>
      <link>http://localhost:1313/2018/android-system-migration/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/android-system-migration/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;采用Android6.0（棉花糖），编译环境为Ubuntu14.04和opoenjdk-7-jdk&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-获取源码&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 获取源码&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e8%8e%b7%e5%8f%96%e6%ba%90%e7%a0%81&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;首先参阅Android网站&lt;a href=&#34;http://source.android.com/source/initializing.html&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;source.android.com/source/initializing.html&lt;/a&gt;安装依赖&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植4-内核配置</title>
      <link>http://localhost:1313/2018/linux-lernel-configuration/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/linux-lernel-configuration/</guid>
      <category domain="http://localhost:1313/categories/%E7%89%A7%E7%A0%81%E4%BA%BA/">牧码人</category>
      <description>&lt;p&gt;内核配置的目的主要是裁剪掉不必要的文件和目录，获得一个最适用的操作系统。可通过执行下面的命令进入配置窗口&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make menuconfig&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;执行完毕后显示一个基于文本的图形化终端配置菜单，这是是使用最广的配置方法，如果一个.config文件已经存在，它将使用该文件设置那些默认值&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-启动内核配置窗口&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;1. 启动内核配置窗口&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%90%af%e5%8a%a8%e5%86%85%e6%a0%b8%e9%85%8d%e7%bd%ae%e7%aa%97%e5%8f%a3&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;进入需要被配置的内核的根目录，使用 &lt;code&gt;make menuconfig&lt;/code&gt; 命令启动内核配置窗口，如下图&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1vL411E7fs?spm_id_from=333.851.b_7265636f6d6d656e64.6&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://www.bilibili.com/video/BV1vL411E7fs?spm_id_from=333.851.b_7265636f6d6d656e64.6&lt;/a&gt;，失去信任&lt;/p&gt;&#xA;&lt;p&gt;看到世卫组织的工作，提升信心&lt;/p&gt;&#xA;&lt;p&gt;看到家长里短，坑钱商家，失去信心&lt;/p&gt;&#xA;&lt;p&gt;B站，温铁军，《为什么贫富分化愈发严重》失去信心&lt;/p&gt;&#xA;&lt;p&gt;QQ空间，东大小红果，祝融号新闻，唤起信心&lt;/p&gt;&#xA;&lt;p&gt;B站，闫帅奇，军神科普视频，唤起信心&lt;/p&gt;&#xA;&lt;p&gt;米游社，执望三千里任务的评论，失去信心&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/KFTNKbD-w-yGNxMteTjZsA&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;金融圈惊呆了！市值300多亿，一年净亏损超1000亿，前董事长已被执行死刑&lt;/a&gt;，失去信心&lt;/p&gt;&#xA;&lt;p&gt;看到现在有人在刻意制造孩子与父母的对立，凡是有问题就把原因归结到父母，失去信心&lt;/p&gt;&#xA;&lt;p&gt;B站，儿童合唱团oneVoice的合唱，唤起信心，给我唱哭了，&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV14P4y1p7N6?spm_id_from=333.999.0.0&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;震撼圆梦之声《A Million Dreams》催泪合唱现场！_哔哩哔哩_bilibili&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Fg411L7gW?spm_id_from=333.999.0.0&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;洗涤心灵的合唱现场！童声演绎治愈良曲《I Can Only Imagine》_哔哩哔哩_bilibili&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;网络安全学习&lt;/p&gt;&#xA;&lt;p&gt;\1. cybrary  &lt;a href=&#34;https://www.cybrary.it/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://www.cybrary.it/&lt;/a&gt;&#xA;\2. securitytube  &lt;a href=&#34;http://www.securitytube.net/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;http://www.securitytube.net/&lt;/a&gt;&#xA;\3. hacking-tutorial  &lt;a href=&#34;https://www.hackingtutorials.org/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://www.hackingtutorials.org/&lt;/a&gt;&#xA;\4. hack this site  &lt;a href=&#34;https://www.hackthissite.org/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://www.hackthissite.org/&lt;/a&gt;&#xA;\5. hacking loops  &lt;a href=&#34;https://www.hackingloops.com/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://www.hackingloops.com/&lt;/a&gt;&#xA;\6. exploit database  &lt;a href=&#34;https://www.exploit-db.com/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://www.exploit-db.com/&lt;/a&gt;&#xA;\7. hellbound hackers &lt;a href=&#34;https://hbh.sh/home&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://hbh.sh/home&lt;/a&gt;&#xA;\8. hack in the box &lt;a href=&#34;https://www.hitb.org/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;https://www.hitb.org/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
