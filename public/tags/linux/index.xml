<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on songdehua blog</title>
    <link>http://localhost:1313/tags/linux/</link>
    <description>Recent content in Linux on songdehua blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 02 Sep 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正则表达式与通配符</title>
      <link>http://localhost:1313/2020/regular-expression-basic-syntax/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/regular-expression-basic-syntax/</guid>
      <description>&lt;p&gt;正则表达式在字符串处理时使用的非常普遍，这次来学习正则的相关知识，分别结束通配符、正则及它们的区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bash脚本语法</title>
      <link>http://localhost:1313/2020/bash-script-grammer/</link>
      <pubDate>Tue, 18 Aug 2020 11:37:00 +0800</pubDate>
      <guid>http://localhost:1313/2020/bash-script-grammer/</guid>
      <description>&lt;p&gt;很多时候都要求能使用 Shell 脚本进行编程，本文是根据阮一峰大神的 &lt;a href=&#34;https://wangdoc.com/bash/intro.html&#34;&gt;系列教程&lt;/a&gt; 总结的基本知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu中无法获得锁相关问题的解决方案</title>
      <link>http://localhost:1313/2020/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2020/ubuntu%E4%B8%AD%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;Ubuntu环境下，Unable to acquire the lock这类问题时有发生，本文对该问题的解决方案做一个总结&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)&lt;br&gt;&#xA;E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;第一种情况&#34;&gt;第一种情况&lt;/h2&gt;&#xA;&lt;p&gt;进程中存在与apt相关的正在运行的进程，首先检查是否在运行apt,apt-get相关的进程&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ps aux &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -i apt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;如果存在与apt相关的正在运行的进程，kill掉进程&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo &lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; -9 &amp;lt;process id&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;或者直接简单粗暴的：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo killall apt apt-get &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;如果进行完上面的步骤还是无法顺利执行apt-get 操作，则属于第二种情况&lt;/p&gt;&#xA;&lt;h2 id=&#34;第二种情况&#34;&gt;第二种情况&lt;/h2&gt;&#xA;&lt;p&gt;进程列表中已经没有与apt,apt-get相关的进程在运行，但依然报错，在这种情况下，产生错误的根本原因是lock file。 loack file用于防止两个或多个进程使用相同的数据。 当运行apt或apt-commands时，它会在几个地方创建lock files。 当前一个apt命令未正确终止时，lock file未被删除，因此它们会阻止任何新的apt / apt-get命令实例，比如正在执行apt-get upgrade，在执行过程中直接ctrl+c取消了该操作，很有可能就会造成这种情况。&#xA;要解决此问题，首先要删除lock file。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux系统时间同步</title>
      <link>http://localhost:1313/2019/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/linux%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</guid>
      <description>&lt;p&gt;虚拟机长时间不开机，系统时间和当前时间不同步，导致很多操作被拒绝，这里记录如何主动同步系统的时间和网络时间&lt;/p&gt;&#xA;&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;&#xA;&lt;p&gt;设置系统时区&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ timedatectl set-timezone Asia/Shanghai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;安装ntpdate工具&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install ntpdate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;同步时间&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ntpdate cn.pool.ntp.org&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;将系统时间写入硬件时间&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo hwclock --systohc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;ntpdate cn.pool.ntp.org是位于中国的公共NTP服务器&lt;/p&gt;</description>
    </item>
    <item>
      <title>VMware虚拟机使用技巧</title>
      <link>http://localhost:1313/2019/vmware-usage/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2019/vmware-usage/</guid>
      <description>&lt;p&gt;双系统时常折腾容易坏电脑，因此一般是在虚拟机中使用Linux系统，常用的虚拟机为VMware，本文对VMware的相关知识以及使用过程中的一些问题做介绍。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三种网络模式辨析&#34;&gt;三种网络模式辨析&lt;/h2&gt;&#xA;&lt;p&gt;VMware有三种网络模式，分别是桥接模式、NAT模式和主机模式&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-bridged桥接模式&#34;&gt;1. Bridged(桥接模式)&lt;/h3&gt;&#xA;&lt;p&gt;在桥接模式下，VMware虚拟出来的操作系统就像是局域网中的一独立的主机，它可以访问网内任何一台机器。不过你需要空闲的IP地址，并且需要手工为虚拟系统配置IP地址、子网掩码，而且还要和宿主机器处于同一网段，这样虚拟系统才能和宿主机器进行通信。&lt;/p&gt;&#xA;&lt;p&gt;如果你想利用VMware在局域网内新建一个虚拟服务器，为局域网用户提供网络服务，就应该选择桥接模式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64345429-f0448a80-d022-11e9-9c6c-5a9154f2d7cd.png&#34; alt=&#34;桥接模式&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-nat网络地址转换模式&#34;&gt;2. NAT(网络地址转换模式)&lt;/h3&gt;&#xA;&lt;p&gt;使用NAT模式，就是让虚拟系统借助NAT(网络地址转换)功能，通过宿主机器所在的网络来访问公网。也就是说，使用NAT模式可以实现在虚拟系统里访问互联网。NAT模式下的虚拟系统的TCP/IP配置信息是由VMnet8(NAT)虚拟网络的DHCP服务器提供的，无法进行手工修改，因此虚拟系统也就无法和本局域网中的其他真实主机进行通讯。采用NAT模式最大的优势是虚拟系统接入互联网非常简单，你不需要进行任何其他的配置，只需要宿主机器能访问互联网即可。&lt;/p&gt;&#xA;&lt;p&gt;如果你想利用VMware安装一个新的虚拟系统，在虚拟系统中不用进行任何手工配置就能直接访问互联网，建议你采用NAT模式。（也可以配置静态IP，后面会介绍）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64345428-efabf400-d022-11e9-87e1-228e7f09f247.png&#34; alt=&#34;NAT模式&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-host-only主机模式&#34;&gt;3. Host-only(主机模式)&lt;/h3&gt;&#xA;&lt;p&gt;在某些特殊的网络调试环境中，要求将真实环境和虚拟环境隔离开，这时你就可采用Host-only模式。&lt;/p&gt;&#xA;&lt;p&gt;在Host-only模式中，所有的虚拟系统是可以相互通信的，但虚拟系统和真实的网络是被隔离开的。可以利用Windows XP里面自带的Internet连接共享(实际上是一个简单的路由NAT)来让虚拟机 通过主机真实的网卡进行外网的访问。虚拟系统的TCP/IP配置信息(如IP地址、网关地址、DNS服务器等)，都是由VMnet1(Host-only)虚拟网络的DHCP服务器来动态分配的。如果你想利用VMware创建一个与网内其他机器相隔离的虚拟系统，进行某些特殊的网络调试工作，可以选择Host-only模式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64345431-f0448a80-d022-11e9-8278-920d6587ca2c.png&#34; alt=&#34;主机模式&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;静态ip设置&#34;&gt;静态ip设置&lt;/h2&gt;&#xA;&lt;p&gt;虚拟机中安装的是Ubuntu18.04，因项目需要对其进行静态IP设置&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-桥接模式&#34;&gt;1. 桥接模式&lt;/h3&gt;&#xA;&lt;p&gt;首先查看虚拟机网络配置信息，选择菜单栏&lt;code&gt;编辑—&amp;gt;虚拟网络编辑器&lt;/code&gt;，在三个网络中选择&lt;code&gt;VMnet0&lt;/code&gt;，桥接模式中选择网卡，我选择了有线网卡，可以根据需要选择无线网卡。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64427296-7f18dc00-d0e3-11e9-8dad-39778fe38ba4.png&#34; alt=&#34;虚拟网络编辑器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其次编辑虚拟机网络模式，点击&lt;code&gt;编辑虚拟机设置&lt;/code&gt;，选择&lt;code&gt;网络适配器&lt;/code&gt;，在&lt;code&gt;网络连接&lt;/code&gt;部分选择&lt;code&gt;桥接模式&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64427318-8c35cb00-d0e3-11e9-9d13-4aaf367e5b7b.png&#34; alt=&#34;虚拟机网络设置&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;###　2. NAT模式&lt;/p&gt;&#xA;&lt;p&gt;首先依然是查看虚拟机网络配置信息，选择菜单栏&lt;code&gt;编辑—&amp;gt;虚拟网络编辑器&lt;/code&gt;，在三个网络中选择&lt;code&gt;VMnet8&lt;/code&gt;，点击&lt;code&gt;NAT设置&lt;/code&gt;，查看并记录子网ip和网关。虚拟网络编辑器中的&lt;code&gt;使用本地DHCP服务将IP地址分配给虚拟机&lt;/code&gt;选项不要取消勾选，因为看到很多教程说要取消勾选，实际上取消掉之后就没网了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;注：这一步是查看，没有需要更改的内容。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64344984-13bb0580-d022-11e9-9a8c-37744441d088.png&#34; alt=&#34;虚拟网络编辑器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后编辑虚拟机网络模式。查看完配置信息后，在要设置静态ip的虚拟机界面下，点击&lt;code&gt;编辑虚拟机设置&lt;/code&gt;，进入后选择&lt;code&gt;网络适配器&lt;/code&gt;，在&lt;code&gt;网络连接&lt;/code&gt;部分从&lt;code&gt;NAT模式&lt;/code&gt;切换到&lt;code&gt;自定义特点虚拟网络&lt;/code&gt;，并选择&lt;code&gt;VMnet8(NAT模式)&lt;/code&gt;。点击确定后退出。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;注：这一步需要在关闭虚拟机的状态下进行，挂起状态无法设置&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20190906_64344983-13bb0580-d022-11e9-896c-4b2149636e34.png&#34; alt=&#34;虚拟机网络适配器设置&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-静态ip设置&#34;&gt;3. 静态ip设置&lt;/h3&gt;&#xA;&lt;p&gt;Ubuntu18.04的静态ip设置是通用的，不因使用虚拟机不同。官方对静态ip设置的说明位于&lt;a href=&#34;https://help.ubuntu.com/lts/serverguide/network-configuration.html&#34;&gt;Network Configuration&lt;/a&gt;，步骤如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用&lt;code&gt;ifconfig&lt;/code&gt;可以查看当前ip和网关地址和网卡名，若有必要可以自己测试一下网络是否畅通。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在&lt;code&gt;/etc/netplan&lt;/code&gt;目录下创建配置文件&lt;code&gt;02_config.yaml&lt;/code&gt;，因为该目录下已有01开头的文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo nano /etc/netplan/02_config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在配置文件中添加如下信息&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;network&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;renderer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networkd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ethernets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ens33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;addresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;m&#34;&gt;192.168.191.4&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/24&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;gateway4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;192.168.191.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;nameservers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;mydomain, otherdomain]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;addresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1.1.1.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8.8.8.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ens33&lt;/code&gt;是网卡名，即之前使用&lt;code&gt;ifconfig&lt;/code&gt;命令查到的ip最前面的字段。addresses下的ip是自定义的静态ip，根据子网ip自己选择设置即可，掩码是24位的。&lt;code&gt;gateway4&lt;/code&gt;就是之前在&lt;code&gt;NAT设置&lt;/code&gt;中看到的网关地址。&lt;code&gt;nameservers&lt;/code&gt;下的&lt;code&gt;addresses&lt;/code&gt;是域名服务器地址，这里写的两个是常用的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植1-移植相关知识</title>
      <link>http://localhost:1313/2018/migration-related-knowledge/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/migration-related-knowledge/</guid>
      <description>&lt;h2 id=&#34;1-linux-操作系统组成&#34;&gt;1. Linux 操作系统组成&lt;/h2&gt;&#xA;&lt;p&gt;Linux 操作系统由 Linux 内核、shell 命令解释器和应用程序3部分构成&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-shell&#34;&gt;1.1 shell&lt;/h3&gt;&#xA;&lt;p&gt;Linux的内核不能直接接受来自终端的用户命令，shell 为用户提供使用 Linux 操作系统的接口。在Linux 中几乎所有的操作都可以通过命令行来完成，使用 shell 编写的程序称为 shell 脚本。shell 可以作为命令语言、命令解释程序及程序设计语言，用户成功登录Linux时系统自动启用shell，当在终端输入正确的shell命令时，shell通过相应的命令和程序，通过内核执行用户需要的操作。更详细的知识可参考 &lt;a href=&#34;https://www.ibm.com/developerworks/cn/linux/l-linux-shells/index.html&#34;&gt;评估Linux中的shell&lt;/a&gt; 一文。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_41342748db2b.gif&#34; alt=&#34;1977年以来的Linux shell&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;几种 shell 的比较表如下&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Shell&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Bourne Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;编程方式占优势，但在与用户交互方面比较差&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Bourne - Again Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;专为 Linux 而写，在 Bourne Shell 基础上增加了功能，是 Linux 默认内核&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;语法类似于 C 语言，有较高的编程能力&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Tcsh&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C shell 的扩展&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Korn Shell&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;集合了 C shell 和 Bourne shell 的优点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;12-linux-内核&#34;&gt;1.2 Linux 内核&lt;/h3&gt;&#xA;&lt;p&gt;Linux 内核是操作系统的核心部分。它由进程管理、文件管理、存储管理、设备管理和网络管理五大部分组成。采用模块化的设计，它的功能也是通过增加和减少模块来实现的。这种设计保证系统封闭和开放与效率的平衡，避免在修剪功能时改变系统结构。&lt;/p&gt;&#xA;&lt;p&gt;Linux 内核最注重的问题是实用和效率，其特点如下&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;整个 Linux 内核由很多过程组成，每个过程可以独立编译，然后用连接程序将其连接在一起成为一个单独的目标程序。&lt;/li&gt;&#xA;&lt;li&gt;Linux 的文件系统最大特点是实现了一种抽象文件模型——VFS。使用虚拟文件系统屏蔽了各种不同文件系统的内在差别，使得用户可以使用同样的方式访问各种不同格式的文件系统，可以毫无区别的在不同格式、不同介质的文件系统之间使用 VFS 提供的统一接口交换数据。&lt;/li&gt;&#xA;&lt;li&gt;为了保证方便的支持新设备、新功能，又不会无限扩大内核规模，Linux 系统对设备驱动或新文件系统等采用了模块化方式，用户在需要时可以动态加载，使用完毕可以动态卸载。同时对内核，用户也可以定制，选择适合自己的功能，将不需要的部分剔除出内核。这两种技术都保证了内核的紧凑性和扩展性。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-u-boot&#34;&gt;2. u-boot&lt;/h2&gt;&#xA;&lt;p&gt;u-boot是在 PPCBOOT 和 ARMBOOT 基础上发展而来的，是一个通用引导程序，支持很多架构，这一点上篇BootLoader已经很明白。u-boot的移植过程是一个对嵌入式系统包括软硬件及操作系统加深理解的一个过程，我们通过这个过程来一点点学习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植2-Debian系统的移植</title>
      <link>http://localhost:1313/2018/migration-of-debian-system/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/migration-of-debian-system/</guid>
      <description>&lt;p&gt;Debian 系统的移植总分四部分：u-boot的编译与烧录，Linux内核的编译与烧录，Debian 基本根文件系统的制作、配置与烧录，开发板设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-u-boot的编译&#34;&gt;1. u-boot的编译&lt;/h2&gt;&#xA;&lt;p&gt;对应于EMSYM的blurr开发板的u-boot项目使用GitHub进行开源维护，&lt;a href=&#34;https://github.com/EMSYM/U-boot&#34;&gt;下载地址&lt;/a&gt;，我的编译环境为Ubuntu16.04 LTS系统&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-下载源码&#34;&gt;1.1 下载源码&lt;/h3&gt;&#xA;&lt;p&gt;方法一：在链接打开后的项目界面依次选择clone or download—&amp;gt;Download ZIP，将源码下载到PC中相应的文件夹（记得解压&amp;hellip;..）&lt;/p&gt;&#xA;&lt;p&gt;方法二：采用git命令（须事先安装git）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone https://github.com/EMSYM/U-boot.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;注：该链接在选中clone or download后可看到&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-分支切换&#34;&gt;1.2 分支切换&lt;/h3&gt;&#xA;&lt;p&gt;在下载好的u-boot项目目录下打开虚拟终端，创建并切换分支&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout -b v4.1 origin/blurr-4.1.15&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_d1bb18bcb403.png&#34; alt=&#34;创建并切换分支&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;13-安装依赖&#34;&gt;1.3 安装依赖&lt;/h3&gt;&#xA;&lt;p&gt;gcc-arm-linux-gnueabi是我们用到的交叉编译器&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt install gcc-arm-linux-gnueabi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install build-essential gcc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;注：Ubuntu缺省情况下，并没有提供C/C++的编译环境，因此还需要手动安装。如果单独安装gcc以及g++比较麻烦，幸运的是，为了能够编译Ubuntu的内核，Ubuntu提供了一个build-essential软件包。因为依赖关系的问题，安装了该软件包，编译c/c++所需要的软件包也都会被安装。因此如果想在Ubuntu中编译c/c++程序，只需要安装该软件包就可以了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_8135c2d310f2.png&#34; alt=&#34;build-essential的依赖关系&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;14-开始编译&#34;&gt;1.4 开始编译&lt;/h3&gt;&#xA;&lt;p&gt;指定核心类型&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nv&#34;&gt;ARCH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;arm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;生成配置文件（用到Makefile，参阅&lt;a href=&#34;https://hacker-yhj.github.io/resources/gun_make.pdf&#34;&gt;GNU make中文手册&lt;/a&gt;）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make mx6dl_blurr_defconfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_c22b1be42612.png&#34; alt=&#34;生成配置文件&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;指定交叉编译前缀，编译u-boot&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make &lt;span class=&#34;nv&#34;&gt;CROSS_COMPILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;arm-linux-gnueabi- &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_967c5a8d8bba.png&#34; alt=&#34;编译通过&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植3-Android系统移植</title>
      <link>http://localhost:1313/2018/android-system-migration/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/android-system-migration/</guid>
      <description>&lt;p&gt;采用Android6.0（棉花糖），编译环境为Ubuntu14.04和opoenjdk-7-jdk&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-获取源码&#34;&gt;1. 获取源码&lt;/h2&gt;&#xA;&lt;p&gt;首先参阅Android网站&lt;a href=&#34;http://source.android.com/source/initializing.html&#34;&gt;source.android.com/source/initializing.html&lt;/a&gt;安装依赖&lt;/p&gt;&#xA;&lt;p&gt;除Android网站要求的软件包，还需要安装如下软件包：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install uuid uuid-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install zlib1g-dev liblz-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install liblzo2-2 liblzo2-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install lzop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install git-core curl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install u-boot-tools&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install mtd-utils&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install android-tools-fsutils&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt-get install openjdk-7-jdK&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取安卓源码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ mkdir myandroid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ mkdir bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myandroid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl https://storage.googleapis.com/git-repo-downloads/repo &amp;gt; ~/bin/repo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ chmod a+x ~/bin/repo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ~/bin/repo init -u https://android.googlesource.com/platform/manifest -b android-6.0.1_r22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ~/bin/repo sync &lt;span class=&#34;c1&#34;&gt;# This command loads most needed repos. Therefore, it can take several hours to load.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取内核源码&lt;/p&gt;</description>
    </item>
    <item>
      <title>系统移植4-内核配置</title>
      <link>http://localhost:1313/2018/linux-lernel-configuration/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2018/linux-lernel-configuration/</guid>
      <description>&lt;p&gt;内核配置的目的主要是裁剪掉不必要的文件和目录，获得一个最适用的操作系统。可通过执行下面的命令进入配置窗口&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ make menuconfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;执行完毕后显示一个基于文本的图形化终端配置菜单，这是是使用最广的配置方法，如果一个.config文件已经存在，它将使用该文件设置那些默认值&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-启动内核配置窗口&#34;&gt;1. 启动内核配置窗口&lt;/h2&gt;&#xA;&lt;p&gt;进入需要被配置的内核的根目录，使用 &lt;code&gt;make menuconfig&lt;/code&gt; 命令启动内核配置窗口，如下图&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_image-20200427162438680.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最上面的标题栏里，.config是核心功能列表档，我们现在就是在对这个文件做处理；x86是我的电脑CPU架构，4.1.15是我现在要配置的这个内核的版本&lt;/p&gt;&#xA;&lt;p&gt;整个界面的用法大概是这样：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;左右方向键：可以移动最底下的 项目；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;上下方向键：可以移动上面框里的蓝色光柱选择选项，该行有箭头 (&amp;mdash;&amp;gt;) 则表示该行内部还有其他细项需要来配置的意思；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选定项目：以上下方向键选择好想要配置的项目之后，以左右方向键选择， 按下回车就可以进入该项目去作更进一步的细节配置；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可挑选功能：在细节项目的配置当中，如果前面有 [ ] 或 &amp;lt; &amp;gt; 符号时，该项目才可以选择， 而选择使用空格键；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;若为 [&lt;em&gt;] &amp;lt;&lt;/em&gt;&amp;gt; 则表示编译进核心；若为则表示编译成模块。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;配置时可以遵循这样的原则：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一定用的功能，编译进核心；&lt;/li&gt;&#xA;&lt;li&gt;未来可能用到的功能，尽量编译为模块&lt;/li&gt;&#xA;&lt;li&gt;不知道用来做什么的功能，看help也看不懂，保留默认值，或者编译为模块&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-具体配置&#34;&gt;2. 具体配置&lt;/h2&gt;&#xA;&lt;p&gt;关于内核配置主选项的记录丢失，只剩关于 General setup 部分的记录。与 Linux 最相关的程序互动、核心版本说明、是否使用发展中程序码等资讯都在该部分配置的。 这里的项目主要都是针对核心与程序之间的相关性来设计的，基本上，保留默认值即可！ 不要随便取消底下的任何一个项目，因为可能会造成某些程序无法被同时运行的困境！ 不过底下有非常多新的功能，如果有不清楚的地方，可以按&lt;code&gt;&amp;lt;help&amp;gt;&lt;/code&gt;进入查阅，里面会有一些建议！ 你可以依据 Help 的建议来选择新功能的启动与否！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picped-1301226557.cos.ap-beijing.myqcloud.com/BC_20180411_03d038acd2f0.png&#34; alt=&#34;General setup 选项&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;cross-compiler tool prefix&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;交叉编译工具前缀，功能是make时自动使用交叉编译器进行编译。比如在这儿填上&lt;em&gt;arm-linux&lt;/em&gt;，相当与编译时使用*make CROSS_COMPILE=arm-linux-*命令。如果你不想自动使用交叉编译工具，此处应该留空&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;compile also drivers which will not load&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;编译驱动程序将不加载，一些驱动可能在其它的编译平台被编译，而这个编译平台跟它的期望运行平台不一样（好像就是交叉编译。。），所以即使这些驱动不能在编译平台加载运行，一些开发者仍然可能想要构建这个驱动来进行编译测试（就是看看它到底能不能编译通过，没打算让它运行么）所以，根据你的需求来选择好了，这个一般是不选。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Local version - append to kernel release&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
